<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘楠的博客</title>
  <subtitle>热爱生活</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ln0491.github.io/"/>
  <updated>2017-03-03T07:06:55.198Z</updated>
  <id>https://ln0491.github.io/</id>
  
  <author>
    <name>Liu Nan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spring-boot入门六springboot + devtools热部署</title>
    <link href="https://ln0491.github.io/2017/03/03/spring-boot%E5%85%A5%E9%97%A8%E5%85%ADspringboot-devtools%E7%83%AD%E9%83%A8%E7%BD%B2/"/>
    <id>https://ln0491.github.io/2017/03/03/spring-boot入门六springboot-devtools热部署/</id>
    <published>2017-03-03T06:47:20.000Z</published>
    <updated>2017-03-03T07:06:55.198Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Developer-tools"><a href="#Developer-tools" class="headerlink" title="Developer tools"></a>Developer tools</h4><p>pring-boot-devtools 是一个为开发者服务的一个模块，其中最重要的功能就是自动应用代码更改到最新的App上面去。原理是在发现代码有更改之后，重新启动应用，但是比速度比手动停止后再启动还要更快，更快指的不是节省出来的手工操作的时间。</p>
<p>只需要添加依赖即可<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">       &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">       &lt;artifactId&gt;spring-boot-devtools&lt;/artifactId&gt;</div><div class="line">       &lt;optional&gt;true&lt;/optional&gt;</div><div class="line">   &lt;/dependency&gt;</div></pre></td></tr></table></figure></p>
<p>测试方法：</p>
<ul>
<li>修改类–&gt;保存：应用会重启</li>
<li>修改配置文件–&gt;保存：应用会重启</li>
</ul>
<h4 id="排除静态资源"><a href="#排除静态资源" class="headerlink" title="排除静态资源"></a>排除静态资源</h4><p>Excluding resources<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Certain resources don’t necessarily need to trigger a restart when they are changed. For example, Thymeleaf templates can just be edited in-place. By default changing resources in /META-INF/maven, /META-INF/resources ,/resources ,/static ,/public or /templates will not trigger a restart but will trigger a live reload. If you want to customize these exclusions you can use the spring.devtools.restart.exclude property. For example, to exclude only /static and /public you would set the following:</div></pre></td></tr></table></figure></p>
<p>建议我们将静态资源放在以下目录</p>
<ul>
<li>/META-INF/maven</li>
<li>/META-INF/resources</li>
<li>/resources</li>
<li>/static</li>
<li>/public</li>
<li>/templates</li>
</ul>
<p>根据个人喜好，可以放置，<br>在application.properties中配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spring.devtools.restart.exclude=static/**,public/**</div></pre></td></tr></table></figure></p>
<p>静态资源更改好，应用不会重启</p>
<p>spring默认，已经设置了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties # Patterns that should be excluded from triggering a full restart.</div><div class="line">spring.devtools.restart.poll-interval=1000 # Amount of time (in milliseconds) to wait between polling for classpath changes.</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;Developer-tools&quot;&gt;&lt;a href=&quot;#Developer-tools&quot; class=&quot;headerlink&quot; title=&quot;Developer tools&quot;&gt;&lt;/a&gt;Developer tools&lt;/h4&gt;&lt;p&gt;pring-boot-devtool
    
    </summary>
    
      <category term="spring-boot" scheme="https://ln0491.github.io/categories/spring-boot/"/>
    
    
      <category term="spring-boot" scheme="https://ln0491.github.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>如何用Java类配置Spring MVC(不通过web.xml和XML方式)</title>
    <link href="https://ln0491.github.io/2017/03/02/%E5%A6%82%E4%BD%95%E7%94%A8Java%E7%B1%BB%E9%85%8D%E7%BD%AESpring-MVC-%E4%B8%8D%E9%80%9A%E8%BF%87web-xml%E5%92%8CXML%E6%96%B9%E5%BC%8F/"/>
    <id>https://ln0491.github.io/2017/03/02/如何用Java类配置Spring-MVC-不通过web-xml和XML方式/</id>
    <published>2017-03-02T09:50:48.000Z</published>
    <updated>2017-03-02T09:52:41.399Z</updated>
    
    <content type="html"><![CDATA[<h3 id="如何用Java类配置Spring-MVC-不通过web-xml和XML方式"><a href="#如何用Java类配置Spring-MVC-不通过web-xml和XML方式" class="headerlink" title="如何用Java类配置Spring MVC(不通过web.xml和XML方式)"></a>如何用Java类配置Spring MVC(不通过web.xml和XML方式)</h3><h4 id="建立普通MAVEN项目配置POM"><a href="#建立普通MAVEN项目配置POM" class="headerlink" title="建立普通MAVEN项目配置POM"></a>建立普通MAVEN项目配置POM</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div></pre></td><td class="code"><pre><div class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</div><div class="line">	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line">	&lt;groupId&gt;com.ghg&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;chart04&lt;/artifactId&gt;</div><div class="line">	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</div><div class="line">	&lt;packaging&gt;war&lt;/packaging&gt;</div><div class="line"></div><div class="line">	&lt;properties&gt;</div><div class="line">		&lt;!-- generic --&gt;</div><div class="line">		&lt;java.version&gt;1.7&lt;/java.version&gt;</div><div class="line">		&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</div><div class="line">		&lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</div><div class="line">		&lt;!-- web jsp --&gt;</div><div class="line">		&lt;jsp.version&gt;2.2&lt;/jsp.version&gt;</div><div class="line">		&lt;jstl.verison&gt;1.2&lt;/jstl.verison&gt;</div><div class="line">		&lt;servlet.version&gt;3.1.0&lt;/servlet.version&gt;</div><div class="line"></div><div class="line">		&lt;!--spring --&gt;</div><div class="line">		&lt;spring-framework.version&gt;4.3.6.RELEASE&lt;/spring-framework.version&gt;</div><div class="line">		&lt;!--logging --&gt;</div><div class="line">		&lt;logback.version&gt;1.2.1&lt;/logback.version&gt;</div><div class="line">		&lt;slf4j.version&gt;1.7.23&lt;/slf4j.version&gt;</div><div class="line">		&lt;log4j.version&gt;1.2.17&lt;/log4j.version&gt;</div><div class="line">	&lt;/properties&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;dependencies&gt;</div><div class="line">		&lt;!-- javax --&gt;</div><div class="line"></div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;javax&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;javaee-web-api&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;7.0&lt;/version&gt;</div><div class="line">			&lt;scope&gt;provided&lt;/scope&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line">		&lt;!-- spring --&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-context&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;spring-framework.version&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;spring-framework.version&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-tx&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;spring-framework.version&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;!--other web dependency --&gt;</div><div class="line"></div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;javax.servlet.jsp&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;jsp-api&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;jsp.version&#125;&lt;/version&gt;</div><div class="line">			&lt;scope&gt;provided&lt;/scope&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;javax.servlet&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;jstl&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;jstl.verison&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;!-- servlet --&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;javax.servlet&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;javax.servlet-api&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;servlet.version&#125;&lt;/version&gt;</div><div class="line">			&lt;scope&gt;provided&lt;/scope&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line">		&lt;!-- logging --&gt;</div><div class="line">		&lt;!-- SLF4J和logback --&gt;</div><div class="line"></div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;slf4j.version&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;!-- logback --&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;logback.version&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;logback-core&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;logback.version&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;logback-access&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;logback.version&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;log4j&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;log4j&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;log4j.version&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		</div><div class="line">		&lt;!-- jackson --&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;2.8.6&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">	&lt;/dependencies&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;build&gt;</div><div class="line">		&lt;finalName&gt;char04&lt;/finalName&gt;</div><div class="line">		&lt;plugins&gt;</div><div class="line">			&lt;plugin&gt;</div><div class="line">				&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class="line">				&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;</div><div class="line">				&lt;version&gt;3.6.1&lt;/version&gt;</div><div class="line">				&lt;configuration&gt;</div><div class="line">					&lt;source&gt;$&#123;java.version&#125;&lt;/source&gt;</div><div class="line">					&lt;target&gt;$&#123;java.version&#125;&lt;/target&gt;</div><div class="line">					&lt;encoding&gt;UTF-8&lt;/encoding&gt;</div><div class="line">				&lt;/configuration&gt;</div><div class="line">			&lt;/plugin&gt;</div><div class="line"></div><div class="line">			&lt;plugin&gt;</div><div class="line">				&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</div><div class="line">				&lt;artifactId&gt;maven-war-plugin&lt;/artifactId&gt;</div><div class="line">				&lt;version&gt;3.0.0&lt;/version&gt;</div><div class="line">				&lt;configuration&gt;</div><div class="line">					&lt;failOnMissingWebXml&gt;false&lt;/failOnMissingWebXml&gt;</div><div class="line">				&lt;/configuration&gt;</div><div class="line">			&lt;/plugin&gt;</div><div class="line"></div><div class="line">			&lt;!-- &lt;plugin&gt;</div><div class="line">				&lt;groupId&gt;org.mortbay.jetty&lt;/groupId&gt;</div><div class="line">				&lt;artifactId&gt;jetty-maven-plugin&lt;/artifactId&gt;</div><div class="line">				&lt;version&gt;8.1.14.v20131031&lt;/version&gt;</div><div class="line">				&lt;configuration&gt;</div><div class="line">					&lt;scanIntervalSeconds&gt;600&lt;/scanIntervalSeconds&gt;</div><div class="line">					&lt;scanTargetPatterns&gt;</div><div class="line">						&lt;scanTargetPattern&gt;</div><div class="line">							&lt;directory&gt;src/main/webapp&lt;/directory&gt;</div><div class="line">							&lt;includes&gt;</div><div class="line">								&lt;include&gt;**/*.xml&lt;/include&gt;</div><div class="line">								&lt;include&gt;**/*.properties&lt;/include&gt;</div><div class="line">								&lt;include&gt;**/*.tld&lt;/include&gt;</div><div class="line">							&lt;/includes&gt;</div><div class="line">						&lt;/scanTargetPattern&gt;</div><div class="line">					&lt;/scanTargetPatterns&gt;</div><div class="line">					&lt;webAppConfig&gt;</div><div class="line">						&lt;contextPath&gt;/char04&lt;/contextPath&gt;</div><div class="line">					&lt;/webAppConfig&gt;</div><div class="line">					&lt;connectors&gt;</div><div class="line">						&lt;connector implementation=&quot;org.eclipse.jetty.server.nio.SelectChannelConnector&quot;&gt;</div><div class="line">							&lt;port&gt;9090&lt;/port&gt;</div><div class="line">							&lt;maxIdleTime&gt;60000&lt;/maxIdleTime&gt;</div><div class="line">						&lt;/connector&gt;</div><div class="line">					&lt;/connectors&gt;</div><div class="line">				&lt;/configuration&gt;</div><div class="line">			&lt;/plugin&gt; --&gt;</div><div class="line">		&lt;/plugins&gt;</div><div class="line">	&lt;/build&gt;</div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure>
<h4 id="配置DispatcherServlet-需要创建一个Web初始化类"><a href="#配置DispatcherServlet-需要创建一个Web初始化类" class="headerlink" title="配置DispatcherServlet. 需要创建一个Web初始化类"></a>配置DispatcherServlet. 需要创建一个Web初始化类</h4><p>MyMVCConfig extends WebMvcConfigurerAdapter 继承WebMvcConfigurerAdapter<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">package com.ghg.chart04.config;</div><div class="line"></div><div class="line">import org.springframework.context.annotation.Bean;</div><div class="line">import org.springframework.context.annotation.ComponentScan;</div><div class="line">import org.springframework.context.annotation.Configuration;</div><div class="line">import org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer;</div><div class="line">import org.springframework.web.servlet.config.annotation.EnableWebMvc;</div><div class="line">import org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter;</div><div class="line">import org.springframework.web.servlet.view.InternalResourceViewResolver;</div><div class="line">import org.springframework.web.servlet.view.JstlView;</div><div class="line"></div><div class="line">@Configuration</div><div class="line">@EnableWebMvc</div><div class="line">@ComponentScan(&quot;com.ghg.chart04.controller&quot;)</div><div class="line">public class MyMVCConfig extends WebMvcConfigurerAdapter &#123;</div><div class="line">	@Bean</div><div class="line">	public InternalResourceViewResolver viewResolver() &#123;</div><div class="line">		InternalResourceViewResolver resolver = new InternalResourceViewResolver();</div><div class="line"></div><div class="line">		resolver.setPrefix(&quot;/WEB-INF/classes/views&quot;);</div><div class="line">		resolver.setSuffix(&quot;.jsp&quot;);</div><div class="line">		resolver.setViewClass(JstlView.class);</div><div class="line">		resolver.setExposeContextBeansAsAttributes(true);</div><div class="line">		return resolver;</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">	// 配置静态资源的处理</div><div class="line">	@Override</div><div class="line">	public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer) &#123;</div><div class="line">		configurer.enable(); // 对静态资源的请求转发到容器缺省的servlet，而不使用DispatcherServlet</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="配置启动配置类RootConfig"><a href="#配置启动配置类RootConfig" class="headerlink" title="配置启动配置类RootConfig"></a>配置启动配置类RootConfig</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">package com.ghg.chart04.init;</div><div class="line"></div><div class="line">import org.springframework.context.annotation.ComponentScan;</div><div class="line">import org.springframework.context.annotation.ComponentScan.Filter;</div><div class="line">import org.springframework.context.annotation.Configuration;</div><div class="line">import org.springframework.context.annotation.FilterType;</div><div class="line">import org.springframework.web.servlet.config.annotation.EnableWebMvc;</div><div class="line"></div><div class="line">@Configuration</div><div class="line">@ComponentScan(basePackages=&#123;&quot;com.ghg.chart04&quot;&#125;,excludeFilters=&#123;@Filter(type=FilterType.ANNOTATION,value=EnableWebMvc.class)&#125;)</div><div class="line">public class RootConfig &#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line">/**</div><div class="line">	 * 用来配置servcie与dao 业务数据</div><div class="line">	 */</div></pre></td></tr></table></figure>
<h4 id="配置Spring-MVC视图解析WebConfig-java-需要要创建一个类继承自WebMvcConfigurerAdapter"><a href="#配置Spring-MVC视图解析WebConfig-java-需要要创建一个类继承自WebMvcConfigurerAdapter" class="headerlink" title="配置Spring MVC视图解析WebConfig.java, 需要要创建一个类继承自WebMvcConfigurerAdapter"></a>配置Spring MVC视图解析WebConfig.java, 需要要创建一个类继承自WebMvcConfigurerAdapter</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">package com.ghg.chart04.init;</div><div class="line"></div><div class="line"></div><div class="line">import org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer;</div><div class="line"></div><div class="line">import com.ghg.chart04.config.MyMVCConfig;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">public class WebInitializer extends AbstractAnnotationConfigDispatcherServletInitializer  &#123;</div><div class="line">/**</div><div class="line">	 * 用来配置servcie与dao 业务数据</div><div class="line">	 */</div><div class="line">	@Override</div><div class="line">	protected Class&lt;?&gt;[] getRootConfigClasses() &#123;</div><div class="line">		return new Class&lt;?&gt;[] &#123; RootConfig.class &#125;; //启动配置类</div><div class="line">	&#125;</div><div class="line">	/**</div><div class="line">	 * 用来配置MVC中的Class，也是就Controller</div><div class="line">	 */</div><div class="line">	@Override</div><div class="line">	protected Class&lt;?&gt;[] getServletConfigClasses() &#123;</div><div class="line">		 return new Class&lt;?&gt;[] &#123; MyMVCConfig.class &#125;;        //ָ指定Web配置类</div><div class="line">	&#125;</div><div class="line">/**</div><div class="line">	 * 将DispatcherServlet映射到/</div><div class="line">	 */</div><div class="line">	@Override</div><div class="line">	protected String[] getServletMappings() &#123;</div><div class="line">		return new String[]&#123;&quot;/&quot;&#125;;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>至此, 传统方式中需要通过web.xml进行配置的东西就已将全部完成有上面三个java类(WebInitializer , RootConfig, MyMVCConfig )完成. 可以开始写Controller和页面代码了</p>
<h3 id="控制器和页面"><a href="#控制器和页面" class="headerlink" title="控制器和页面"></a>控制器和页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">package com.ghg.chart04.controller;</div><div class="line"></div><div class="line">import javax.servlet.http.HttpServletRequest;</div><div class="line"></div><div class="line">import org.springframework.web.bind.annotation.RequestMapping;</div><div class="line">import org.springframework.web.bind.annotation.RestController;</div><div class="line"></div><div class="line">@RestController</div><div class="line">public class HelloController &#123;</div><div class="line"></div><div class="line">	</div><div class="line">	@RequestMapping(value=&quot;/hello&quot;)</div><div class="line">	public Map&lt;String, String&gt; hello(HttpServletRequest request)&#123;</div><div class="line">		</div><div class="line">		Map&lt;String, String&gt; params = new HashMap&lt;String, String&gt;();</div><div class="line">		params.put(&quot;title&quot;, &quot;hello&quot;);</div><div class="line">		params.put(&quot;result&quot;, &quot;中奖了&quot;);</div><div class="line">		return params;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">``` </div><div class="line"></div><div class="line">jsp</div></pre></td></tr></table></figure>
<p>&lt;%@ page language=”java” contentType=”text/html; charset=UTF-8”<br>    pageEncoding=”UTF-8”%&gt;<br>&lt;!DOCTYPE html PUBLIC “-//W3C//DTD HTML 4.01 Transitional//EN” “<a href="http://www.w3.org/TR/html4/loose.dtd&quot;&gt;" target="_blank" rel="external">http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</a></p>
<p><html></html></p>
<p><head></head></p>
<p><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"></p>
<p><title>Welcome</title><br></p>
<p><body></body></p>
<p><pre>Welcome to Spring MVC!</pre><br><br><br>```<br><img src="http://img.blog.csdn.net/20170223152815739?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQva28wNDkx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
<p><img src="http://img.blog.csdn.net/20170223152921834?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQva28wNDkx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"><br><img src="http://img.blog.csdn.net/20170223153434059?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQva28wNDkx/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="这里写图片描述"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;如何用Java类配置Spring-MVC-不通过web-xml和XML方式&quot;&gt;&lt;a href=&quot;#如何用Java类配置Spring-MVC-不通过web-xml和XML方式&quot; class=&quot;headerlink&quot; title=&quot;如何用Java类配置Spring M
    
    </summary>
    
      <category term="spring" scheme="https://ln0491.github.io/categories/spring/"/>
    
    
      <category term="spring" scheme="https://ln0491.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot入门五日志</title>
    <link href="https://ln0491.github.io/2017/03/01/spring-boot%E5%85%A5%E9%97%A8%E4%BA%94%E6%97%A5%E5%BF%97/"/>
    <id>https://ln0491.github.io/2017/03/01/spring-boot入门五日志/</id>
    <published>2017-03-01T08:20:19.000Z</published>
    <updated>2017-03-01T08:27:25.554Z</updated>
    
    <content type="html"><![CDATA[<h3 id="spring-boot入门五日志"><a href="#spring-boot入门五日志" class="headerlink" title="spring-boot入门五日志"></a>spring-boot入门五日志</h3><h5 id="日志设置"><a href="#日志设置" class="headerlink" title="日志设置"></a>日志设置</h5><p>spring boot默认使用logback做为日志框架<br>Spring boot索马里Java Util loggin,log4j,log4j2,logback日志框架,<br>无论使用哪种日志框架，Spring-boot已经为当前使用的日志的控制台输出及输入文件做好了配置</p>
<p>需要改变，要自己配置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># LOGGING</div><div class="line">logging.config=classpath:config/logback.xml</div></pre></td></tr></table></figure></p>
<p>logback.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;configuration scan=&quot;true&quot; scanPeriod=&quot;30 seconds&quot;&gt;</div><div class="line">	&lt;contextName&gt;bt&lt;/contextName&gt;</div><div class="line">	&lt;property name=&quot;log_base&quot; value=&quot;$&#123;catalina.base&#125;/logs/bt&quot; /&gt;</div><div class="line">	&lt;!-- 控制台输出日志 --&gt;</div><div class="line">	&lt;appender name=&quot;console&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</div><div class="line">		&lt;encoder&gt;</div><div class="line">			&lt;pattern&gt;%date&#123;HH:mm:ss&#125; %-5level %logger&#123;0&#125; - %msg%n&lt;/pattern&gt;</div><div class="line">		&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line">	&lt;appender name=&quot;rollingFile&quot;</div><div class="line">		class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</div><div class="line">		&lt;file&gt;$&#123;log_base&#125;/log.log&lt;/file&gt;</div><div class="line">		&lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</div><div class="line">			&lt;fileNamePattern&gt;$&#123;log_base&#125;/log%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</div><div class="line">			&lt;maxHistory&gt;90&lt;/maxHistory&gt;</div><div class="line">		&lt;/rollingPolicy&gt;</div><div class="line">		&lt;encoder&gt;</div><div class="line">			&lt;pattern&gt;%date %-5level %logger&#123;0&#125; - %msg%n&lt;/pattern&gt;</div><div class="line">			&lt;charset&gt;UTF-8&lt;/charset&gt;</div><div class="line">		&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line">	&lt;appender name=&quot;operateLogFile&quot;</div><div class="line">		class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</div><div class="line">		&lt;file&gt;$&#123;log_base&#125;/operate/optlog.log&lt;/file&gt;</div><div class="line">		&lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</div><div class="line">			&lt;fileNamePattern&gt;$&#123;log_base&#125;/operate/optlog%d&#123;yyyy-MM-dd&#125;.log&lt;/fileNamePattern&gt;</div><div class="line">		&lt;/rollingPolicy&gt;</div><div class="line">		&lt;encoder&gt;</div><div class="line">			&lt;pattern&gt;%date %-5level - %msg%n&lt;/pattern&gt;</div><div class="line">			&lt;charset&gt;UTF-8&lt;/charset&gt;</div><div class="line">		&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line"></div><div class="line">	&lt;!-- project default level --&gt;</div><div class="line">	&lt;logger name=&quot;org.springframework&quot; level=&quot;warn&quot; /&gt;</div><div class="line">	&lt;logger name=&quot;org.springframework.jdbc&quot; level=&quot;warn&quot; /&gt;</div><div class="line">	&lt;logger name=&quot;operateLog&quot; level=&quot;debug&quot; additivity=&quot;false&quot;&gt;</div><div class="line">		&lt;appender-ref ref=&quot;operateLogFile&quot; /&gt;</div><div class="line">	&lt;/logger&gt;</div><div class="line">	&lt;root level=&quot;info&quot;&gt;</div><div class="line">		&lt;appender-ref ref=&quot;rollingFile&quot; /&gt;</div><div class="line">		&lt;appender-ref ref=&quot;console&quot;/&gt;</div><div class="line">	&lt;/root&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;spring-boot入门五日志&quot;&gt;&lt;a href=&quot;#spring-boot入门五日志&quot; class=&quot;headerlink&quot; title=&quot;spring-boot入门五日志&quot;&gt;&lt;/a&gt;spring-boot入门五日志&lt;/h3&gt;&lt;h5 id=&quot;日志设置&quot;&gt;&lt;a 
    
    </summary>
    
      <category term="spring-boot" scheme="https://ln0491.github.io/categories/spring-boot/"/>
    
    
      <category term="spring-boot" scheme="https://ln0491.github.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot入门四自定义属性</title>
    <link href="https://ln0491.github.io/2017/03/01/spring-boot%E5%85%A5%E9%97%A8%E5%9B%9B%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B1%9E%E6%80%A7/"/>
    <id>https://ln0491.github.io/2017/03/01/spring-boot入门四自定义属性/</id>
    <published>2017-03-01T06:29:28.000Z</published>
    <updated>2017-03-01T07:32:18.438Z</updated>
    
    <content type="html"><![CDATA[<h3 id="spring-boot入门四自定义属性"><a href="#spring-boot入门四自定义属性" class="headerlink" title="spring-boot入门四自定义属性"></a>spring-boot入门四自定义属性</h3><h4 id="新建application-properties"><a href="#新建application-properties" class="headerlink" title="新建application.properties"></a>新建application.properties</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">book.author=john</div><div class="line">book.name=Spring boot入门自定义属性</div><div class="line">book.price=18.3</div></pre></td></tr></table></figure>
<h4 id="修改Contoller"><a href="#修改Contoller" class="headerlink" title="修改Contoller"></a>修改Contoller</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">@Value(&quot;$&#123;book.author&#125;&quot;)</div><div class="line">private String bookAuthor;</div><div class="line">@Value(&quot;$&#123;book.name&#125;&quot;)</div><div class="line">private String bookName;</div><div class="line">@Value(&quot;$&#123;book.price&#125;&quot;)</div><div class="line">private Double bookPrice;</div><div class="line"></div><div class="line">@RequestMapping(value=&quot;/index&quot;,method=RequestMethod.GET)</div><div class="line">public String index(HttpServletRequest request)&#123;</div><div class="line">	return &quot;Hello Spring boot&quot;+bookAuthor+&quot;--&gt;&quot;+bookName+&quot;--&gt;&quot;+bookPrice;</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>访问<a href="http://localhost:8080/index" target="_blank" rel="external">http://localhost:8080/index</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hello Spring bootjohn--&gt;Spring boot入门自定义属性--&gt;18.3</div></pre></td></tr></table></figure></p>
<h4 id="多个属性-ConfigurationProperties指定前后缀来读取"><a href="#多个属性-ConfigurationProperties指定前后缀来读取" class="headerlink" title="多个属性 ConfigurationProperties指定前后缀来读取"></a>多个属性 ConfigurationProperties指定前后缀来读取</h4><p>如果很多属性的话，使用VALUE就比较麻烦</p>
<ul>
<li><p>建立实体类</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">package com.ghgcn.bt.domain;</div><div class="line"></div><div class="line">import org.springframework.boot.context.properties.ConfigurationProperties;</div><div class="line">import org.springframework.stereotype.Component;</div><div class="line"></div><div class="line">/**</div><div class="line"> * </div><div class="line">* @ClassName: Book</div><div class="line">* @Description: @Component 表示是Spring的组件</div><div class="line">* @ConfigurationProperties 加载固定的application.properties属性文件</div><div class="line">* </div><div class="line">* @author 刘楠</div><div class="line">* @date 2017-3-1 下午3:03:46</div><div class="line">*</div><div class="line"> */</div><div class="line">@Component</div><div class="line">@ConfigurationProperties(prefix=&quot;book&quot;)</div><div class="line">public class Book &#123;</div><div class="line"></div><div class="line">	</div><div class="line">	private String author;</div><div class="line">	</div><div class="line">	private String name;</div><div class="line">	</div><div class="line">	private Double price;</div><div class="line"></div><div class="line">	public String getAuthor() &#123;</div><div class="line">		return author;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setAuthor(String author) &#123;</div><div class="line">		this.author = author;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getName() &#123;</div><div class="line">		return name;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setName(String name) &#123;</div><div class="line">		this.name = name;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public Double getPrice() &#123;</div><div class="line">		return price;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setPrice(Double price) &#123;</div><div class="line">		this.price = price;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public String toString() &#123;</div><div class="line">		return &quot;Book [author=&quot; + author + &quot;, name=&quot; + name + &quot;, price=&quot; + price + &quot;]&quot;;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>注入Controller</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">@RestController</div><div class="line">public class IndexController &#123;</div><div class="line"></div><div class="line">	@Autowired</div><div class="line">	private Book book;</div><div class="line">	</div><div class="line">	@RequestMapping(value=&quot;/index&quot;,method=RequestMethod.GET)</div><div class="line">	public String index(HttpServletRequest request)&#123;</div><div class="line">		return &quot;Hello Spring boot&quot;+book.toString();</div><div class="line">		</div><div class="line">	&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>访问<a href="http://localhost:8080/index" target="_blank" rel="external">http://localhost:8080/index</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hello Spring bootBook [author=john, name=Spring boot入门自定义属性, price=18.3]</div></pre></td></tr></table></figure></p>
<h4 id="其它指定的properties"><a href="#其它指定的properties" class="headerlink" title="其它指定的properties"></a>其它指定的properties</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">@Component</div><div class="line">@ConfigurationProperties(prefix=&quot;book&quot;)</div><div class="line">@PropertySource(value=&#123;&quot;classpath:config/author.properties&quot;&#125;)</div><div class="line">public class Book &#123;</div><div class="line"></div><div class="line">	</div><div class="line">	private String author;</div><div class="line">	</div><div class="line">	private String name;</div><div class="line">	</div><div class="line">	private Double price;</div></pre></td></tr></table></figure>
<p>内容如上<br>这里要注意哦，有一个问题，如果你使用的是1.5以前的版本，那么可以通过locations指定properties文件的位置，这样：<br>@ConfigurationProperties(prefix = “config2”,locations=”classpath:config/author.properties”)<br>但是1.5版本后就没有这个属性了，找了半天发现添加@Configuration和@PropertySource(“classpath:test.properties”)后才可以读取。</p>
<p>访问<a href="http://localhost:8080/index" target="_blank" rel="external">http://localhost:8080/index</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Hello Spring bootBook [author=john, name=Spring boot入门自定义属性, price=18.3]</div></pre></td></tr></table></figure></p>
<p>####配置随机值<br>rd.properties<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">dudu.secret=$&#123;random.value&#125;</div><div class="line">dudu.numb=$&#123;random.int&#125;</div><div class="line">dudu.bignumber=$&#123;random.long&#125;</div><div class="line">dudu.uuid=$&#123;random.uuid&#125;</div><div class="line">dudu.number.less.than.ten=$&#123;random.int(10)&#125;</div><div class="line">dudu.num.in.range=$&#123;random.int[1024,65536]&#125;</div></pre></td></tr></table></figure></p>
<p>类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">@ConfigurationProperties(prefix=&quot;dudu&quot;)</div><div class="line">@PropertySource(value=&#123;&quot;classpath:config/rd.properties&quot;&#125;)</div><div class="line">@Component</div><div class="line">public class Dudu &#123;</div><div class="line">	private String secret;</div><div class="line">	private int numb;</div><div class="line">	private long bignumber;</div><div class="line">	private String uuid;</div><div class="line">	private boolean number;</div><div class="line">	private int num;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;spring-boot入门四自定义属性&quot;&gt;&lt;a href=&quot;#spring-boot入门四自定义属性&quot; class=&quot;headerlink&quot; title=&quot;spring-boot入门四自定义属性&quot;&gt;&lt;/a&gt;spring-boot入门四自定义属性&lt;/h3&gt;&lt;h4 i
    
    </summary>
    
      <category term="spring-boot" scheme="https://ln0491.github.io/categories/spring-boot/"/>
    
    
      <category term="spring-boot" scheme="https://ln0491.github.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot入门三使用xml配置</title>
    <link href="https://ln0491.github.io/2017/03/01/spring-boot%E5%85%A5%E9%97%A8%E4%B8%89%E4%BD%BF%E7%94%A8xml%E9%85%8D%E7%BD%AE/"/>
    <id>https://ln0491.github.io/2017/03/01/spring-boot入门三使用xml配置/</id>
    <published>2017-03-01T06:28:39.000Z</published>
    <updated>2017-03-01T06:39:50.171Z</updated>
    
    <content type="html"><![CDATA[<h3 id="spring-boot入门三使用xml配置"><a href="#spring-boot入门三使用xml配置" class="headerlink" title="spring-boot入门三使用xml配置"></a>spring-boot入门三使用xml配置</h3><p>Spring-boot提倡0配置，但有时候需要XML之类的配置，这里需要导入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">@ImportResource(value=&#123;&quot;classpath:some.xml&quot;,&quot;classpath:/config/test.xml&quot;&#125;)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;spring-boot入门三使用xml配置&quot;&gt;&lt;a href=&quot;#spring-boot入门三使用xml配置&quot; class=&quot;headerlink&quot; title=&quot;spring-boot入门三使用xml配置&quot;&gt;&lt;/a&gt;spring-boot入门三使用xml配置&lt;/
    
    </summary>
    
      <category term="spring-boot" scheme="https://ln0491.github.io/categories/spring-boot/"/>
    
    
      <category term="spring-boot" scheme="https://ln0491.github.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot常配置文件属性</title>
    <link href="https://ln0491.github.io/2017/03/01/spring-boot%E5%B8%B8%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7/"/>
    <id>https://ln0491.github.io/2017/03/01/spring-boot常配置文件属性/</id>
    <published>2017-03-01T02:20:13.000Z</published>
    <updated>2017-03-01T02:20:58.871Z</updated>
    
    <content type="html"><![CDATA[<h3 id="spring-boot常配置文件属性"><a href="#spring-boot常配置文件属性" class="headerlink" title="spring-boot常配置文件属性"></a>spring-boot常配置文件属性</h3><p>来源<br><a href="http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html" target="_blank" rel="external">http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div><div class="line">747</div><div class="line">748</div><div class="line">749</div><div class="line">750</div><div class="line">751</div><div class="line">752</div><div class="line">753</div><div class="line">754</div><div class="line">755</div><div class="line">756</div><div class="line">757</div><div class="line">758</div><div class="line">759</div><div class="line">760</div><div class="line">761</div><div class="line">762</div><div class="line">763</div><div class="line">764</div><div class="line">765</div><div class="line">766</div><div class="line">767</div><div class="line">768</div><div class="line">769</div><div class="line">770</div><div class="line">771</div><div class="line">772</div><div class="line">773</div><div class="line">774</div><div class="line">775</div><div class="line">776</div><div class="line">777</div><div class="line">778</div><div class="line">779</div><div class="line">780</div><div class="line">781</div><div class="line">782</div><div class="line">783</div><div class="line">784</div><div class="line">785</div><div class="line">786</div><div class="line">787</div><div class="line">788</div><div class="line">789</div><div class="line">790</div><div class="line">791</div><div class="line">792</div><div class="line">793</div><div class="line">794</div><div class="line">795</div><div class="line">796</div><div class="line">797</div><div class="line">798</div><div class="line">799</div><div class="line">800</div><div class="line">801</div><div class="line">802</div><div class="line">803</div><div class="line">804</div><div class="line">805</div><div class="line">806</div><div class="line">807</div><div class="line">808</div><div class="line">809</div><div class="line">810</div><div class="line">811</div><div class="line">812</div><div class="line">813</div><div class="line">814</div><div class="line">815</div><div class="line">816</div><div class="line">817</div><div class="line">818</div><div class="line">819</div><div class="line">820</div><div class="line">821</div><div class="line">822</div><div class="line">823</div><div class="line">824</div><div class="line">825</div><div class="line">826</div><div class="line">827</div><div class="line">828</div><div class="line">829</div><div class="line">830</div><div class="line">831</div><div class="line">832</div><div class="line">833</div><div class="line">834</div><div class="line">835</div><div class="line">836</div><div class="line">837</div><div class="line">838</div><div class="line">839</div><div class="line">840</div><div class="line">841</div><div class="line">842</div><div class="line">843</div><div class="line">844</div><div class="line">845</div><div class="line">846</div><div class="line">847</div><div class="line">848</div><div class="line">849</div><div class="line">850</div><div class="line">851</div><div class="line">852</div><div class="line">853</div><div class="line">854</div><div class="line">855</div><div class="line">856</div><div class="line">857</div><div class="line">858</div><div class="line">859</div><div class="line">860</div><div class="line">861</div><div class="line">862</div><div class="line">863</div><div class="line">864</div><div class="line">865</div><div class="line">866</div><div class="line">867</div><div class="line">868</div><div class="line">869</div><div class="line">870</div><div class="line">871</div><div class="line">872</div><div class="line">873</div><div class="line">874</div><div class="line">875</div><div class="line">876</div><div class="line">877</div><div class="line">878</div><div class="line">879</div><div class="line">880</div><div class="line">881</div><div class="line">882</div><div class="line">883</div><div class="line">884</div><div class="line">885</div><div class="line">886</div><div class="line">887</div><div class="line">888</div><div class="line">889</div><div class="line">890</div><div class="line">891</div><div class="line">892</div><div class="line">893</div><div class="line">894</div><div class="line">895</div><div class="line">896</div><div class="line">897</div><div class="line">898</div><div class="line">899</div><div class="line">900</div><div class="line">901</div><div class="line">902</div><div class="line">903</div><div class="line">904</div><div class="line">905</div><div class="line">906</div><div class="line">907</div><div class="line">908</div><div class="line">909</div><div class="line">910</div><div class="line">911</div><div class="line">912</div><div class="line">913</div><div class="line">914</div><div class="line">915</div><div class="line">916</div><div class="line">917</div><div class="line">918</div><div class="line">919</div><div class="line">920</div><div class="line">921</div><div class="line">922</div><div class="line">923</div><div class="line">924</div><div class="line">925</div><div class="line">926</div><div class="line">927</div><div class="line">928</div><div class="line">929</div><div class="line">930</div><div class="line">931</div><div class="line">932</div><div class="line">933</div><div class="line">934</div><div class="line">935</div><div class="line">936</div><div class="line">937</div><div class="line">938</div><div class="line">939</div><div class="line">940</div><div class="line">941</div><div class="line">942</div><div class="line">943</div><div class="line">944</div><div class="line">945</div><div class="line">946</div><div class="line">947</div><div class="line">948</div><div class="line">949</div><div class="line">950</div><div class="line">951</div><div class="line">952</div><div class="line">953</div><div class="line">954</div><div class="line">955</div><div class="line">956</div><div class="line">957</div><div class="line">958</div><div class="line">959</div><div class="line">960</div><div class="line">961</div><div class="line">962</div><div class="line">963</div><div class="line">964</div><div class="line">965</div><div class="line">966</div><div class="line">967</div><div class="line">968</div><div class="line">969</div><div class="line">970</div><div class="line">971</div><div class="line">972</div><div class="line">973</div><div class="line">974</div><div class="line">975</div><div class="line">976</div><div class="line">977</div><div class="line">978</div><div class="line">979</div><div class="line">980</div><div class="line">981</div><div class="line">982</div><div class="line">983</div><div class="line">984</div><div class="line">985</div><div class="line">986</div><div class="line">987</div><div class="line">988</div><div class="line">989</div><div class="line">990</div><div class="line">991</div><div class="line">992</div><div class="line">993</div><div class="line">994</div><div class="line">995</div><div class="line">996</div><div class="line">997</div><div class="line">998</div><div class="line">999</div><div class="line">1000</div><div class="line">1001</div><div class="line">1002</div><div class="line">1003</div><div class="line">1004</div><div class="line">1005</div><div class="line">1006</div><div class="line">1007</div><div class="line">1008</div><div class="line">1009</div><div class="line">1010</div><div class="line">1011</div><div class="line">1012</div><div class="line">1013</div><div class="line">1014</div><div class="line">1015</div><div class="line">1016</div><div class="line">1017</div><div class="line">1018</div><div class="line">1019</div><div class="line">1020</div><div class="line">1021</div><div class="line">1022</div><div class="line">1023</div><div class="line">1024</div><div class="line">1025</div><div class="line">1026</div><div class="line">1027</div><div class="line">1028</div><div class="line">1029</div><div class="line">1030</div><div class="line">1031</div><div class="line">1032</div><div class="line">1033</div><div class="line">1034</div><div class="line">1035</div><div class="line">1036</div><div class="line">1037</div><div class="line">1038</div><div class="line">1039</div><div class="line">1040</div><div class="line">1041</div><div class="line">1042</div><div class="line">1043</div><div class="line">1044</div><div class="line">1045</div><div class="line">1046</div><div class="line">1047</div><div class="line">1048</div><div class="line">1049</div><div class="line">1050</div><div class="line">1051</div><div class="line">1052</div><div class="line">1053</div><div class="line">1054</div><div class="line">1055</div><div class="line">1056</div><div class="line">1057</div><div class="line">1058</div><div class="line">1059</div><div class="line">1060</div><div class="line">1061</div><div class="line">1062</div><div class="line">1063</div><div class="line">1064</div><div class="line">1065</div><div class="line">1066</div><div class="line">1067</div><div class="line">1068</div><div class="line">1069</div><div class="line">1070</div><div class="line">1071</div><div class="line">1072</div><div class="line">1073</div><div class="line">1074</div><div class="line">1075</div><div class="line">1076</div><div class="line">1077</div><div class="line">1078</div><div class="line">1079</div><div class="line">1080</div><div class="line">1081</div><div class="line">1082</div><div class="line">1083</div><div class="line">1084</div><div class="line">1085</div><div class="line">1086</div><div class="line">1087</div><div class="line">1088</div><div class="line">1089</div><div class="line">1090</div><div class="line">1091</div><div class="line">1092</div><div class="line">1093</div><div class="line">1094</div><div class="line">1095</div><div class="line">1096</div><div class="line">1097</div><div class="line">1098</div><div class="line">1099</div><div class="line">1100</div><div class="line">1101</div><div class="line">1102</div><div class="line">1103</div><div class="line">1104</div><div class="line">1105</div><div class="line">1106</div><div class="line">1107</div><div class="line">1108</div><div class="line">1109</div><div class="line">1110</div><div class="line">1111</div><div class="line">1112</div><div class="line">1113</div><div class="line">1114</div><div class="line">1115</div><div class="line">1116</div><div class="line">1117</div><div class="line">1118</div><div class="line">1119</div><div class="line">1120</div><div class="line">1121</div><div class="line">1122</div><div class="line">1123</div><div class="line">1124</div><div class="line">1125</div><div class="line">1126</div><div class="line">1127</div><div class="line">1128</div><div class="line">1129</div><div class="line">1130</div><div class="line">1131</div><div class="line">1132</div><div class="line">1133</div><div class="line">1134</div><div class="line">1135</div><div class="line">1136</div><div class="line">1137</div><div class="line">1138</div><div class="line">1139</div><div class="line">1140</div><div class="line">1141</div><div class="line">1142</div><div class="line">1143</div><div class="line">1144</div><div class="line">1145</div><div class="line">1146</div><div class="line">1147</div><div class="line">1148</div><div class="line">1149</div><div class="line">1150</div><div class="line">1151</div><div class="line">1152</div><div class="line">1153</div><div class="line">1154</div><div class="line">1155</div><div class="line">1156</div><div class="line">1157</div><div class="line">1158</div><div class="line">1159</div><div class="line">1160</div><div class="line">1161</div><div class="line">1162</div><div class="line">1163</div><div class="line">1164</div><div class="line">1165</div><div class="line">1166</div><div class="line">1167</div><div class="line">1168</div><div class="line">1169</div><div class="line">1170</div><div class="line">1171</div><div class="line">1172</div><div class="line">1173</div><div class="line">1174</div><div class="line">1175</div><div class="line">1176</div><div class="line">1177</div><div class="line">1178</div><div class="line">1179</div><div class="line">1180</div><div class="line">1181</div><div class="line">1182</div><div class="line">1183</div><div class="line">1184</div></pre></td><td class="code"><pre><div class="line"># ===================================================================</div><div class="line"># COMMON SPRING BOOT PROPERTIES</div><div class="line">#</div><div class="line"># This sample file is provided as a guideline. Do NOT copy it in its</div><div class="line"># entirety to your own application.               ^^^</div><div class="line"># ===================================================================</div><div class="line"></div><div class="line"></div><div class="line"># ----------------------------------------</div><div class="line"># CORE PROPERTIES</div><div class="line"># ----------------------------------------</div><div class="line"></div><div class="line"># BANNER</div><div class="line">banner.charset=UTF-8 # Banner file encoding.</div><div class="line">banner.location=classpath:banner.txt # Banner file location.</div><div class="line">banner.image.location=classpath:banner.gif # Banner image file location (jpg/png can also be used).</div><div class="line">banner.image.width= # Width of the banner image in chars (default 76)</div><div class="line">banner.image.height= # Height of the banner image in chars (default based on image height)</div><div class="line">banner.image.margin= # Left hand image margin in chars (default 2)</div><div class="line">banner.image.invert= # If images should be inverted for dark terminal themes (default false)</div><div class="line"></div><div class="line"># LOGGING</div><div class="line">logging.config= # Location of the logging configuration file. For instance `classpath:logback.xml` for Logback</div><div class="line">logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.</div><div class="line">logging.file= # Log file name. For instance `myapp.log`</div><div class="line">logging.level.*= # Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`</div><div class="line">logging.path= # Location of the log file. For instance `/var/log`</div><div class="line">logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.</div><div class="line">logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.</div><div class="line">logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.</div><div class="line">logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.</div><div class="line"></div><div class="line"># AOP</div><div class="line">spring.aop.auto=true # Add @EnableAspectJAutoProxy.</div><div class="line">spring.aop.proxy-target-class=false # Whether subclass-based (CGLIB) proxies are to be created (true) as opposed to standard Java interface-based proxies (false).</div><div class="line"></div><div class="line"># IDENTITY (ContextIdApplicationContextInitializer)</div><div class="line">spring.application.index= # Application index.</div><div class="line">spring.application.name= # Application name.</div><div class="line"></div><div class="line"># ADMIN (SpringApplicationAdminJmxAutoConfiguration)</div><div class="line">spring.application.admin.enabled=false # Enable admin features for the application.</div><div class="line">spring.application.admin.jmx-name=org.springframework.boot:type=Admin,name=SpringApplication # JMX name of the application admin MBean.</div><div class="line"></div><div class="line"># AUTO-CONFIGURATION</div><div class="line">spring.autoconfigure.exclude= # Auto-configuration classes to exclude.</div><div class="line"></div><div class="line"># SPRING CORE</div><div class="line">spring.beaninfo.ignore=true # Skip search of BeanInfo classes.</div><div class="line"></div><div class="line"># SPRING CACHE (CacheProperties)</div><div class="line">spring.cache.cache-names= # Comma-separated list of cache names to create if supported by the underlying cache manager.</div><div class="line">spring.cache.caffeine.spec= # The spec to use to create caches. Check CaffeineSpec for more details on the spec format.</div><div class="line">spring.cache.couchbase.expiration=0 # Entry expiration in milliseconds. By default the entries never expire.</div><div class="line">spring.cache.ehcache.config= # The location of the configuration file to use to initialize EhCache.</div><div class="line">spring.cache.guava.spec= # The spec to use to create caches. Check CacheBuilderSpec for more details on the spec format.</div><div class="line">spring.cache.hazelcast.config= # The location of the configuration file to use to initialize Hazelcast.</div><div class="line">spring.cache.infinispan.config= # The location of the configuration file to use to initialize Infinispan.</div><div class="line">spring.cache.jcache.config= # The location of the configuration file to use to initialize the cache manager.</div><div class="line">spring.cache.jcache.provider= # Fully qualified name of the CachingProvider implementation to use to retrieve the JSR-107 compliant cache manager. Only needed if more than one JSR-107 implementation is available on the classpath.</div><div class="line">spring.cache.type= # Cache type, auto-detected according to the environment by default.</div><div class="line"></div><div class="line"># SPRING CONFIG - using environment property only (ConfigFileApplicationListener)</div><div class="line">spring.config.location= # Config file locations.</div><div class="line">spring.config.name=application # Config file name.</div><div class="line"></div><div class="line"># HAZELCAST (HazelcastProperties)</div><div class="line">spring.hazelcast.config= # The location of the configuration file to use to initialize Hazelcast.</div><div class="line"></div><div class="line"># PROJECT INFORMATION (ProjectInfoProperties)</div><div class="line">spring.info.build.location=classpath:META-INF/build-info.properties # Location of the generated build-info.properties file.</div><div class="line">spring.info.git.location=classpath:git.properties # Location of the generated git.properties file.</div><div class="line"></div><div class="line"># JMX</div><div class="line">spring.jmx.default-domain= # JMX domain name.</div><div class="line">spring.jmx.enabled=true # Expose management beans to the JMX domain.</div><div class="line">spring.jmx.server=mbeanServer # MBeanServer bean name.</div><div class="line"></div><div class="line"># Email (MailProperties)</div><div class="line">spring.mail.default-encoding=UTF-8 # Default MimeMessage encoding.</div><div class="line">spring.mail.host= # SMTP server host. For instance `smtp.example.com`</div><div class="line">spring.mail.jndi-name= # Session JNDI name. When set, takes precedence to others mail settings.</div><div class="line">spring.mail.password= # Login password of the SMTP server.</div><div class="line">spring.mail.port= # SMTP server port.</div><div class="line">spring.mail.properties.*= # Additional JavaMail session properties.</div><div class="line">spring.mail.protocol=smtp # Protocol used by the SMTP server.</div><div class="line">spring.mail.test-connection=false # Test that the mail server is available on startup.</div><div class="line">spring.mail.username= # Login user of the SMTP server.</div><div class="line"></div><div class="line"># APPLICATION SETTINGS (SpringApplication)</div><div class="line">spring.main.banner-mode=console # Mode used to display the banner when the application runs.</div><div class="line">spring.main.sources= # Sources (class name, package name or XML resource location) to include in the ApplicationContext.</div><div class="line">spring.main.web-environment= # Run the application in a web environment (auto-detected by default).</div><div class="line"></div><div class="line"># FILE ENCODING (FileEncodingApplicationListener)</div><div class="line">spring.mandatory-file-encoding= # Expected character encoding the application must use.</div><div class="line"></div><div class="line"># INTERNATIONALIZATION (MessageSourceAutoConfiguration)</div><div class="line">spring.messages.always-use-message-format=false # Set whether to always apply the MessageFormat rules, parsing even messages without arguments.</div><div class="line">spring.messages.basename=messages # Comma-separated list of basenames, each following the ResourceBundle convention.</div><div class="line">spring.messages.cache-seconds=-1 # Loaded resource bundle files cache expiration, in seconds. When set to -1, bundles are cached forever.</div><div class="line">spring.messages.encoding=UTF-8 # Message bundles encoding.</div><div class="line">spring.messages.fallback-to-system-locale=true # Set whether to fall back to the system Locale if no files for a specific Locale have been found.</div><div class="line"></div><div class="line"># OUTPUT</div><div class="line">spring.output.ansi.enabled=detect # Configure the ANSI output.</div><div class="line"></div><div class="line"># PID FILE (ApplicationPidFileWriter)</div><div class="line">spring.pid.fail-on-write-error= # Fail if ApplicationPidFileWriter is used but it cannot write the PID file.</div><div class="line">spring.pid.file= # Location of the PID file to write (if ApplicationPidFileWriter is used).</div><div class="line"></div><div class="line"># PROFILES</div><div class="line">spring.profiles.active= # Comma-separated list (or list if using YAML) of active profiles.</div><div class="line">spring.profiles.include= # Unconditionally activate the specified comma separated profiles (or list of profiles if using YAML).</div><div class="line"></div><div class="line"># SENDGRID (SendGridAutoConfiguration)</div><div class="line">spring.sendgrid.api-key= # SendGrid api key (alternative to username/password)</div><div class="line">spring.sendgrid.username= # SendGrid account username</div><div class="line">spring.sendgrid.password= # SendGrid account password</div><div class="line">spring.sendgrid.proxy.host= # SendGrid proxy host</div><div class="line">spring.sendgrid.proxy.port= # SendGrid proxy port</div><div class="line"></div><div class="line"></div><div class="line"># ----------------------------------------</div><div class="line"># WEB PROPERTIES</div><div class="line"># ----------------------------------------</div><div class="line"></div><div class="line"># EMBEDDED SERVER CONFIGURATION (ServerProperties)</div><div class="line">server.address= # Network address to which the server should bind to.</div><div class="line">server.compression.enabled=false # If response compression is enabled.</div><div class="line">server.compression.excluded-user-agents= # List of user-agents to exclude from compression.</div><div class="line">server.compression.mime-types= # Comma-separated list of MIME types that should be compressed. For instance `text/html,text/css,application/json`</div><div class="line">server.compression.min-response-size= # Minimum response size that is required for compression to be performed. For instance 2048</div><div class="line">server.connection-timeout= # Time in milliseconds that connectors will wait for another HTTP request before closing the connection. When not set, the connector&apos;s container-specific default will be used. Use a value of -1 to indicate no (i.e. infinite) timeout.</div><div class="line">server.context-parameters.*= # Servlet context init parameters. For instance `server.context-parameters.a=alpha`</div><div class="line">server.context-path= # Context path of the application.</div><div class="line">server.display-name=application # Display name of the application.</div><div class="line">server.max-http-header-size=0 # Maximum size in bytes of the HTTP message header.</div><div class="line">server.error.include-stacktrace=never # When to include a &quot;stacktrace&quot; attribute.</div><div class="line">server.error.path=/error # Path of the error controller.</div><div class="line">server.error.whitelabel.enabled=true # Enable the default error page displayed in browsers in case of a server error.</div><div class="line">server.jetty.acceptors= # Number of acceptor threads to use.</div><div class="line">server.jetty.max-http-post-size=0 # Maximum size in bytes of the HTTP post or put content.</div><div class="line">server.jetty.selectors= # Number of selector threads to use.</div><div class="line">server.jsp-servlet.class-name=org.apache.jasper.servlet.JspServlet # The class name of the JSP servlet.</div><div class="line">server.jsp-servlet.init-parameters.*= # Init parameters used to configure the JSP servlet</div><div class="line">server.jsp-servlet.registered=true # Whether or not the JSP servlet is registered</div><div class="line">server.port=8080 # Server HTTP port.</div><div class="line">server.server-header= # Value to use for the Server response header (no header is sent if empty)</div><div class="line">server.servlet-path=/ # Path of the main dispatcher servlet.</div><div class="line">server.use-forward-headers= # If X-Forwarded-* headers should be applied to the HttpRequest.</div><div class="line">server.session.cookie.comment= # Comment for the session cookie.</div><div class="line">server.session.cookie.domain= # Domain for the session cookie.</div><div class="line">server.session.cookie.http-only= # &quot;HttpOnly&quot; flag for the session cookie.</div><div class="line">server.session.cookie.max-age= # Maximum age of the session cookie in seconds.</div><div class="line">server.session.cookie.name= # Session cookie name.</div><div class="line">server.session.cookie.path= # Path of the session cookie.</div><div class="line">server.session.cookie.secure= # &quot;Secure&quot; flag for the session cookie.</div><div class="line">server.session.persistent=false # Persist session data between restarts.</div><div class="line">server.session.store-dir= # Directory used to store session data.</div><div class="line">server.session.timeout= # Session timeout in seconds.</div><div class="line">server.session.tracking-modes= # Session tracking modes (one or more of the following: &quot;cookie&quot;, &quot;url&quot;, &quot;ssl&quot;).</div><div class="line">server.ssl.ciphers= # Supported SSL ciphers.</div><div class="line">server.ssl.client-auth= # Whether client authentication is wanted (&quot;want&quot;) or needed (&quot;need&quot;). Requires a trust store.</div><div class="line">server.ssl.enabled= # Enable SSL support.</div><div class="line">server.ssl.enabled-protocols= # Enabled SSL protocols.</div><div class="line">server.ssl.key-alias= # Alias that identifies the key in the key store.</div><div class="line">server.ssl.key-password= # Password used to access the key in the key store.</div><div class="line">server.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file).</div><div class="line">server.ssl.key-store-password= # Password used to access the key store.</div><div class="line">server.ssl.key-store-provider= # Provider for the key store.</div><div class="line">server.ssl.key-store-type= # Type of the key store.</div><div class="line">server.ssl.protocol=TLS # SSL protocol to use.</div><div class="line">server.ssl.trust-store= # Trust store that holds SSL certificates.</div><div class="line">server.ssl.trust-store-password= # Password used to access the trust store.</div><div class="line">server.ssl.trust-store-provider= # Provider for the trust store.</div><div class="line">server.ssl.trust-store-type= # Type of the trust store.</div><div class="line">server.tomcat.accept-count= # Maximum queue length for incoming connection requests when all possible request processing threads are in use.</div><div class="line">server.tomcat.accesslog.buffered=true # Buffer output such that it is only flushed periodically.</div><div class="line">server.tomcat.accesslog.directory=logs # Directory in which log files are created. Can be relative to the tomcat base dir or absolute.</div><div class="line">server.tomcat.accesslog.enabled=false # Enable access log.</div><div class="line">server.tomcat.accesslog.pattern=common # Format pattern for access logs.</div><div class="line">server.tomcat.accesslog.prefix=access_log # Log file name prefix.</div><div class="line">server.tomcat.accesslog.rename-on-rotate=false # Defer inclusion of the date stamp in the file name until rotate time.</div><div class="line">server.tomcat.accesslog.request-attributes-enabled=false # Set request attributes for IP address, Hostname, protocol and port used for the request.</div><div class="line">server.tomcat.accesslog.rotate=true # Enable access log rotation.</div><div class="line">server.tomcat.accesslog.suffix=.log # Log file name suffix.</div><div class="line">server.tomcat.additional-tld-skip-patterns= # Comma-separated list of additional patterns that match jars to ignore for TLD scanning.</div><div class="line">server.tomcat.background-processor-delay=30 # Delay in seconds between the invocation of backgroundProcess methods.</div><div class="line">server.tomcat.basedir= # Tomcat base directory. If not specified a temporary directory will be used.</div><div class="line">server.tomcat.internal-proxies=10\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</div><div class="line">        192\\.168\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</div><div class="line">        169\\.254\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</div><div class="line">        127\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</div><div class="line">        172\\.1[6-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</div><div class="line">        172\\.2[0-9]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125;|\\</div><div class="line">        172\\.3[0-1]&#123;1&#125;\\.\\d&#123;1,3&#125;\\.\\d&#123;1,3&#125; # regular expression matching trusted IP addresses.</div><div class="line">server.tomcat.max-connections= # Maximum number of connections that the server will accept and process at any given time.</div><div class="line">server.tomcat.max-http-post-size=0 # Maximum size in bytes of the HTTP post content.</div><div class="line">server.tomcat.max-threads=0 # Maximum amount of worker threads.</div><div class="line">server.tomcat.min-spare-threads=0 # Minimum amount of worker threads.</div><div class="line">server.tomcat.port-header=X-Forwarded-Port # Name of the HTTP header used to override the original port value.</div><div class="line">server.tomcat.protocol-header= # Header that holds the incoming protocol, usually named &quot;X-Forwarded-Proto&quot;.</div><div class="line">server.tomcat.protocol-header-https-value=https # Value of the protocol header that indicates that the incoming request uses SSL.</div><div class="line">server.tomcat.redirect-context-root= # Whether requests to the context root should be redirected by appending a / to the path.</div><div class="line">server.tomcat.remote-ip-header= # Name of the http header from which the remote ip is extracted. For instance `X-FORWARDED-FOR`</div><div class="line">server.tomcat.uri-encoding=UTF-8 # Character encoding to use to decode the URI.</div><div class="line">server.undertow.accesslog.dir= # Undertow access log directory.</div><div class="line">server.undertow.accesslog.enabled=false # Enable access log.</div><div class="line">server.undertow.accesslog.pattern=common # Format pattern for access logs.</div><div class="line">server.undertow.accesslog.prefix=access_log. # Log file name prefix.</div><div class="line">server.undertow.accesslog.rotate=true # Enable access log rotation.</div><div class="line">server.undertow.accesslog.suffix=log # Log file name suffix.</div><div class="line">server.undertow.buffer-size= # Size of each buffer in bytes.</div><div class="line">server.undertow.buffers-per-region= # Number of buffer per region.</div><div class="line">server.undertow.direct-buffers= # Allocate buffers outside the Java heap.</div><div class="line">server.undertow.io-threads= # Number of I/O threads to create for the worker.</div><div class="line">server.undertow.max-http-post-size=0 # Maximum size in bytes of the HTTP post content.</div><div class="line">server.undertow.worker-threads= # Number of worker threads.</div><div class="line"></div><div class="line"># FREEMARKER (FreeMarkerAutoConfiguration)</div><div class="line">spring.freemarker.allow-request-override=false # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</div><div class="line">spring.freemarker.allow-session-override=false # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</div><div class="line">spring.freemarker.cache=false # Enable template caching.</div><div class="line">spring.freemarker.charset=UTF-8 # Template encoding.</div><div class="line">spring.freemarker.check-template-location=true # Check that the templates location exists.</div><div class="line">spring.freemarker.content-type=text/html # Content-Type value.</div><div class="line">spring.freemarker.enabled=true # Enable MVC view resolution for this technology.</div><div class="line">spring.freemarker.expose-request-attributes=false # Set whether all request attributes should be added to the model prior to merging with the template.</div><div class="line">spring.freemarker.expose-session-attributes=false # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</div><div class="line">spring.freemarker.expose-spring-macro-helpers=true # Set whether to expose a RequestContext for use by Spring&apos;s macro library, under the name &quot;springMacroRequestContext&quot;.</div><div class="line">spring.freemarker.prefer-file-system-access=true # Prefer file system access for template loading. File system access enables hot detection of template changes.</div><div class="line">spring.freemarker.prefix= # Prefix that gets prepended to view names when building a URL.</div><div class="line">spring.freemarker.request-context-attribute= # Name of the RequestContext attribute for all views.</div><div class="line">spring.freemarker.settings.*= # Well-known FreeMarker keys which will be passed to FreeMarker&apos;s Configuration.</div><div class="line">spring.freemarker.suffix= # Suffix that gets appended to view names when building a URL.</div><div class="line">spring.freemarker.template-loader-path=classpath:/templates/ # Comma-separated list of template paths.</div><div class="line">spring.freemarker.view-names= # White list of view names that can be resolved.</div><div class="line"></div><div class="line"># GROOVY TEMPLATES (GroovyTemplateAutoConfiguration)</div><div class="line">spring.groovy.template.allow-request-override=false # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</div><div class="line">spring.groovy.template.allow-session-override=false # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</div><div class="line">spring.groovy.template.cache= # Enable template caching.</div><div class="line">spring.groovy.template.charset=UTF-8 # Template encoding.</div><div class="line">spring.groovy.template.check-template-location=true # Check that the templates location exists.</div><div class="line">spring.groovy.template.configuration.*= # See GroovyMarkupConfigurer</div><div class="line">spring.groovy.template.content-type=test/html # Content-Type value.</div><div class="line">spring.groovy.template.enabled=true # Enable MVC view resolution for this technology.</div><div class="line">spring.groovy.template.expose-request-attributes=false # Set whether all request attributes should be added to the model prior to merging with the template.</div><div class="line">spring.groovy.template.expose-session-attributes=false # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</div><div class="line">spring.groovy.template.expose-spring-macro-helpers=true # Set whether to expose a RequestContext for use by Spring&apos;s macro library, under the name &quot;springMacroRequestContext&quot;.</div><div class="line">spring.groovy.template.prefix= # Prefix that gets prepended to view names when building a URL.</div><div class="line">spring.groovy.template.request-context-attribute= # Name of the RequestContext attribute for all views.</div><div class="line">spring.groovy.template.resource-loader-path=classpath:/templates/ # Template path.</div><div class="line">spring.groovy.template.suffix=.tpl # Suffix that gets appended to view names when building a URL.</div><div class="line">spring.groovy.template.view-names= # White list of view names that can be resolved.</div><div class="line"></div><div class="line"># SPRING HATEOAS (HateoasProperties)</div><div class="line">spring.hateoas.use-hal-as-default-json-media-type=true # Specify if application/hal+json responses should be sent to requests that accept application/json.</div><div class="line"></div><div class="line"># HTTP message conversion</div><div class="line">spring.http.converters.preferred-json-mapper=jackson # Preferred JSON mapper to use for HTTP message conversion. Set to &quot;gson&quot; to force the use of Gson when both it and Jackson are on the classpath.</div><div class="line"></div><div class="line"># HTTP encoding (HttpEncodingProperties)</div><div class="line">spring.http.encoding.charset=UTF-8 # Charset of HTTP requests and responses. Added to the &quot;Content-Type&quot; header if not set explicitly.</div><div class="line">spring.http.encoding.enabled=true # Enable http encoding support.</div><div class="line">spring.http.encoding.force= # Force the encoding to the configured charset on HTTP requests and responses.</div><div class="line">spring.http.encoding.force-request= # Force the encoding to the configured charset on HTTP requests. Defaults to true when &quot;force&quot; has not been specified.</div><div class="line">spring.http.encoding.force-response= # Force the encoding to the configured charset on HTTP responses.</div><div class="line">spring.http.encoding.mapping= # Locale to Encoding mapping.</div><div class="line"></div><div class="line"># MULTIPART (MultipartProperties)</div><div class="line">spring.http.multipart.enabled=true # Enable support of multi-part uploads.</div><div class="line">spring.http.multipart.file-size-threshold=0 # Threshold after which files will be written to disk. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</div><div class="line">spring.http.multipart.location= # Intermediate location of uploaded files.</div><div class="line">spring.http.multipart.max-file-size=1MB # Max file size. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</div><div class="line">spring.http.multipart.max-request-size=10MB # Max request size. Values can use the suffixed &quot;MB&quot; or &quot;KB&quot; to indicate a Megabyte or Kilobyte size.</div><div class="line">spring.http.multipart.resolve-lazily=false # Whether to resolve the multipart request lazily at the time of file or parameter access.</div><div class="line"></div><div class="line"># JACKSON (JacksonProperties)</div><div class="line">spring.jackson.date-format= # Date format string or a fully-qualified date format class name. For instance `yyyy-MM-dd HH:mm:ss`.</div><div class="line">spring.jackson.default-property-inclusion= # Controls the inclusion of properties during serialization.</div><div class="line">spring.jackson.deserialization.*= # Jackson on/off features that affect the way Java objects are deserialized.</div><div class="line">spring.jackson.generator.*= # Jackson on/off features for generators.</div><div class="line">spring.jackson.joda-date-time-format= # Joda date time format string. If not configured, &quot;date-format&quot; will be used as a fallback if it is configured with a format string.</div><div class="line">spring.jackson.locale= # Locale used for formatting.</div><div class="line">spring.jackson.mapper.*= # Jackson general purpose on/off features.</div><div class="line">spring.jackson.parser.*= # Jackson on/off features for parsers.</div><div class="line">spring.jackson.property-naming-strategy= # One of the constants on Jackson&apos;s PropertyNamingStrategy. Can also be a fully-qualified class name of a PropertyNamingStrategy subclass.</div><div class="line">spring.jackson.serialization.*= # Jackson on/off features that affect the way Java objects are serialized.</div><div class="line">spring.jackson.time-zone= # Time zone used when formatting dates. For instance `America/Los_Angeles`</div><div class="line"></div><div class="line"># JERSEY (JerseyProperties)</div><div class="line">spring.jersey.application-path= # Path that serves as the base URI for the application. Overrides the value of &quot;@ApplicationPath&quot; if specified.</div><div class="line">spring.jersey.filter.order=0 # Jersey filter chain order.</div><div class="line">spring.jersey.init.*= # Init parameters to pass to Jersey via the servlet or filter.</div><div class="line">spring.jersey.servlet.load-on-startup=-1 # Load on startup priority of the Jersey servlet.</div><div class="line">spring.jersey.type=servlet # Jersey integration type.</div><div class="line"></div><div class="line"># SPRING LDAP (LdapProperties)</div><div class="line">spring.ldap.urls= # LDAP URLs of the server.</div><div class="line">spring.ldap.base= # Base suffix from which all operations should originate.</div><div class="line">spring.ldap.username= # Login user of the server.</div><div class="line">spring.ldap.password= # Login password of the server.</div><div class="line">spring.ldap.base-environment.*= # LDAP specification settings.</div><div class="line"></div><div class="line"># EMBEDDED LDAP (EmbeddedLdapProperties)</div><div class="line">spring.ldap.embedded.port= # Embedded LDAP port.</div><div class="line">spring.ldap.embedded.credential.username= # Embedded LDAP username.</div><div class="line">spring.ldap.embedded.credential.password= # Embedded LDAP password.</div><div class="line">spring.ldap.embedded.base-dn= # The base DN</div><div class="line">spring.ldap.embedded.ldif=classpath:schema.ldif # Schema (LDIF) script resource reference.</div><div class="line"></div><div class="line"># SPRING MOBILE DEVICE VIEWS (DeviceDelegatingViewResolverAutoConfiguration)</div><div class="line">spring.mobile.devicedelegatingviewresolver.enable-fallback=false # Enable support for fallback resolution.</div><div class="line">spring.mobile.devicedelegatingviewresolver.enabled=false # Enable device view resolver.</div><div class="line">spring.mobile.devicedelegatingviewresolver.mobile-prefix=mobile/ # Prefix that gets prepended to view names for mobile devices.</div><div class="line">spring.mobile.devicedelegatingviewresolver.mobile-suffix= # Suffix that gets appended to view names for mobile devices.</div><div class="line">spring.mobile.devicedelegatingviewresolver.normal-prefix= # Prefix that gets prepended to view names for normal devices.</div><div class="line">spring.mobile.devicedelegatingviewresolver.normal-suffix= # Suffix that gets appended to view names for normal devices.</div><div class="line">spring.mobile.devicedelegatingviewresolver.tablet-prefix=tablet/ # Prefix that gets prepended to view names for tablet devices.</div><div class="line">spring.mobile.devicedelegatingviewresolver.tablet-suffix= # Suffix that gets appended to view names for tablet devices.</div><div class="line"></div><div class="line"># SPRING MOBILE SITE PREFERENCE (SitePreferenceAutoConfiguration)</div><div class="line">spring.mobile.sitepreference.enabled=true # Enable SitePreferenceHandler.</div><div class="line"></div><div class="line"># MUSTACHE TEMPLATES (MustacheAutoConfiguration)</div><div class="line">spring.mustache.allow-request-override= # Set whether HttpServletRequest attributes are allowed to override (hide) controller generated model attributes of the same name.</div><div class="line">spring.mustache.allow-session-override= # Set whether HttpSession attributes are allowed to override (hide) controller generated model attributes of the same name.</div><div class="line">spring.mustache.cache= # Enable template caching.</div><div class="line">spring.mustache.charset= # Template encoding.</div><div class="line">spring.mustache.check-template-location= # Check that the templates location exists.</div><div class="line">spring.mustache.content-type= # Content-Type value.</div><div class="line">spring.mustache.enabled= # Enable MVC view resolution for this technology.</div><div class="line">spring.mustache.expose-request-attributes= # Set whether all request attributes should be added to the model prior to merging with the template.</div><div class="line">spring.mustache.expose-session-attributes= # Set whether all HttpSession attributes should be added to the model prior to merging with the template.</div><div class="line">spring.mustache.expose-spring-macro-helpers= # Set whether to expose a RequestContext for use by Spring&apos;s macro library, under the name &quot;springMacroRequestContext&quot;.</div><div class="line">spring.mustache.prefix=classpath:/templates/ # Prefix to apply to template names.</div><div class="line">spring.mustache.request-context-attribute= # Name of the RequestContext attribute for all views.</div><div class="line">spring.mustache.suffix=.html # Suffix to apply to template names.</div><div class="line">spring.mustache.view-names= # White list of view names that can be resolved.</div><div class="line"></div><div class="line"># SPRING MVC (WebMvcProperties)</div><div class="line">spring.mvc.async.request-timeout= # Amount of time (in milliseconds) before asynchronous request handling times out.</div><div class="line">spring.mvc.date-format= # Date format to use. For instance `dd/MM/yyyy`.</div><div class="line">spring.mvc.dispatch-trace-request=false # Dispatch TRACE requests to the FrameworkServlet doService method.</div><div class="line">spring.mvc.dispatch-options-request=true # Dispatch OPTIONS requests to the FrameworkServlet doService method.</div><div class="line">spring.mvc.favicon.enabled=true # Enable resolution of favicon.ico.</div><div class="line">spring.mvc.formcontent.putfilter.enabled=true # Enable Spring&apos;s HttpPutFormContentFilter.</div><div class="line">spring.mvc.ignore-default-model-on-redirect=true # If the content of the &quot;default&quot; model should be ignored during redirect scenarios.</div><div class="line">spring.mvc.locale= # Locale to use. By default, this locale is overridden by the &quot;Accept-Language&quot; header.</div><div class="line">spring.mvc.locale-resolver=accept-header # Define how the locale should be resolved.</div><div class="line">spring.mvc.log-resolved-exception=false # Enable warn logging of exceptions resolved by a &quot;HandlerExceptionResolver&quot;.</div><div class="line">spring.mvc.media-types.*= # Maps file extensions to media types for content negotiation.</div><div class="line">spring.mvc.message-codes-resolver-format= # Formatting strategy for message codes. For instance `PREFIX_ERROR_CODE`.</div><div class="line">spring.mvc.servlet.load-on-startup=-1 # Load on startup priority of the Spring Web Services servlet.</div><div class="line">spring.mvc.static-path-pattern=/** # Path pattern used for static resources.</div><div class="line">spring.mvc.throw-exception-if-no-handler-found=false # If a &quot;NoHandlerFoundException&quot; should be thrown if no Handler was found to process a request.</div><div class="line">spring.mvc.view.prefix= # Spring MVC view prefix.</div><div class="line">spring.mvc.view.suffix= # Spring MVC view suffix.</div><div class="line"></div><div class="line"># SPRING RESOURCES HANDLING (ResourceProperties)</div><div class="line">spring.resources.add-mappings=true # Enable default resource handling.</div><div class="line">spring.resources.cache-period= # Cache period for the resources served by the resource handler, in seconds.</div><div class="line">spring.resources.chain.cache=true # Enable caching in the Resource chain.</div><div class="line">spring.resources.chain.enabled= # Enable the Spring Resource Handling chain. Disabled by default unless at least one strategy has been enabled.</div><div class="line">spring.resources.chain.gzipped=false # Enable resolution of already gzipped resources.</div><div class="line">spring.resources.chain.html-application-cache=false # Enable HTML5 application cache manifest rewriting.</div><div class="line">spring.resources.chain.strategy.content.enabled=false # Enable the content Version Strategy.</div><div class="line">spring.resources.chain.strategy.content.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.</div><div class="line">spring.resources.chain.strategy.fixed.enabled=false # Enable the fixed Version Strategy.</div><div class="line">spring.resources.chain.strategy.fixed.paths=/** # Comma-separated list of patterns to apply to the Version Strategy.</div><div class="line">spring.resources.chain.strategy.fixed.version= # Version string to use for the Version Strategy.</div><div class="line">spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/ # Locations of static resources.</div><div class="line"></div><div class="line"># SPRING SESSION (SessionProperties)</div><div class="line">spring.session.hazelcast.flush-mode=on-save # Sessions flush mode.</div><div class="line">spring.session.hazelcast.map-name=spring:session:sessions # Name of the map used to store sessions.</div><div class="line">spring.session.jdbc.initializer.enabled= # Create the required session tables on startup if necessary. Enabled automatically if the default table name is set or a custom schema is configured.</div><div class="line">spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.</div><div class="line">spring.session.jdbc.table-name=SPRING_SESSION # Name of database table used to store sessions.</div><div class="line">spring.session.mongo.collection-name=sessions # Collection name used to store sessions.</div><div class="line">spring.session.redis.flush-mode=on-save # Sessions flush mode.</div><div class="line">spring.session.redis.namespace= # Namespace for keys used to store sessions.</div><div class="line">spring.session.store-type= # Session store type.</div><div class="line"></div><div class="line"># SPRING SOCIAL (SocialWebAutoConfiguration)</div><div class="line">spring.social.auto-connection-views=false # Enable the connection status view for supported providers.</div><div class="line"></div><div class="line"># SPRING SOCIAL FACEBOOK (FacebookAutoConfiguration)</div><div class="line">spring.social.facebook.app-id= # your application&apos;s Facebook App ID</div><div class="line">spring.social.facebook.app-secret= # your application&apos;s Facebook App Secret</div><div class="line"></div><div class="line"># SPRING SOCIAL LINKEDIN (LinkedInAutoConfiguration)</div><div class="line">spring.social.linkedin.app-id= # your application&apos;s LinkedIn App ID</div><div class="line">spring.social.linkedin.app-secret= # your application&apos;s LinkedIn App Secret</div><div class="line"></div><div class="line"># SPRING SOCIAL TWITTER (TwitterAutoConfiguration)</div><div class="line">spring.social.twitter.app-id= # your application&apos;s Twitter App ID</div><div class="line">spring.social.twitter.app-secret= # your application&apos;s Twitter App Secret</div><div class="line"></div><div class="line"># THYMELEAF (ThymeleafAutoConfiguration)</div><div class="line">spring.thymeleaf.cache=true # Enable template caching.</div><div class="line">spring.thymeleaf.check-template=true # Check that the template exists before rendering it.</div><div class="line">spring.thymeleaf.check-template-location=true # Check that the templates location exists.</div><div class="line">spring.thymeleaf.content-type=text/html # Content-Type value.</div><div class="line">spring.thymeleaf.enabled=true # Enable MVC Thymeleaf view resolution.</div><div class="line">spring.thymeleaf.encoding=UTF-8 # Template encoding.</div><div class="line">spring.thymeleaf.excluded-view-names= # Comma-separated list of view names that should be excluded from resolution.</div><div class="line">spring.thymeleaf.mode=HTML5 # Template mode to be applied to templates. See also StandardTemplateModeHandlers.</div><div class="line">spring.thymeleaf.prefix=classpath:/templates/ # Prefix that gets prepended to view names when building a URL.</div><div class="line">spring.thymeleaf.suffix=.html # Suffix that gets appended to view names when building a URL.</div><div class="line">spring.thymeleaf.template-resolver-order= # Order of the template resolver in the chain.</div><div class="line">spring.thymeleaf.view-names= # Comma-separated list of view names that can be resolved.</div><div class="line"></div><div class="line"># SPRING WEB SERVICES (WebServicesProperties)</div><div class="line">spring.webservices.path=/services # Path that serves as the base URI for the services.</div><div class="line">spring.webservices.servlet.init= # Servlet init parameters to pass to Spring Web Services.</div><div class="line">spring.webservices.servlet.load-on-startup=-1 # Load on startup priority of the Spring Web Services servlet.</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># ----------------------------------------</div><div class="line"># SECURITY PROPERTIES</div><div class="line"># ----------------------------------------</div><div class="line"># SECURITY (SecurityProperties)</div><div class="line">security.basic.authorize-mode=role # Security authorize mode to apply.</div><div class="line">security.basic.enabled=true # Enable basic authentication.</div><div class="line">security.basic.path=/** # Comma-separated list of paths to secure.</div><div class="line">security.basic.realm=Spring # HTTP basic realm name.</div><div class="line">security.enable-csrf=false # Enable Cross Site Request Forgery support.</div><div class="line">security.filter-order=0 # Security filter chain order.</div><div class="line">security.filter-dispatcher-types=ASYNC, FORWARD, INCLUDE, REQUEST # Security filter chain dispatcher types.</div><div class="line">security.headers.cache=true # Enable cache control HTTP headers.</div><div class="line">security.headers.content-security-policy= # Value for content security policy header.</div><div class="line">security.headers.content-security-policy-mode=default # Content security policy mode.</div><div class="line">security.headers.content-type=true # Enable &quot;X-Content-Type-Options&quot; header.</div><div class="line">security.headers.frame=true # Enable &quot;X-Frame-Options&quot; header.</div><div class="line">security.headers.hsts=all # HTTP Strict Transport Security (HSTS) mode (none, domain, all).</div><div class="line">security.headers.xss=true # Enable cross site scripting (XSS) protection.</div><div class="line">security.ignored= # Comma-separated list of paths to exclude from the default secured paths.</div><div class="line">security.require-ssl=false # Enable secure channel for all requests.</div><div class="line">security.sessions=stateless # Session creation policy (always, never, if_required, stateless).</div><div class="line">security.user.name=user # Default user name.</div><div class="line">security.user.password= # Password for the default user name. A random password is logged on startup by default.</div><div class="line">security.user.role=USER # Granted roles for the default user name.</div><div class="line"></div><div class="line"># SECURITY OAUTH2 CLIENT (OAuth2ClientProperties)</div><div class="line">security.oauth2.client.client-id= # OAuth2 client id.</div><div class="line">security.oauth2.client.client-secret= # OAuth2 client secret. A random secret is generated by default</div><div class="line"></div><div class="line"># SECURITY OAUTH2 RESOURCES (ResourceServerProperties)</div><div class="line">security.oauth2.resource.filter-order= # The order of the filter chain used to authenticate tokens.</div><div class="line">security.oauth2.resource.id= # Identifier of the resource.</div><div class="line">security.oauth2.resource.jwt.key-uri= # The URI of the JWT token. Can be set if the value is not available and the key is public.</div><div class="line">security.oauth2.resource.jwt.key-value= # The verification key of the JWT token. Can either be a symmetric secret or PEM-encoded RSA public key.</div><div class="line">security.oauth2.resource.prefer-token-info=true # Use the token info, can be set to false to use the user info.</div><div class="line">security.oauth2.resource.service-id=resource #</div><div class="line">security.oauth2.resource.token-info-uri= # URI of the token decoding endpoint.</div><div class="line">security.oauth2.resource.token-type= # The token type to send when using the userInfoUri.</div><div class="line">security.oauth2.resource.user-info-uri= # URI of the user endpoint.</div><div class="line"></div><div class="line"># SECURITY OAUTH2 SSO (OAuth2SsoProperties)</div><div class="line">security.oauth2.sso.filter-order= # Filter order to apply if not providing an explicit WebSecurityConfigurerAdapter</div><div class="line">security.oauth2.sso.login-path=/login # Path to the login page, i.e. the one that triggers the redirect to the OAuth2 Authorization Server</div><div class="line"></div><div class="line"></div><div class="line"># ----------------------------------------</div><div class="line"># DATA PROPERTIES</div><div class="line"># ----------------------------------------</div><div class="line"></div><div class="line"># FLYWAY (FlywayProperties)</div><div class="line">flyway.baseline-description= #</div><div class="line">flyway.baseline-version=1 # version to start migration</div><div class="line">flyway.baseline-on-migrate= #</div><div class="line">flyway.check-location=false # Check that migration scripts location exists.</div><div class="line">flyway.clean-on-validation-error= #</div><div class="line">flyway.enabled=true # Enable flyway.</div><div class="line">flyway.encoding= #</div><div class="line">flyway.ignore-failed-future-migration= #</div><div class="line">flyway.init-sqls= # SQL statements to execute to initialize a connection immediately after obtaining it.</div><div class="line">flyway.locations=classpath:db/migration # locations of migrations scripts</div><div class="line">flyway.out-of-order= #</div><div class="line">flyway.password= # JDBC password if you want Flyway to create its own DataSource</div><div class="line">flyway.placeholder-prefix= #</div><div class="line">flyway.placeholder-replacement= #</div><div class="line">flyway.placeholder-suffix= #</div><div class="line">flyway.placeholders.*= #</div><div class="line">flyway.schemas= # schemas to update</div><div class="line">flyway.sql-migration-prefix=V #</div><div class="line">flyway.sql-migration-separator= #</div><div class="line">flyway.sql-migration-suffix=.sql #</div><div class="line">flyway.table= #</div><div class="line">flyway.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.</div><div class="line">flyway.user= # Login user of the database to migrate.</div><div class="line">flyway.validate-on-migrate= #</div><div class="line"></div><div class="line"># LIQUIBASE (LiquibaseProperties)</div><div class="line">liquibase.change-log=classpath:/db/changelog/db.changelog-master.yaml # Change log configuration path.</div><div class="line">liquibase.check-change-log-location=true # Check the change log location exists.</div><div class="line">liquibase.contexts= # Comma-separated list of runtime contexts to use.</div><div class="line">liquibase.default-schema= # Default database schema.</div><div class="line">liquibase.drop-first=false # Drop the database schema first.</div><div class="line">liquibase.enabled=true # Enable liquibase support.</div><div class="line">liquibase.labels= # Comma-separated list of runtime labels to use.</div><div class="line">liquibase.parameters.*= # Change log parameters.</div><div class="line">liquibase.password= # Login password of the database to migrate.</div><div class="line">liquibase.rollback-file= # File to which rollback SQL will be written when an update is performed.</div><div class="line">liquibase.url= # JDBC url of the database to migrate. If not set, the primary configured data source is used.</div><div class="line">liquibase.user= # Login user of the database to migrate.</div><div class="line"></div><div class="line"># COUCHBASE (CouchbaseProperties)</div><div class="line">spring.couchbase.bootstrap-hosts= # Couchbase nodes (host or IP address) to bootstrap from.</div><div class="line">spring.couchbase.bucket.name=default # Name of the bucket to connect to.</div><div class="line">spring.couchbase.bucket.password=  # Password of the bucket.</div><div class="line">spring.couchbase.env.endpoints.key-value=1 # Number of sockets per node against the Key/value service.</div><div class="line">spring.couchbase.env.endpoints.query=1 # Number of sockets per node against the Query (N1QL) service.</div><div class="line">spring.couchbase.env.endpoints.view=1 # Number of sockets per node against the view service.</div><div class="line">spring.couchbase.env.ssl.enabled= # Enable SSL support. Enabled automatically if a &quot;keyStore&quot; is provided unless specified otherwise.</div><div class="line">spring.couchbase.env.ssl.key-store= # Path to the JVM key store that holds the certificates.</div><div class="line">spring.couchbase.env.ssl.key-store-password= # Password used to access the key store.</div><div class="line">spring.couchbase.env.timeouts.connect=5000 # Bucket connections timeout in milliseconds.</div><div class="line">spring.couchbase.env.timeouts.key-value=2500 # Blocking operations performed on a specific key timeout in milliseconds.</div><div class="line">spring.couchbase.env.timeouts.query=7500 # N1QL query operations timeout in milliseconds.</div><div class="line">spring.couchbase.env.timeouts.socket-connect=1000 # Socket connect connections timeout in milliseconds.</div><div class="line">spring.couchbase.env.timeouts.view=7500 # Regular and geospatial view operations timeout in milliseconds.</div><div class="line"></div><div class="line"># DAO (PersistenceExceptionTranslationAutoConfiguration)</div><div class="line">spring.dao.exceptiontranslation.enabled=true # Enable the PersistenceExceptionTranslationPostProcessor.</div><div class="line"></div><div class="line"># CASSANDRA (CassandraProperties)</div><div class="line">spring.data.cassandra.cluster-name= # Name of the Cassandra cluster.</div><div class="line">spring.data.cassandra.compression=none # Compression supported by the Cassandra binary protocol.</div><div class="line">spring.data.cassandra.connect-timeout-millis= # Socket option: connection time out.</div><div class="line">spring.data.cassandra.consistency-level= # Queries consistency level.</div><div class="line">spring.data.cassandra.contact-points=localhost # Comma-separated list of cluster node addresses.</div><div class="line">spring.data.cassandra.fetch-size= # Queries default fetch size.</div><div class="line">spring.data.cassandra.keyspace-name= # Keyspace name to use.</div><div class="line">spring.data.cassandra.load-balancing-policy= # Class name of the load balancing policy.</div><div class="line">spring.data.cassandra.port= # Port of the Cassandra server.</div><div class="line">spring.data.cassandra.password= # Login password of the server.</div><div class="line">spring.data.cassandra.read-timeout-millis= # Socket option: read time out.</div><div class="line">spring.data.cassandra.reconnection-policy= # Reconnection policy class.</div><div class="line">spring.data.cassandra.retry-policy= # Class name of the retry policy.</div><div class="line">spring.data.cassandra.serial-consistency-level= # Queries serial consistency level.</div><div class="line">spring.data.cassandra.schema-action=none # Schema action to take at startup.</div><div class="line">spring.data.cassandra.ssl=false # Enable SSL support.</div><div class="line">spring.data.cassandra.username= # Login user of the server.</div><div class="line"></div><div class="line"># DATA COUCHBASE (CouchbaseDataProperties)</div><div class="line">spring.data.couchbase.auto-index=false # Automatically create views and indexes.</div><div class="line">spring.data.couchbase.consistency=read-your-own-writes # Consistency to apply by default on generated queries.</div><div class="line">spring.data.couchbase.repositories.enabled=true # Enable Couchbase repositories.</div><div class="line"></div><div class="line"># ELASTICSEARCH (ElasticsearchProperties)</div><div class="line">spring.data.elasticsearch.cluster-name=elasticsearch # Elasticsearch cluster name.</div><div class="line">spring.data.elasticsearch.cluster-nodes= # Comma-separated list of cluster node addresses. If not specified, starts a client node.</div><div class="line">spring.data.elasticsearch.properties.*= # Additional properties used to configure the client.</div><div class="line">spring.data.elasticsearch.repositories.enabled=true # Enable Elasticsearch repositories.</div><div class="line"></div><div class="line"># DATA LDAP</div><div class="line">spring.data.ldap.repositories.enabled=true # Enable LDAP repositories.</div><div class="line"></div><div class="line"># MONGODB (MongoProperties)</div><div class="line">spring.data.mongodb.authentication-database= # Authentication database name.</div><div class="line">spring.data.mongodb.database=test # Database name.</div><div class="line">spring.data.mongodb.field-naming-strategy= # Fully qualified name of the FieldNamingStrategy to use.</div><div class="line">spring.data.mongodb.grid-fs-database= # GridFS database name.</div><div class="line">spring.data.mongodb.host=localhost # Mongo server host. Cannot be set with uri.</div><div class="line">spring.data.mongodb.password= # Login password of the mongo server. Cannot be set with uri.</div><div class="line">spring.data.mongodb.port=27017 # Mongo server port. Cannot be set with uri.</div><div class="line">spring.data.mongodb.repositories.enabled=true # Enable Mongo repositories.</div><div class="line">spring.data.mongodb.uri=mongodb://localhost/test # Mongo database URI. Cannot be set with host, port and credentials.</div><div class="line">spring.data.mongodb.username= # Login user of the mongo server. Cannot be set with uri.</div><div class="line"></div><div class="line"># DATA REDIS</div><div class="line">spring.data.redis.repositories.enabled=true # Enable Redis repositories.</div><div class="line"></div><div class="line"># NEO4J (Neo4jProperties)</div><div class="line">spring.data.neo4j.compiler= # Compiler to use.</div><div class="line">spring.data.neo4j.embedded.enabled=true # Enable embedded mode if the embedded driver is available.</div><div class="line">spring.data.neo4j.open-in-view=false # Register OpenSessionInViewInterceptor. Binds a Neo4j Session to the thread for the entire processing of the request.</div><div class="line">spring.data.neo4j.password= # Login password of the server.</div><div class="line">spring.data.neo4j.repositories.enabled=true # Enable Neo4j repositories.</div><div class="line">spring.data.neo4j.uri= # URI used by the driver. Auto-detected by default.</div><div class="line">spring.data.neo4j.username= # Login user of the server.</div><div class="line"></div><div class="line"># DATA REST (RepositoryRestProperties)</div><div class="line">spring.data.rest.base-path= # Base path to be used by Spring Data REST to expose repository resources.</div><div class="line">spring.data.rest.default-page-size= # Default size of pages.</div><div class="line">spring.data.rest.detection-strategy=default # Strategy to use to determine which repositories get exposed.</div><div class="line">spring.data.rest.enable-enum-translation= # Enable enum value translation via the Spring Data REST default resource bundle.</div><div class="line">spring.data.rest.limit-param-name= # Name of the URL query string parameter that indicates how many results to return at once.</div><div class="line">spring.data.rest.max-page-size= # Maximum size of pages.</div><div class="line">spring.data.rest.page-param-name= # Name of the URL query string parameter that indicates what page to return.</div><div class="line">spring.data.rest.return-body-on-create= # Return a response body after creating an entity.</div><div class="line">spring.data.rest.return-body-on-update= # Return a response body after updating an entity.</div><div class="line">spring.data.rest.sort-param-name= # Name of the URL query string parameter that indicates what direction to sort results.</div><div class="line"></div><div class="line"># SOLR (SolrProperties)</div><div class="line">spring.data.solr.host=http://127.0.0.1:8983/solr # Solr host. Ignored if &quot;zk-host&quot; is set.</div><div class="line">spring.data.solr.repositories.enabled=true # Enable Solr repositories.</div><div class="line">spring.data.solr.zk-host= # ZooKeeper host address in the form HOST:PORT.</div><div class="line"></div><div class="line"># DATASOURCE (DataSourceAutoConfiguration &amp; DataSourceProperties)</div><div class="line">spring.datasource.continue-on-error=false # Do not stop if an error occurs while initializing the database.</div><div class="line">spring.datasource.data= # Data (DML) script resource references.</div><div class="line">spring.datasource.data-username= # User of the database to execute DML scripts (if different).</div><div class="line">spring.datasource.data-password= # Password of the database to execute DML scripts (if different).</div><div class="line">spring.datasource.dbcp2.*= # Commons DBCP2 specific settings</div><div class="line">spring.datasource.driver-class-name= # Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.</div><div class="line">spring.datasource.generate-unique-name=false # Generate a random datasource name.</div><div class="line">spring.datasource.hikari.*= # Hikari specific settings</div><div class="line">spring.datasource.initialize=true # Populate the database using &apos;data.sql&apos;.</div><div class="line">spring.datasource.jmx-enabled=false # Enable JMX support (if provided by the underlying pool).</div><div class="line">spring.datasource.jndi-name= # JNDI location of the datasource. Class, url, username &amp; password are ignored when set.</div><div class="line">spring.datasource.name=testdb # Name of the datasource.</div><div class="line">spring.datasource.password= # Login password of the database.</div><div class="line">spring.datasource.platform=all # Platform to use in the schema resource (schema-$&#123;platform&#125;.sql).</div><div class="line">spring.datasource.schema= # Schema (DDL) script resource references.</div><div class="line">spring.datasource.schema-username= # User of the database to execute DDL scripts (if different).</div><div class="line">spring.datasource.schema-password= # Password of the database to execute DDL scripts (if different).</div><div class="line">spring.datasource.separator=; # Statement separator in SQL initialization scripts.</div><div class="line">spring.datasource.sql-script-encoding= # SQL scripts encoding.</div><div class="line">spring.datasource.tomcat.*= # Tomcat datasource specific settings</div><div class="line">spring.datasource.type= # Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.</div><div class="line">spring.datasource.url= # JDBC url of the database.</div><div class="line">spring.datasource.username=</div><div class="line"></div><div class="line"># JEST (Elasticsearch HTTP client) (JestProperties)</div><div class="line">spring.elasticsearch.jest.connection-timeout=3000 # Connection timeout in milliseconds.</div><div class="line">spring.elasticsearch.jest.multi-threaded=true # Enable connection requests from multiple execution threads.</div><div class="line">spring.elasticsearch.jest.password= # Login password.</div><div class="line">spring.elasticsearch.jest.proxy.host= # Proxy host the HTTP client should use.</div><div class="line">spring.elasticsearch.jest.proxy.port= # Proxy port the HTTP client should use.</div><div class="line">spring.elasticsearch.jest.read-timeout=3000 # Read timeout in milliseconds.</div><div class="line">spring.elasticsearch.jest.uris=http://localhost:9200 # Comma-separated list of the Elasticsearch instances to use.</div><div class="line">spring.elasticsearch.jest.username= # Login user.</div><div class="line"></div><div class="line"># H2 Web Console (H2ConsoleProperties)</div><div class="line">spring.h2.console.enabled=false # Enable the console.</div><div class="line">spring.h2.console.path=/h2-console # Path at which the console will be available.</div><div class="line">spring.h2.console.settings.trace=false # Enable trace output.</div><div class="line">spring.h2.console.settings.web-allow-others=false # Enable remote access.</div><div class="line"></div><div class="line"># JOOQ (JooqAutoConfiguration)</div><div class="line">spring.jooq.sql-dialect= # SQLDialect JOOQ used when communicating with the configured datasource. For instance `POSTGRES`</div><div class="line"></div><div class="line"># JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)</div><div class="line">spring.data.jpa.repositories.enabled=true # Enable JPA repositories.</div><div class="line">spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the &quot;databasePlatform&quot; property.</div><div class="line">spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the &quot;Database&quot; enum.</div><div class="line">spring.jpa.generate-ddl=false # Initialize the schema on startup.</div><div class="line">spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the &quot;hibernate.hbm2ddl.auto&quot; property. Default to &quot;create-drop&quot; when using an embedded database, &quot;none&quot; otherwise.</div><div class="line">spring.jpa.hibernate.naming.implicit-strategy= # Hibernate 5 implicit naming strategy fully qualified name.</div><div class="line">spring.jpa.hibernate.naming.physical-strategy= # Hibernate 5 physical naming strategy fully qualified name.</div><div class="line">spring.jpa.hibernate.naming.strategy= # Hibernate 4 naming strategy fully qualified name. Not supported with Hibernate 5.</div><div class="line">spring.jpa.hibernate.use-new-id-generator-mappings= # Use Hibernate&apos;s newer IdentifierGenerator for AUTO, TABLE and SEQUENCE.</div><div class="line">spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.</div><div class="line">spring.jpa.properties.*= # Additional native properties to set on the JPA provider.</div><div class="line">spring.jpa.show-sql=false # Enable logging of SQL statements.</div><div class="line"></div><div class="line"># JTA (JtaAutoConfiguration)</div><div class="line">spring.jta.enabled=true # Enable JTA support.</div><div class="line">spring.jta.log-dir= # Transaction logs directory.</div><div class="line">spring.jta.transaction-manager-id= # Transaction manager unique identifier.</div><div class="line"></div><div class="line"># ATOMIKOS (AtomikosProperties)</div><div class="line">spring.jta.atomikos.connectionfactory.borrow-connection-timeout=30 # Timeout, in seconds, for borrowing connections from the pool.</div><div class="line">spring.jta.atomikos.connectionfactory.ignore-session-transacted-flag=true # Whether or not to ignore the transacted flag when creating session.</div><div class="line">spring.jta.atomikos.connectionfactory.local-transaction-mode=false # Whether or not local transactions are desired.</div><div class="line">spring.jta.atomikos.connectionfactory.maintenance-interval=60 # The time, in seconds, between runs of the pool&apos;s maintenance thread.</div><div class="line">spring.jta.atomikos.connectionfactory.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</div><div class="line">spring.jta.atomikos.connectionfactory.max-lifetime=0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.</div><div class="line">spring.jta.atomikos.connectionfactory.max-pool-size=1 # The maximum size of the pool.</div><div class="line">spring.jta.atomikos.connectionfactory.min-pool-size=1 # The minimum size of the pool.</div><div class="line">spring.jta.atomikos.connectionfactory.reap-timeout=0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.</div><div class="line">spring.jta.atomikos.connectionfactory.unique-resource-name=jmsConnectionFactory # The unique name used to identify the resource during recovery.</div><div class="line">spring.jta.atomikos.datasource.borrow-connection-timeout=30 # Timeout, in seconds, for borrowing connections from the pool.</div><div class="line">spring.jta.atomikos.datasource.default-isolation-level= # Default isolation level of connections provided by the pool.</div><div class="line">spring.jta.atomikos.datasource.login-timeout= # Timeout, in seconds, for establishing a database connection.</div><div class="line">spring.jta.atomikos.datasource.maintenance-interval=60 # The time, in seconds, between runs of the pool&apos;s maintenance thread.</div><div class="line">spring.jta.atomikos.datasource.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</div><div class="line">spring.jta.atomikos.datasource.max-lifetime=0 # The time, in seconds, that a connection can be pooled for before being destroyed. 0 denotes no limit.</div><div class="line">spring.jta.atomikos.datasource.max-pool-size=1 # The maximum size of the pool.</div><div class="line">spring.jta.atomikos.datasource.min-pool-size=1 # The minimum size of the pool.</div><div class="line">spring.jta.atomikos.datasource.reap-timeout=0 # The reap timeout, in seconds, for borrowed connections. 0 denotes no limit.</div><div class="line">spring.jta.atomikos.datasource.test-query= # SQL query or statement used to validate a connection before returning it.</div><div class="line">spring.jta.atomikos.datasource.unique-resource-name=dataSource # The unique name used to identify the resource during recovery.</div><div class="line">spring.jta.atomikos.properties.checkpoint-interval=500 # Interval between checkpoints.</div><div class="line">spring.jta.atomikos.properties.console-file-count=1 # Number of debug logs files that can be created.</div><div class="line">spring.jta.atomikos.properties.console-file-limit=-1 # How many bytes can be stored at most in debug logs files.</div><div class="line">spring.jta.atomikos.properties.console-file-name=tm.out # Debug logs file name.</div><div class="line">spring.jta.atomikos.properties.console-log-level=warn # Console log level.</div><div class="line">spring.jta.atomikos.properties.default-jta-timeout=10000 # Default timeout for JTA transactions.</div><div class="line">spring.jta.atomikos.properties.enable-logging=true # Enable disk logging.</div><div class="line">spring.jta.atomikos.properties.force-shutdown-on-vm-exit=false # Specify if a VM shutdown should trigger forced shutdown of the transaction core.</div><div class="line">spring.jta.atomikos.properties.log-base-dir= # Directory in which the log files should be stored.</div><div class="line">spring.jta.atomikos.properties.log-base-name=tmlog # Transactions log file base name.</div><div class="line">spring.jta.atomikos.properties.max-actives=50 # Maximum number of active transactions.</div><div class="line">spring.jta.atomikos.properties.max-timeout=300000 # Maximum timeout (in milliseconds) that can be allowed for transactions.</div><div class="line">spring.jta.atomikos.properties.output-dir= # Directory in which to store the debug log files.</div><div class="line">spring.jta.atomikos.properties.serial-jta-transactions=true # Specify if sub-transactions should be joined when possible.</div><div class="line">spring.jta.atomikos.properties.service= # Transaction manager implementation that should be started.</div><div class="line">spring.jta.atomikos.properties.threaded-two-phase-commit=true # Use different (and concurrent) threads for two-phase commit on the participating resources.</div><div class="line">spring.jta.atomikos.properties.transaction-manager-unique-name= # Transaction manager&apos;s unique name.</div><div class="line"></div><div class="line"># BITRONIX</div><div class="line">spring.jta.bitronix.connectionfactory.acquire-increment=1 # Number of connections to create when growing the pool.</div><div class="line">spring.jta.bitronix.connectionfactory.acquisition-interval=1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.</div><div class="line">spring.jta.bitronix.connectionfactory.acquisition-timeout=30 # Timeout, in seconds, for acquiring connections from the pool.</div><div class="line">spring.jta.bitronix.connectionfactory.allow-local-transactions=true # Whether or not the transaction manager should allow mixing XA and non-XA transactions.</div><div class="line">spring.jta.bitronix.connectionfactory.apply-transaction-timeout=false # Whether or not the transaction timeout should be set on the XAResource when it is enlisted.</div><div class="line">spring.jta.bitronix.connectionfactory.automatic-enlisting-enabled=true # Whether or not resources should be enlisted and delisted automatically.</div><div class="line">spring.jta.bitronix.connectionfactory.cache-producers-consumers=true # Whether or not produces and consumers should be cached.</div><div class="line">spring.jta.bitronix.connectionfactory.defer-connection-release=true # Whether or not the provider can run many transactions on the same connection and supports transaction interleaving.</div><div class="line">spring.jta.bitronix.connectionfactory.ignore-recovery-failures=false # Whether or not recovery failures should be ignored.</div><div class="line">spring.jta.bitronix.connectionfactory.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</div><div class="line">spring.jta.bitronix.connectionfactory.max-pool-size=10 # The maximum size of the pool. 0 denotes no limit.</div><div class="line">spring.jta.bitronix.connectionfactory.min-pool-size=0 # The minimum size of the pool.</div><div class="line">spring.jta.bitronix.connectionfactory.password= # The password to use to connect to the JMS provider.</div><div class="line">spring.jta.bitronix.connectionfactory.share-transaction-connections=false #  Whether or not connections in the ACCESSIBLE state can be shared within the context of a transaction.</div><div class="line">spring.jta.bitronix.connectionfactory.test-connections=true # Whether or not connections should be tested when acquired from the pool.</div><div class="line">spring.jta.bitronix.connectionfactory.two-pc-ordering-position=1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).</div><div class="line">spring.jta.bitronix.connectionfactory.unique-name=jmsConnectionFactory # The unique name used to identify the resource during recovery.</div><div class="line">spring.jta.bitronix.connectionfactory.use-tm-join=true Whether or not TMJOIN should be used when starting XAResources.</div><div class="line">spring.jta.bitronix.connectionfactory.user= # The user to use to connect to the JMS provider.</div><div class="line">spring.jta.bitronix.datasource.acquire-increment=1 # Number of connections to create when growing the pool.</div><div class="line">spring.jta.bitronix.datasource.acquisition-interval=1 # Time, in seconds, to wait before trying to acquire a connection again after an invalid connection was acquired.</div><div class="line">spring.jta.bitronix.datasource.acquisition-timeout=30 # Timeout, in seconds, for acquiring connections from the pool.</div><div class="line">spring.jta.bitronix.datasource.allow-local-transactions=true # Whether or not the transaction manager should allow mixing XA and non-XA transactions.</div><div class="line">spring.jta.bitronix.datasource.apply-transaction-timeout=false # Whether or not the transaction timeout should be set on the XAResource when it is enlisted.</div><div class="line">spring.jta.bitronix.datasource.automatic-enlisting-enabled=true # Whether or not resources should be enlisted and delisted automatically.</div><div class="line">spring.jta.bitronix.datasource.cursor-holdability= # The default cursor holdability for connections.</div><div class="line">spring.jta.bitronix.datasource.defer-connection-release=true # Whether or not the database can run many transactions on the same connection and supports transaction interleaving.</div><div class="line">spring.jta.bitronix.datasource.enable-jdbc4-connection-test= # Whether or not Connection.isValid() is called when acquiring a connection from the pool.</div><div class="line">spring.jta.bitronix.datasource.ignore-recovery-failures=false # Whether or not recovery failures should be ignored.</div><div class="line">spring.jta.bitronix.datasource.isolation-level= # The default isolation level for connections.</div><div class="line">spring.jta.bitronix.datasource.local-auto-commit= # The default auto-commit mode for local transactions.</div><div class="line">spring.jta.bitronix.datasource.login-timeout= # Timeout, in seconds, for establishing a database connection.</div><div class="line">spring.jta.bitronix.datasource.max-idle-time=60 # The time, in seconds, after which connections are cleaned up from the pool.</div><div class="line">spring.jta.bitronix.datasource.max-pool-size=10 # The maximum size of the pool. 0 denotes no limit.</div><div class="line">spring.jta.bitronix.datasource.min-pool-size=0 # The minimum size of the pool.</div><div class="line">spring.jta.bitronix.datasource.prepared-statement-cache-size=0 # The target size of the prepared statement cache. 0 disables the cache.</div><div class="line">spring.jta.bitronix.datasource.share-transaction-connections=false #  Whether or not connections in the ACCESSIBLE state can be shared within the context of a transaction.</div><div class="line">spring.jta.bitronix.datasource.test-query= # SQL query or statement used to validate a connection before returning it.</div><div class="line">spring.jta.bitronix.datasource.two-pc-ordering-position=1 # The position that this resource should take during two-phase commit (always first is Integer.MIN_VALUE, always last is Integer.MAX_VALUE).</div><div class="line">spring.jta.bitronix.datasource.unique-name=dataSource # The unique name used to identify the resource during recovery.</div><div class="line">spring.jta.bitronix.datasource.use-tm-join=true Whether or not TMJOIN should be used when starting XAResources.</div><div class="line">spring.jta.bitronix.properties.allow-multiple-lrc=false # Allow multiple LRC resources to be enlisted into the same transaction.</div><div class="line">spring.jta.bitronix.properties.asynchronous2-pc=false # Enable asynchronously execution of two phase commit.</div><div class="line">spring.jta.bitronix.properties.background-recovery-interval-seconds=60 # Interval in seconds at which to run the recovery process in the background.</div><div class="line">spring.jta.bitronix.properties.current-node-only-recovery=true # Recover only the current node.</div><div class="line">spring.jta.bitronix.properties.debug-zero-resource-transaction=false # Log the creation and commit call stacks of transactions executed without a single enlisted resource.</div><div class="line">spring.jta.bitronix.properties.default-transaction-timeout=60 # Default transaction timeout in seconds.</div><div class="line">spring.jta.bitronix.properties.disable-jmx=false # Enable JMX support.</div><div class="line">spring.jta.bitronix.properties.exception-analyzer= # Set the fully qualified name of the exception analyzer implementation to use.</div><div class="line">spring.jta.bitronix.properties.filter-log-status=false # Enable filtering of logs so that only mandatory logs are written.</div><div class="line">spring.jta.bitronix.properties.force-batching-enabled=true #  Set if disk forces are batched.</div><div class="line">spring.jta.bitronix.properties.forced-write-enabled=true # Set if logs are forced to disk.</div><div class="line">spring.jta.bitronix.properties.graceful-shutdown-interval=60 # Maximum amount of seconds the TM will wait for transactions to get done before aborting them at shutdown time.</div><div class="line">spring.jta.bitronix.properties.jndi-transaction-synchronization-registry-name= # JNDI name of the TransactionSynchronizationRegistry.</div><div class="line">spring.jta.bitronix.properties.jndi-user-transaction-name= # JNDI name of the UserTransaction.</div><div class="line">spring.jta.bitronix.properties.journal=disk # Name of the journal. Can be &apos;disk&apos;, &apos;null&apos; or a class name.</div><div class="line">spring.jta.bitronix.properties.log-part1-filename=btm1.tlog # Name of the first fragment of the journal.</div><div class="line">spring.jta.bitronix.properties.log-part2-filename=btm2.tlog # Name of the second fragment of the journal.</div><div class="line">spring.jta.bitronix.properties.max-log-size-in-mb=2 # Maximum size in megabytes of the journal fragments.</div><div class="line">spring.jta.bitronix.properties.resource-configuration-filename= # ResourceLoader configuration file name.</div><div class="line">spring.jta.bitronix.properties.server-id= # ASCII ID that must uniquely identify this TM instance. Default to the machine&apos;s IP address.</div><div class="line">spring.jta.bitronix.properties.skip-corrupted-logs=false # Skip corrupted transactions log entries.</div><div class="line">spring.jta.bitronix.properties.warn-about-zero-resource-transaction=true # Log a warning for transactions executed without a single enlisted resource.</div><div class="line"></div><div class="line"># NARAYANA (NarayanaProperties)</div><div class="line">spring.jta.narayana.default-timeout=60 # Transaction timeout in seconds.</div><div class="line">spring.jta.narayana.expiry-scanners=com.arjuna.ats.internal.arjuna.recovery.ExpiredTransactionStatusManagerScanner # Comma-separated list of expiry scanners.</div><div class="line">spring.jta.narayana.log-dir= # Transaction object store directory.</div><div class="line">spring.jta.narayana.one-phase-commit=true # Enable one phase commit optimisation.</div><div class="line">spring.jta.narayana.periodic-recovery-period=120 # Interval in which periodic recovery scans are performed in seconds.</div><div class="line">spring.jta.narayana.recovery-backoff-period=10 # Back off period between first and second phases of the recovery scan in seconds.</div><div class="line">spring.jta.narayana.recovery-db-pass= # Database password to be used by recovery manager.</div><div class="line">spring.jta.narayana.recovery-db-user= # Database username to be used by recovery manager.</div><div class="line">spring.jta.narayana.recovery-jms-pass= # JMS password to be used by recovery manager.</div><div class="line">spring.jta.narayana.recovery-jms-user= # JMS username to be used by recovery manager.</div><div class="line">spring.jta.narayana.recovery-modules= # Comma-separated list of recovery modules.</div><div class="line">spring.jta.narayana.transaction-manager-id=1 # Unique transaction manager id.</div><div class="line">spring.jta.narayana.xa-resource-orphan-filters= # Comma-separated list of orphan filters.</div><div class="line"></div><div class="line"># EMBEDDED MONGODB (EmbeddedMongoProperties)</div><div class="line">spring.mongodb.embedded.features=SYNC_DELAY # Comma-separated list of features to enable.</div><div class="line">spring.mongodb.embedded.storage.database-dir= # Directory used for data storage.</div><div class="line">spring.mongodb.embedded.storage.oplog-size= # Maximum size of the oplog in megabytes.</div><div class="line">spring.mongodb.embedded.storage.repl-set-name= # Name of the replica set.</div><div class="line">spring.mongodb.embedded.version=2.6.10 # Version of Mongo to use.</div><div class="line"></div><div class="line"># REDIS (RedisProperties)</div><div class="line">spring.redis.cluster.max-redirects= # Maximum number of redirects to follow when executing commands across the cluster.</div><div class="line">spring.redis.cluster.nodes= # Comma-separated list of &quot;host:port&quot; pairs to bootstrap from.</div><div class="line">spring.redis.database=0 # Database index used by the connection factory.</div><div class="line">spring.redis.url= # Connection URL, will override host, port and password (user will be ignored), e.g. redis://user:password@example.com:6379</div><div class="line">spring.redis.host=localhost # Redis server host.</div><div class="line">spring.redis.password= # Login password of the redis server.</div><div class="line">spring.redis.ssl=false # Enable SSL support.</div><div class="line">spring.redis.pool.max-active=8 # Max number of connections that can be allocated by the pool at a given time. Use a negative value for no limit.</div><div class="line">spring.redis.pool.max-idle=8 # Max number of &quot;idle&quot; connections in the pool. Use a negative value to indicate an unlimited number of idle connections.</div><div class="line">spring.redis.pool.max-wait=-1 # Maximum amount of time (in milliseconds) a connection allocation should block before throwing an exception when the pool is exhausted. Use a negative value to block indefinitely.</div><div class="line">spring.redis.pool.min-idle=0 # Target for the minimum number of idle connections to maintain in the pool. This setting only has an effect if it is positive.</div><div class="line">spring.redis.port=6379 # Redis server port.</div><div class="line">spring.redis.sentinel.master= # Name of Redis server.</div><div class="line">spring.redis.sentinel.nodes= # Comma-separated list of host:port pairs.</div><div class="line">spring.redis.timeout=0 # Connection timeout in milliseconds.</div><div class="line"></div><div class="line"># TRANSACTION (TransactionProperties)</div><div class="line">spring.transaction.default-timeout= # Default transaction timeout in seconds.</div><div class="line">spring.transaction.rollback-on-commit-failure= # Perform the rollback on commit failures.</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"># ----------------------------------------</div><div class="line"># INTEGRATION PROPERTIES</div><div class="line"># ----------------------------------------</div><div class="line"></div><div class="line"># ACTIVEMQ (ActiveMQProperties)</div><div class="line">spring.activemq.broker-url= # URL of the ActiveMQ broker. Auto-generated by default. For instance `tcp://localhost:61616`</div><div class="line">spring.activemq.in-memory=true # Specify if the default broker URL should be in memory. Ignored if an explicit broker has been specified.</div><div class="line">spring.activemq.password= # Login password of the broker.</div><div class="line">spring.activemq.user= # Login user of the broker.</div><div class="line">spring.activemq.packages.trust-all=false # Trust all packages.</div><div class="line">spring.activemq.packages.trusted= # Comma-separated list of specific packages to trust (when not trusting all packages).</div><div class="line">spring.activemq.pool.configuration.*= # See PooledConnectionFactory.</div><div class="line">spring.activemq.pool.enabled=false # Whether a PooledConnectionFactory should be created instead of a regular ConnectionFactory.</div><div class="line">spring.activemq.pool.expiry-timeout=0 # Connection expiration timeout in milliseconds.</div><div class="line">spring.activemq.pool.idle-timeout=30000 # Connection idle timeout in milliseconds.</div><div class="line">spring.activemq.pool.max-connections=1 # Maximum number of pooled connections.</div><div class="line"></div><div class="line"># ARTEMIS (ArtemisProperties)</div><div class="line">spring.artemis.embedded.cluster-password= # Cluster password. Randomly generated on startup by default.</div><div class="line">spring.artemis.embedded.data-directory= # Journal file directory. Not necessary if persistence is turned off.</div><div class="line">spring.artemis.embedded.enabled=true # Enable embedded mode if the Artemis server APIs are available.</div><div class="line">spring.artemis.embedded.persistent=false # Enable persistent store.</div><div class="line">spring.artemis.embedded.queues= # Comma-separated list of queues to create on startup.</div><div class="line">spring.artemis.embedded.server-id= # Server id. By default, an auto-incremented counter is used.</div><div class="line">spring.artemis.embedded.topics= # Comma-separated list of topics to create on startup.</div><div class="line">spring.artemis.host=localhost # Artemis broker host.</div><div class="line">spring.artemis.mode= # Artemis deployment mode, auto-detected by default.</div><div class="line">spring.artemis.password= # Login password of the broker.</div><div class="line">spring.artemis.port=61616 # Artemis broker port.</div><div class="line">spring.artemis.user= # Login user of the broker.</div><div class="line"></div><div class="line"># SPRING BATCH (BatchProperties)</div><div class="line">spring.batch.initializer.enabled= # Create the required batch tables on startup if necessary. Enabled automatically if no custom table prefix is set or if a custom schema is configured.</div><div class="line">spring.batch.job.enabled=true # Execute all Spring Batch jobs in the context on startup.</div><div class="line">spring.batch.job.names= # Comma-separated list of job names to execute on startup (For instance `job1,job2`). By default, all Jobs found in the context are executed.</div><div class="line">spring.batch.schema=classpath:org/springframework/batch/core/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.</div><div class="line">spring.batch.table-prefix= # Table prefix for all the batch meta-data tables.</div><div class="line"></div><div class="line"># JMS (JmsProperties)</div><div class="line">spring.jms.jndi-name= # Connection factory JNDI name. When set, takes precedence to others connection factory auto-configurations.</div><div class="line">spring.jms.listener.acknowledge-mode= # Acknowledge mode of the container. By default, the listener is transacted with automatic acknowledgment.</div><div class="line">spring.jms.listener.auto-startup=true # Start the container automatically on startup.</div><div class="line">spring.jms.listener.concurrency= # Minimum number of concurrent consumers.</div><div class="line">spring.jms.listener.max-concurrency= # Maximum number of concurrent consumers.</div><div class="line">spring.jms.pub-sub-domain=false # Specify if the default destination type is topic.</div><div class="line">spring.jms.template.default-destination= # Default destination to use on send/receive operations that do not have a destination parameter.</div><div class="line">spring.jms.template.delivery-delay= # Delivery delay to use for send calls in milliseconds.</div><div class="line">spring.jms.template.delivery-mode= # Delivery mode. Enable QoS when set.</div><div class="line">spring.jms.template.priority= # Priority of a message when sending. Enable QoS when set.</div><div class="line">spring.jms.template.qos-enabled= # Enable explicit QoS when sending a message.</div><div class="line">spring.jms.template.receive-timeout= # Timeout to use for receive calls in milliseconds.</div><div class="line">spring.jms.template.time-to-live= # Time-to-live of a message when sending in milliseconds. Enable QoS when set.</div><div class="line"></div><div class="line"># APACHE KAFKA (KafkaProperties)</div><div class="line">spring.kafka.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</div><div class="line">spring.kafka.client-id= # Id to pass to the server when making requests; used for server-side logging.</div><div class="line">spring.kafka.consumer.auto-commit-interval= # Frequency in milliseconds that the consumer offsets are auto-committed to Kafka if &apos;enable.auto.commit&apos; true.</div><div class="line">spring.kafka.consumer.auto-offset-reset= # What to do when there is no initial offset in Kafka or if the current offset does not exist any more on the server.</div><div class="line">spring.kafka.consumer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</div><div class="line">spring.kafka.consumer.client-id= # Id to pass to the server when making requests; used for server-side logging.</div><div class="line">spring.kafka.consumer.enable-auto-commit= # If true the consumer&apos;s offset will be periodically committed in the background.</div><div class="line">spring.kafka.consumer.fetch-max-wait= # Maximum amount of time in milliseconds the server will block before answering the fetch request if there isn&apos;t sufficient data to immediately satisfy the requirement given by &quot;fetch.min.bytes&quot;.</div><div class="line">spring.kafka.consumer.fetch-min-size= # Minimum amount of data the server should return for a fetch request in bytes.</div><div class="line">spring.kafka.consumer.group-id= # Unique string that identifies the consumer group this consumer belongs to.</div><div class="line">spring.kafka.consumer.heartbeat-interval= # Expected time in milliseconds between heartbeats to the consumer coordinator.</div><div class="line">spring.kafka.consumer.key-deserializer= # Deserializer class for keys.</div><div class="line">spring.kafka.consumer.max-poll-records= # Maximum number of records returned in a single call to poll().</div><div class="line">spring.kafka.consumer.value-deserializer= # Deserializer class for values.</div><div class="line">spring.kafka.listener.ack-count= # Number of records between offset commits when ackMode is &quot;COUNT&quot; or &quot;COUNT_TIME&quot;.</div><div class="line">spring.kafka.listener.ack-mode= # Listener AckMode; see the spring-kafka documentation.</div><div class="line">spring.kafka.listener.ack-time= # Time in milliseconds between offset commits when ackMode is &quot;TIME&quot; or &quot;COUNT_TIME&quot;.</div><div class="line">spring.kafka.listener.concurrency= # Number of threads to run in the listener containers.</div><div class="line">spring.kafka.listener.poll-timeout= # Timeout in milliseconds to use when polling the consumer.</div><div class="line">spring.kafka.producer.acks= # Number of acknowledgments the producer requires the leader to have received before considering a request complete.</div><div class="line">spring.kafka.producer.batch-size= # Number of records to batch before sending.</div><div class="line">spring.kafka.producer.bootstrap-servers= # Comma-delimited list of host:port pairs to use for establishing the initial connection to the Kafka cluster.</div><div class="line">spring.kafka.producer.buffer-memory= # Total bytes of memory the producer can use to buffer records waiting to be sent to the server.</div><div class="line">spring.kafka.producer.client-id= # Id to pass to the server when making requests; used for server-side logging.</div><div class="line">spring.kafka.producer.compression-type= # Compression type for all data generated by the producer.</div><div class="line">spring.kafka.producer.key-serializer= # Serializer class for keys.</div><div class="line">spring.kafka.producer.retries= # When greater than zero, enables retrying of failed sends.</div><div class="line">spring.kafka.producer.value-serializer= # Serializer class for values.</div><div class="line">spring.kafka.properties.*= # Additional properties used to configure the client.</div><div class="line">spring.kafka.ssl.key-password= # Password of the private key in the key store file.</div><div class="line">spring.kafka.ssl.keystore-location= # Location of the key store file.</div><div class="line">spring.kafka.ssl.keystore-password= # Store password for the key store file.</div><div class="line">spring.kafka.ssl.truststore-location= # Location of the trust store file.</div><div class="line">spring.kafka.ssl.truststore-password= # Store password for the trust store file.</div><div class="line">spring.kafka.template.default-topic= # Default topic to which messages will be sent.</div><div class="line"></div><div class="line"># RABBIT (RabbitProperties)</div><div class="line">spring.rabbitmq.addresses= # Comma-separated list of addresses to which the client should connect.</div><div class="line">spring.rabbitmq.cache.channel.checkout-timeout= # Number of milliseconds to wait to obtain a channel if the cache size has been reached.</div><div class="line">spring.rabbitmq.cache.channel.size= # Number of channels to retain in the cache.</div><div class="line">spring.rabbitmq.cache.connection.mode=channel # Connection factory cache mode.</div><div class="line">spring.rabbitmq.cache.connection.size= # Number of connections to cache.</div><div class="line">spring.rabbitmq.connection-timeout= # Connection timeout, in milliseconds; zero for infinite.</div><div class="line">spring.rabbitmq.dynamic=true # Create an AmqpAdmin bean.</div><div class="line">spring.rabbitmq.host=localhost # RabbitMQ host.</div><div class="line">spring.rabbitmq.listener.acknowledge-mode= # Acknowledge mode of container.</div><div class="line">spring.rabbitmq.listener.auto-startup=true # Start the container automatically on startup.</div><div class="line">spring.rabbitmq.listener.concurrency= # Minimum number of consumers.</div><div class="line">spring.rabbitmq.listener.default-requeue-rejected= # Whether or not to requeue delivery failures; default `true`.</div><div class="line">spring.rabbitmq.listener.idle-event-interval= # How often idle container events should be published in milliseconds.</div><div class="line">spring.rabbitmq.listener.max-concurrency= # Maximum number of consumers.</div><div class="line">spring.rabbitmq.listener.prefetch= # Number of messages to be handled in a single request. It should be greater than or equal to the transaction size (if used).</div><div class="line">spring.rabbitmq.listener.retry.enabled=false # Whether or not publishing retries are enabled.</div><div class="line">spring.rabbitmq.listener.retry.initial-interval=1000 # Interval between the first and second attempt to deliver a message.</div><div class="line">spring.rabbitmq.listener.retry.max-attempts=3 # Maximum number of attempts to deliver a message.</div><div class="line">spring.rabbitmq.listener.retry.max-interval=10000 # Maximum interval between attempts.</div><div class="line">spring.rabbitmq.listener.retry.multiplier=1.0 # A multiplier to apply to the previous delivery retry interval.</div><div class="line">spring.rabbitmq.listener.retry.stateless=true # Whether or not retry is stateless or stateful.</div><div class="line">spring.rabbitmq.listener.transaction-size= # Number of messages to be processed in a transaction. For best results it should be less than or equal to the prefetch count.</div><div class="line">spring.rabbitmq.password= # Login to authenticate against the broker.</div><div class="line">spring.rabbitmq.port=5672 # RabbitMQ port.</div><div class="line">spring.rabbitmq.publisher-confirms=false # Enable publisher confirms.</div><div class="line">spring.rabbitmq.publisher-returns=false # Enable publisher returns.</div><div class="line">spring.rabbitmq.requested-heartbeat= # Requested heartbeat timeout, in seconds; zero for none.</div><div class="line">spring.rabbitmq.ssl.enabled=false # Enable SSL support.</div><div class="line">spring.rabbitmq.ssl.key-store= # Path to the key store that holds the SSL certificate.</div><div class="line">spring.rabbitmq.ssl.key-store-password= # Password used to access the key store.</div><div class="line">spring.rabbitmq.ssl.trust-store= # Trust store that holds SSL certificates.</div><div class="line">spring.rabbitmq.ssl.trust-store-password= # Password used to access the trust store.</div><div class="line">spring.rabbitmq.ssl.algorithm= # SSL algorithm to use. By default configure by the rabbit client library.</div><div class="line">spring.rabbitmq.template.mandatory=false # Enable mandatory messages.</div><div class="line">spring.rabbitmq.template.receive-timeout=0 # Timeout for `receive()` methods.</div><div class="line">spring.rabbitmq.template.reply-timeout=5000 # Timeout for `sendAndReceive()` methods.</div><div class="line">spring.rabbitmq.template.retry.enabled=false # Set to true to enable retries in the `RabbitTemplate`.</div><div class="line">spring.rabbitmq.template.retry.initial-interval=1000 # Interval between the first and second attempt to publish a message.</div><div class="line">spring.rabbitmq.template.retry.max-attempts=3 # Maximum number of attempts to publish a message.</div><div class="line">spring.rabbitmq.template.retry.max-interval=10000 # Maximum number of attempts to publish a message.</div><div class="line">spring.rabbitmq.template.retry.multiplier=1.0 # A multiplier to apply to the previous publishing retry interval.</div><div class="line">spring.rabbitmq.username= # Login user to authenticate to the broker.</div><div class="line">spring.rabbitmq.virtual-host= # Virtual host to use when connecting to the broker.</div><div class="line"></div><div class="line"></div><div class="line"># ----------------------------------------</div><div class="line"># ACTUATOR PROPERTIES</div><div class="line"># ----------------------------------------</div><div class="line"></div><div class="line"># ENDPOINTS (AbstractEndpoint subclasses)</div><div class="line">endpoints.enabled=true # Enable endpoints.</div><div class="line">endpoints.sensitive= # Default endpoint sensitive setting.</div><div class="line">endpoints.actuator.enabled=true # Enable the endpoint.</div><div class="line">endpoints.actuator.path= # Endpoint URL path.</div><div class="line">endpoints.actuator.sensitive=false # Enable security on the endpoint.</div><div class="line">endpoints.auditevents.enabled= # Enable the endpoint.</div><div class="line">endpoints.auditevents.path= # Endpoint path.</div><div class="line">endpoints.auditevents.sensitive=false # Enable security on the endpoint.</div><div class="line">endpoints.autoconfig.enabled= # Enable the endpoint.</div><div class="line">endpoints.autoconfig.id= # Endpoint identifier.</div><div class="line">endpoints.autoconfig.path= # Endpoint path.</div><div class="line">endpoints.autoconfig.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.beans.enabled= # Enable the endpoint.</div><div class="line">endpoints.beans.id= # Endpoint identifier.</div><div class="line">endpoints.beans.path= # Endpoint path.</div><div class="line">endpoints.beans.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.configprops.enabled= # Enable the endpoint.</div><div class="line">endpoints.configprops.id= # Endpoint identifier.</div><div class="line">endpoints.configprops.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services # Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.</div><div class="line">endpoints.configprops.path= # Endpoint path.</div><div class="line">endpoints.configprops.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.docs.curies.enabled=false # Enable the curie generation.</div><div class="line">endpoints.docs.enabled=true # Enable actuator docs endpoint.</div><div class="line">endpoints.docs.path=/docs #</div><div class="line">endpoints.docs.sensitive=false #</div><div class="line">endpoints.dump.enabled= # Enable the endpoint.</div><div class="line">endpoints.dump.id= # Endpoint identifier.</div><div class="line">endpoints.dump.path= # Endpoint path.</div><div class="line">endpoints.dump.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.env.enabled= # Enable the endpoint.</div><div class="line">endpoints.env.id= # Endpoint identifier.</div><div class="line">endpoints.env.keys-to-sanitize=password,secret,key,token,.*credentials.*,vcap_services # Keys that should be sanitized. Keys can be simple strings that the property ends with or regex expressions.</div><div class="line">endpoints.env.path= # Endpoint path.</div><div class="line">endpoints.env.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.flyway.enabled= # Enable the endpoint.</div><div class="line">endpoints.flyway.id= # Endpoint identifier.</div><div class="line">endpoints.flyway.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.health.enabled= # Enable the endpoint.</div><div class="line">endpoints.health.id= # Endpoint identifier.</div><div class="line">endpoints.health.mapping.*= # Mapping of health statuses to HttpStatus codes. By default, registered health statuses map to sensible defaults (i.e. UP maps to 200).</div><div class="line">endpoints.health.path= # Endpoint path.</div><div class="line">endpoints.health.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.health.time-to-live=1000 # Time to live for cached result, in milliseconds.</div><div class="line">endpoints.heapdump.enabled= # Enable the endpoint.</div><div class="line">endpoints.heapdump.path= # Endpoint path.</div><div class="line">endpoints.heapdump.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.hypermedia.enabled=false # Enable hypermedia support for endpoints.</div><div class="line">endpoints.info.enabled= # Enable the endpoint.</div><div class="line">endpoints.info.id= # Endpoint identifier.</div><div class="line">endpoints.info.path= # Endpoint path.</div><div class="line">endpoints.info.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.jolokia.enabled=true # Enable Jolokia endpoint.</div><div class="line">endpoints.jolokia.path=/jolokia # Endpoint URL path.</div><div class="line">endpoints.jolokia.sensitive=true # Enable security on the endpoint.</div><div class="line">endpoints.liquibase.enabled= # Enable the endpoint.</div><div class="line">endpoints.liquibase.id= # Endpoint identifier.</div><div class="line">endpoints.liquibase.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.logfile.enabled=true # Enable the endpoint.</div><div class="line">endpoints.logfile.external-file= # External Logfile to be accessed.</div><div class="line">endpoints.logfile.path=/logfile # Endpoint URL path.</div><div class="line">endpoints.logfile.sensitive=true # Enable security on the endpoint.</div><div class="line">endpoints.loggers.enabled=true # Enable the endpoint.</div><div class="line">endpoints.loggers.id= # Endpoint identifier.</div><div class="line">endpoints.loggers.path=/logfile # Endpoint path.</div><div class="line">endpoints.loggers.sensitive=true # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.mappings.enabled= # Enable the endpoint.</div><div class="line">endpoints.mappings.id= # Endpoint identifier.</div><div class="line">endpoints.mappings.path= # Endpoint path.</div><div class="line">endpoints.mappings.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.metrics.enabled= # Enable the endpoint.</div><div class="line">endpoints.metrics.filter.enabled=true # Enable the metrics servlet filter.</div><div class="line">endpoints.metrics.filter.gauge-submissions=merged # Http filter gauge submissions (merged, per-http-method)</div><div class="line">endpoints.metrics.filter.counter-submissions=merged # Http filter counter submissions (merged, per-http-method)</div><div class="line">endpoints.metrics.id= # Endpoint identifier.</div><div class="line">endpoints.metrics.path= # Endpoint path.</div><div class="line">endpoints.metrics.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.shutdown.enabled= # Enable the endpoint.</div><div class="line">endpoints.shutdown.id= # Endpoint identifier.</div><div class="line">endpoints.shutdown.path= # Endpoint path.</div><div class="line">endpoints.shutdown.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line">endpoints.trace.enabled= # Enable the endpoint.</div><div class="line">endpoints.trace.id= # Endpoint identifier.</div><div class="line">endpoints.trace.path= # Endpoint path.</div><div class="line">endpoints.trace.sensitive= # Mark if the endpoint exposes sensitive information.</div><div class="line"></div><div class="line"># ENDPOINTS CORS CONFIGURATION (EndpointCorsProperties)</div><div class="line">endpoints.cors.allow-credentials= # Set whether credentials are supported. When not set, credentials are not supported.</div><div class="line">endpoints.cors.allowed-headers= # Comma-separated list of headers to allow in a request. &apos;*&apos; allows all headers.</div><div class="line">endpoints.cors.allowed-methods=GET # Comma-separated list of methods to allow. &apos;*&apos; allows all methods.</div><div class="line">endpoints.cors.allowed-origins= # Comma-separated list of origins to allow. &apos;*&apos; allows all origins. When not set, CORS support is disabled.</div><div class="line">endpoints.cors.exposed-headers= # Comma-separated list of headers to include in a response.</div><div class="line">endpoints.cors.max-age=1800 # How long, in seconds, the response from a pre-flight request can be cached by clients.</div><div class="line"></div><div class="line"># JMX ENDPOINT (EndpointMBeanExportProperties)</div><div class="line">endpoints.jmx.domain= # JMX domain name. Initialized with the value of &apos;spring.jmx.default-domain&apos; if set.</div><div class="line">endpoints.jmx.enabled=true # Enable JMX export of all endpoints.</div><div class="line">endpoints.jmx.static-names= # Additional static properties to append to all ObjectNames of MBeans representing Endpoints.</div><div class="line">endpoints.jmx.unique-names=false # Ensure that ObjectNames are modified in case of conflict.</div><div class="line"></div><div class="line"># JOLOKIA (JolokiaProperties)</div><div class="line">jolokia.config.*= # See Jolokia manual</div><div class="line"></div><div class="line"># MANAGEMENT HTTP SERVER (ManagementServerProperties)</div><div class="line">management.add-application-context-header=true # Add the &quot;X-Application-Context&quot; HTTP header in each response.</div><div class="line">management.address= # Network address that the management endpoints should bind to.</div><div class="line">management.context-path= # Management endpoint context-path. For instance `/actuator`</div><div class="line">management.cloudfoundry.enabled= # Enable extended Cloud Foundry actuator endpoints</div><div class="line">management.cloudfoundry.skip-ssl-validation= # Skip SSL verification for Cloud Foundry actuator endpoint security calls</div><div class="line">management.port= # Management endpoint HTTP port. Uses the same port as the application by default. Configure a different port to use management-specific SSL.</div><div class="line">management.security.enabled=true # Enable security.</div><div class="line">management.security.roles=ACTUATOR # Comma-separated list of roles that can access the management endpoint.</div><div class="line">management.security.sessions=stateless # Session creating policy to use (always, never, if_required, stateless).</div><div class="line">management.ssl.ciphers= # Supported SSL ciphers. Requires a custom management.port.</div><div class="line">management.ssl.client-auth= # Whether client authentication is wanted (&quot;want&quot;) or needed (&quot;need&quot;). Requires a trust store. Requires a custom management.port.</div><div class="line">management.ssl.enabled= # Enable SSL support. Requires a custom management.port.</div><div class="line">management.ssl.enabled-protocols= # Enabled SSL protocols. Requires a custom management.port.</div><div class="line">management.ssl.key-alias= # Alias that identifies the key in the key store. Requires a custom management.port.</div><div class="line">management.ssl.key-password= # Password used to access the key in the key store. Requires a custom management.port.</div><div class="line">management.ssl.key-store= # Path to the key store that holds the SSL certificate (typically a jks file). Requires a custom management.port.</div><div class="line">management.ssl.key-store-password= # Password used to access the key store. Requires a custom management.port.</div><div class="line">management.ssl.key-store-provider= # Provider for the key store. Requires a custom management.port.</div><div class="line">management.ssl.key-store-type= # Type of the key store. Requires a custom management.port.</div><div class="line">management.ssl.protocol=TLS # SSL protocol to use. Requires a custom management.port.</div><div class="line">management.ssl.trust-store= # Trust store that holds SSL certificates. Requires a custom management.port.</div><div class="line">management.ssl.trust-store-password= # Password used to access the trust store. Requires a custom management.port.</div><div class="line">management.ssl.trust-store-provider= # Provider for the trust store. Requires a custom management.port.</div><div class="line">management.ssl.trust-store-type= # Type of the trust store. Requires a custom management.port.</div><div class="line"></div><div class="line"># HEALTH INDICATORS</div><div class="line">management.health.db.enabled=true # Enable database health check.</div><div class="line">management.health.cassandra.enabled=true # Enable cassandra health check.</div><div class="line">management.health.couchbase.enabled=true # Enable couchbase health check.</div><div class="line">management.health.defaults.enabled=true # Enable default health indicators.</div><div class="line">management.health.diskspace.enabled=true # Enable disk space health check.</div><div class="line">management.health.diskspace.path= # Path used to compute the available disk space.</div><div class="line">management.health.diskspace.threshold=0 # Minimum disk space that should be available, in bytes.</div><div class="line">management.health.elasticsearch.enabled=true # Enable elasticsearch health check.</div><div class="line">management.health.elasticsearch.indices= # Comma-separated index names.</div><div class="line">management.health.elasticsearch.response-timeout=100 # The time, in milliseconds, to wait for a response from the cluster.</div><div class="line">management.health.jms.enabled=true # Enable JMS health check.</div><div class="line">management.health.ldap.enabled=true # Enable LDAP health check.</div><div class="line">management.health.mail.enabled=true # Enable Mail health check.</div><div class="line">management.health.mongo.enabled=true # Enable MongoDB health check.</div><div class="line">management.health.rabbit.enabled=true # Enable RabbitMQ health check.</div><div class="line">management.health.redis.enabled=true # Enable Redis health check.</div><div class="line">management.health.solr.enabled=true # Enable Solr health check.</div><div class="line">management.health.status.order=DOWN, OUT_OF_SERVICE, UP, UNKNOWN # Comma-separated list of health statuses in order of severity.</div><div class="line"></div><div class="line"># INFO CONTRIBUTORS (InfoContributorProperties)</div><div class="line">management.info.build.enabled=true # Enable build info.</div><div class="line">management.info.defaults.enabled=true # Enable default info contributors.</div><div class="line">management.info.env.enabled=true # Enable environment info.</div><div class="line">management.info.git.enabled=true # Enable git info.</div><div class="line">management.info.git.mode=simple # Mode to use to expose git information.</div><div class="line"></div><div class="line"># REMOTE SHELL (ShellProperties)</div><div class="line">management.shell.auth.type=simple # Authentication type. Auto-detected according to the environment.</div><div class="line">management.shell.auth.jaas.domain=my-domain # JAAS domain.</div><div class="line">management.shell.auth.key.path= # Path to the authentication key. This should point to a valid &quot;.pem&quot; file.</div><div class="line">management.shell.auth.simple.user.name=user # Login user.</div><div class="line">management.shell.auth.simple.user.password= # Login password.</div><div class="line">management.shell.auth.spring.roles=ACTUATOR # Comma-separated list of required roles to login to the CRaSH console.</div><div class="line">management.shell.command-path-patterns=classpath*:/commands/**,classpath*:/crash/commands/** # Patterns to use to look for commands.</div><div class="line">management.shell.command-refresh-interval=-1 # Scan for changes and update the command if necessary (in seconds).</div><div class="line">management.shell.config-path-patterns=classpath*:/crash/* # Patterns to use to look for configurations.</div><div class="line">management.shell.disabled-commands=jpa*,jdbc*,jndi* # Comma-separated list of commands to disable.</div><div class="line">management.shell.disabled-plugins= # Comma-separated list of plugins to disable. Certain plugins are disabled by default based on the environment.</div><div class="line">management.shell.ssh.auth-timeout = # Number of milliseconds after user will be prompted to login again.</div><div class="line">management.shell.ssh.enabled=true # Enable CRaSH SSH support.</div><div class="line">management.shell.ssh.idle-timeout = # Number of milliseconds after which unused connections are closed.</div><div class="line">management.shell.ssh.key-path= # Path to the SSH server key.</div><div class="line">management.shell.ssh.port=2000 # SSH port.</div><div class="line">management.shell.telnet.enabled=false # Enable CRaSH telnet support. Enabled by default if the TelnetPlugin is  available.</div><div class="line">management.shell.telnet.port=5000 # Telnet port.</div><div class="line"></div><div class="line"># TRACING (TraceProperties)</div><div class="line">management.trace.include=request-headers,response-headers,cookies,errors # Items to be included in the trace.</div><div class="line"></div><div class="line"># METRICS EXPORT (MetricExportProperties)</div><div class="line">spring.metrics.export.aggregate.key-pattern= # Pattern that tells the aggregator what to do with the keys from the source repository.</div><div class="line">spring.metrics.export.aggregate.prefix= # Prefix for global repository if active.</div><div class="line">spring.metrics.export.delay-millis=5000 # Delay in milliseconds between export ticks. Metrics are exported to external sources on a schedule with this delay.</div><div class="line">spring.metrics.export.enabled=true # Flag to enable metric export (assuming a MetricWriter is available).</div><div class="line">spring.metrics.export.excludes= # List of patterns for metric names to exclude. Applied after the includes.</div><div class="line">spring.metrics.export.includes= # List of patterns for metric names to include.</div><div class="line">spring.metrics.export.redis.key=keys.spring.metrics # Key for redis repository export (if active).</div><div class="line">spring.metrics.export.redis.prefix=spring.metrics # Prefix for redis repository if active.</div><div class="line">spring.metrics.export.send-latest= # Flag to switch off any available optimizations based on not exporting unchanged metric values.</div><div class="line">spring.metrics.export.statsd.host= # Host of a statsd server to receive exported metrics.</div><div class="line">spring.metrics.export.statsd.port=8125 # Port of a statsd server to receive exported metrics.</div><div class="line">spring.metrics.export.statsd.prefix= # Prefix for statsd exported metrics.</div><div class="line">spring.metrics.export.triggers.*= # Specific trigger properties per MetricWriter bean name.</div><div class="line"></div><div class="line"></div><div class="line"># ----------------------------------------</div><div class="line"># DEVTOOLS PROPERTIES</div><div class="line"># ----------------------------------------</div><div class="line"></div><div class="line"># DEVTOOLS (DevToolsProperties)</div><div class="line">spring.devtools.livereload.enabled=true # Enable a livereload.com compatible server.</div><div class="line">spring.devtools.livereload.port=35729 # Server port.</div><div class="line">spring.devtools.restart.additional-exclude= # Additional patterns that should be excluded from triggering a full restart.</div><div class="line">spring.devtools.restart.additional-paths= # Additional paths to watch for changes.</div><div class="line">spring.devtools.restart.enabled=true # Enable automatic restart.</div><div class="line">spring.devtools.restart.exclude=META-INF/maven/**,META-INF/resources/**,resources/**,static/**,public/**,templates/**,**/*Test.class,**/*Tests.class,git.properties # Patterns that should be excluded from triggering a full restart.</div><div class="line">spring.devtools.restart.poll-interval=1000 # Amount of time (in milliseconds) to wait between polling for classpath changes.</div><div class="line">spring.devtools.restart.quiet-period=400 # Amount of quiet time (in milliseconds) required without any classpath changes before a restart is triggered.</div><div class="line">spring.devtools.restart.trigger-file= # Name of a specific file that when changed will trigger the restart check. If not specified any classpath file change will trigger the restart.</div><div class="line"></div><div class="line"># REMOTE DEVTOOLS (RemoteDevToolsProperties)</div><div class="line">spring.devtools.remote.context-path=/.~~spring-boot!~ # Context path used to handle the remote connection.</div><div class="line">spring.devtools.remote.debug.enabled=true # Enable remote debug support.</div><div class="line">spring.devtools.remote.debug.local-port=8000 # Local remote debug server port.</div><div class="line">spring.devtools.remote.proxy.host= # The host of the proxy to use to connect to the remote application.</div><div class="line">spring.devtools.remote.proxy.port= # The port of the proxy to use to connect to the remote application.</div><div class="line">spring.devtools.remote.restart.enabled=true # Enable remote restart.</div><div class="line">spring.devtools.remote.secret= # A shared secret required to establish a connection (required to enable remote support).</div><div class="line">spring.devtools.remote.secret-header-name=X-AUTH-TOKEN # HTTP header used to transfer the shared secret.</div><div class="line"></div><div class="line"></div><div class="line"># ----------------------------------------</div><div class="line"># TESTING PROPERTIES</div><div class="line"># ----------------------------------------</div><div class="line"></div><div class="line">spring.test.database.replace=any # Type of existing DataSource to replace.</div><div class="line">spring.test.mockmvc.print=default # MVC Print option.</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;spring-boot常配置文件属性&quot;&gt;&lt;a href=&quot;#spring-boot常配置文件属性&quot; class=&quot;headerlink&quot; title=&quot;spring-boot常配置文件属性&quot;&gt;&lt;/a&gt;spring-boot常配置文件属性&lt;/h3&gt;&lt;p&gt;来源&lt;br&gt;
    
    </summary>
    
      <category term="spring-boot" scheme="https://ln0491.github.io/categories/spring-boot/"/>
    
    
      <category term="spring-boot" scheme="https://ln0491.github.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot入门二配置文件</title>
    <link href="https://ln0491.github.io/2017/03/01/spring-boot%E5%85%A5%E9%97%A8%E4%BA%8C%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>https://ln0491.github.io/2017/03/01/spring-boot入门二配置文件/</id>
    <published>2017-03-01T02:08:35.000Z</published>
    <updated>2017-03-01T05:48:09.682Z</updated>
    
    <content type="html"><![CDATA[<h3 id="spring-boot入门二配置文件"><a href="#spring-boot入门二配置文件" class="headerlink" title="spring-boot入门二配置文件"></a>spring-boot入门二配置文件</h3><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>Spring Boot使用了一个全局的配置文件application.properties，放在src/main/resources目录下或者类路径的/config下。Sping Boot的全局配置文件的作用是对一些默认配置的配置值进行修改。</p>
<p>application.properties和application.yml文件可以放在一下四个位置：</p>
<ul>
<li>外置，在相对于应用程序运行目录的/congfig子目录里。</li>
<li>外置，在应用程序运行的目录里</li>
<li>内置，在config包内</li>
<li>内置，在Classpath根目录<br>同样，这个列表按照优先级排序，也就是说，src/main/resources/config下application.properties覆盖src/main/resources下application.properties中相同的属性</li>
</ul>
<p>此外，如果你在相同优先级位置同时有application.properties和application.yml，那么application.yml里面的属性就会覆盖application.properties里的属性</p>
<h4 id="Profile-多环境配置"><a href="#Profile-多环境配置" class="headerlink" title="Profile-多环境配置"></a>Profile-多环境配置</h4><p>当应用程序需要部署到不同运行环境时，一些配置细节通常会有所不同，最简单的比如日志，生产日志会将日志级别设置为WARN或更高级别，并将日志写入日志文件，而开发的时候需要日志级别为DEBUG，日志输出到控制台即可。<br>如果按照以前的做法，就是每次发布的时候替换掉配置文件，这样太麻烦了，Spring Boot的Profile就给我们提供了解决方案，命令带上参数就搞定。<br>这里我们来模拟一下，只是简单的修改端口来测试<br>在Spring Boot中多环境配置文件名需要满足application-{profile}.properties的格式，其中{profile}对应你的环境标识，比如：<br>application-dev.properties：开发环境<br>application-prod.properties：生产环境<br>想要使用对应的环境，只需要在application.properties中使用spring.profiles.active属性来设置，值对应上面提到的{profile}，这里就是指dev、prod这2个。<br>当然你也可以用命令行启动的时候带上参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -jar xxx.jar --spring.profiles.active=dev</div></pre></td></tr></table></figure></p>
<p>我给不同的环境添加不同的端口属性server.port，然后根据指定不同的spring.profiles.active来切换使用。各位可以自己试试。这里就不贴代码了。<br>除了可以用profile的配置文件来分区配置我们的环境变量，在代码里，我们还可以直接用@Profile注解来进行配置，例如数据库配置，这里我们先定义一个接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">public  interface DBConnector &#123; public  void  configure(); &#125;</div></pre></td></tr></table></figure></p>
<p>分别定义俩个实现类来实现它<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">  * 测试数据库</div><div class="line">  */</div><div class="line">@Component</div><div class="line">@Profile(&quot;testdb&quot;)</div><div class="line">public class TestDBConnector implements DBConnector &#123;</div><div class="line">    @Override</div><div class="line">    public void configure() &#123;</div><div class="line">        System.out.println(&quot;testdb&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">/**</div><div class="line"> * 生产数据库</div><div class="line"> */</div><div class="line">@Component</div><div class="line">@Profile(&quot;devdb&quot;)</div><div class="line">public class DevDBConnector implements DBConnector &#123;</div><div class="line">    @Override</div><div class="line">    public void configure() &#123;</div><div class="line">        System.out.println(&quot;devdb&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>通过在配置文件激活具体使用哪个实现类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spring.profiles.active=testdb</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">@RestController</div><div class="line">@RequestMapping(&quot;/task&quot;)</div><div class="line">public class TaskController &#123;</div><div class="line"></div><div class="line">    @Autowired DBConnector connector ;</div><div class="line"></div><div class="line">    @RequestMapping(value = &#123;&quot;/&quot;,&quot;&quot;&#125;)</div><div class="line">    public String hellTask()&#123;</div><div class="line"></div><div class="line">        connector.configure(); //最终打印testdb     </div><div class="line">        return &quot;hello task !! myage is &quot; + myage;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>除了spring.profiles.active来激活一个或者多个profile之外，还可以用spring.profiles.include来叠加profile<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">spring.profiles.active: testdb  </div><div class="line">spring.profiles.include: proddb,prodmq</div></pre></td></tr></table></figure></p>
<h4 id="配置上下文"><a href="#配置上下文" class="headerlink" title="配置上下文"></a>配置上下文</h4><p>在resources目录下建立application.properties文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">server.context-path=/bt</div></pre></td></tr></table></figure></p>
<p>访问<br><a href="http://127.0.0.1:8080/bt/hello" target="_blank" rel="external">http://127.0.0.1:8080/bt/hello</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;spring-boot入门二配置文件&quot;&gt;&lt;a href=&quot;#spring-boot入门二配置文件&quot; class=&quot;headerlink&quot; title=&quot;spring-boot入门二配置文件&quot;&gt;&lt;/a&gt;spring-boot入门二配置文件&lt;/h3&gt;&lt;h4 id=&quot;配
    
    </summary>
    
      <category term="spring-boot" scheme="https://ln0491.github.io/categories/spring-boot/"/>
    
    
      <category term="spring-boot" scheme="https://ln0491.github.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>spring-boot入门一环境搭建及hellospringboot</title>
    <link href="https://ln0491.github.io/2017/03/01/spring-boot%E5%85%A5%E9%97%A8%E4%B8%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E5%8F%8Ahellospringboot/"/>
    <id>https://ln0491.github.io/2017/03/01/spring-boot入门一环境搭建及hellospringboot/</id>
    <published>2017-03-01T01:20:44.000Z</published>
    <updated>2017-03-01T05:47:31.668Z</updated>
    
    <content type="html"><![CDATA[<h3 id="spring-boot入门一环境搭建及hellospringboot"><a href="#spring-boot入门一环境搭建及hellospringboot" class="headerlink" title="spring-boot入门一环境搭建及hellospringboot"></a>spring-boot入门一环境搭建及hellospringboot</h3><h5 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h5><p>本人使用myeclipse 10.6,JDK7.0,MAVEN 3.3.9</p>
<h5 id="新建MAVEN普通项目添加依赖-MAVEN-插件"><a href="#新建MAVEN普通项目添加依赖-MAVEN-插件" class="headerlink" title="新建MAVEN普通项目添加依赖-MAVEN 插件"></a>新建MAVEN普通项目添加依赖-MAVEN 插件</h5><p>官网<a href="http://projects.spring.io/spring-boot/#quick-start" target="_blank" rel="external">http://projects.spring.io/spring-boot/#quick-start</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</div><div class="line">	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line">	&lt;groupId&gt;com.ghg&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;boot&lt;/artifactId&gt;</div><div class="line">	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;parent&gt;</div><div class="line">		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</div><div class="line">		&lt;version&gt;1.5.1.RELEASE&lt;/version&gt;</div><div class="line">	&lt;/parent&gt;</div><div class="line">	&lt;dependencies&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">	&lt;/dependencies&gt;</div><div class="line"></div><div class="line">	&lt;build&gt;</div><div class="line">		&lt;plugins&gt;</div><div class="line">		&lt;!--spring-boot maven  --&gt;</div><div class="line">			&lt;plugin&gt;</div><div class="line">				&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">				&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</div><div class="line">			&lt;/plugin&gt;</div><div class="line">		&lt;/plugins&gt;</div><div class="line">	&lt;/build&gt;</div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure>
<h4 id="测试控制器同时添加main方法"><a href="#测试控制器同时添加main方法" class="headerlink" title="测试控制器同时添加main方法"></a>测试控制器同时添加main方法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">package com.ghg.boot.controller;</div><div class="line"></div><div class="line">import org.springframework.boot.SpringApplication;</div><div class="line">import org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class="line">import org.springframework.web.bind.annotation.RequestMapping;</div><div class="line">import org.springframework.web.bind.annotation.RestController;</div><div class="line"></div><div class="line">@SpringBootApplication</div><div class="line">@RestController</div><div class="line">public class HelloController &#123;</div><div class="line"></div><div class="line">	</div><div class="line">	@RequestMapping(value=&quot;/hello&quot;)</div><div class="line">	public String hello()&#123;</div><div class="line">		</div><div class="line">		return &quot;Hello Spring Boot!&quot;;</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	public static void main(String[] args) &#123;</div><div class="line">		SpringApplication.run(HelloController.class, args);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><ul>
<li>MAVEN 运行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn spring-boot:run</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">/\\ / ___&apos;_ __ _ _(_)_ __  __ _ \ \ \ \</div><div class="line">( ( )\___ | &apos;_ | &apos;_| | &apos;_ \/ _` | \ \ \ \</div><div class="line"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )</div><div class="line">  &apos;  |____| .__|_| |_|_| |_\__, | / / / /</div><div class="line"> =========|_|==============|___/=/_/_/_/</div><div class="line"> :: Spring Boot ::        (v1.5.1.RELEASE)</div><div class="line"></div><div class="line">2017-03-01 09:27:30.965  INFO 8040 --- [           main] com.ghg.boot.controller.HelloController  : Starting HelloController on SC-201607041015 with PID 8040 (D:\myeclipsework\boot\target\classes started by Administrator in D:\myeclipsework\boot)</div><div class="line">2017-03-01 09:27:30.969  INFO 8040 --- [           main] com.ghg.boot.controller.HelloController  : No active profile set, falling back to default profiles: default</div><div class="line">2017-03-01 09:27:31.014  INFO 8040 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@563d35d9: startup date [Wed Mar 01 09:27:31 CST 2017]; root of context hierarchy</div><div class="line">2017-03-01 09:27:31.638  INFO 8040 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean &apos;org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration&apos; of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</div><div class="line">2017-03-01 09:27:31.753  INFO 8040 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean &apos;validator&apos; of type [class org.springframework.validation.beanvalidation.LocalValidatorFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</div><div class="line">2017-03-01 09:27:32.128  INFO 8040 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8080 (http)</div><div class="line">2017-03-01 09:27:32.137  INFO 8040 --- [           main] o.apache.catalina.core.StandardService   : Starting service Tomcat</div><div class="line">2017-03-01 09:27:32.138  INFO 8040 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.11</div><div class="line">2017-03-01 09:27:32.208  INFO 8040 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext</div><div class="line">2017-03-01 09:27:32.208  INFO 8040 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1196 ms</div><div class="line">2017-03-01 09:27:32.358  INFO 8040 --- [ost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Mapping servlet: &apos;dispatcherServlet&apos; to [/]</div><div class="line">2017-03-01 09:27:32.362  INFO 8040 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &apos;characterEncodingFilter&apos; to: [/*]</div><div class="line">2017-03-01 09:27:32.362  INFO 8040 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &apos;hiddenHttpMethodFilter&apos; to: [/*]</div><div class="line">2017-03-01 09:27:32.362  INFO 8040 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &apos;httpPutFormContentFilter&apos; to: [/*]</div><div class="line">2017-03-01 09:27:32.362  INFO 8040 --- [ost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: &apos;requestContextFilter&apos; to: [/*]</div><div class="line">2017-03-01 09:27:32.663  INFO 8040 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@563d35d9: startup date [Wed Mar 01 09:27:31 CST 2017]; root of context hierarchy</div><div class="line">2017-03-01 09:27:32.734  INFO 8040 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &quot;&#123;[/hello]&#125;&quot; onto public java.lang.String com.ghg.boot.controller.HelloController.hello()</div><div class="line">2017-03-01 09:27:32.739  INFO 8040 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &quot;&#123;[/error]&#125;&quot; onto public org.springframework.http.ResponseEntity&lt;java.util.Map&lt;java.lang.String, java.lang.Object&gt;&gt; org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)</div><div class="line">2017-03-01 09:27:32.739  INFO 8040 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped &quot;&#123;[/error],produces=[text/html]&#125;&quot; onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)</div><div class="line">2017-03-01 09:27:32.778  INFO 8040 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</div><div class="line">2017-03-01 09:27:32.778  INFO 8040 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</div><div class="line">2017-03-01 09:27:32.833  INFO 8040 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]</div><div class="line">2017-03-01 09:27:33.102  INFO 8040 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup</div><div class="line">2017-03-01 09:27:33.156  INFO 8040 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8080 (http)</div><div class="line">2017-03-01 09:27:33.161  INFO 8040 --- [           main] com.ghg.boot.controller.HelloController  : Started HelloController in 2.43 seconds (JVM running for 5.557)</div></pre></td></tr></table></figure>
<h4 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h4><p><a href="http://127.0.0.1:8080/hello" target="_blank" rel="external">http://127.0.0.1:8080/hello</a><br>就可以看到结果</p>
<h4 id="更换Banner"><a href="#更换Banner" class="headerlink" title="更换Banner"></a>更换Banner</h4><p>就是这个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/\\ / ___&apos;_ __ _ _(_)_ __  __ _ \ \ \ \</div><div class="line">( ( )\___ | &apos;_ | &apos;_| | &apos;_ \/ _` | \ \ \ \</div><div class="line"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )</div><div class="line">  &apos;  |____| .__|_| |_|_| |_\__, | / / / /</div></pre></td></tr></table></figure></p>
<p>到<br><a href="http://patorjk.com/software/taag/" target="_blank" rel="external">http://patorjk.com/software/taag/</a><br>生成字符串<br>在src/main/resources 下新建一个banner.txt，文件，将上面生成的字符复制到banner.txt中，再次启动就变为自己的log了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">[INFO] --- spring-boot-maven-plugin:1.5.1.RELEASE:run (default-cli) @ boot ---</div><div class="line">           __                                     </div><div class="line">          |  \                                    </div><div class="line">  ______  | $$____    ______    _______  _______  </div><div class="line"> /      \ | $$    \  /      \  /       \|       \ </div><div class="line">|  $$$$$$\| $$$$$$$\|  $$$$$$\|  $$$$$$$| $$$$$$$\</div><div class="line">| $$  | $$| $$  | $$| $$  | $$| $$      | $$  | $$</div><div class="line">| $$__| $$| $$  | $$| $$__| $$| $$_____ | $$  | $$</div><div class="line"> \$$    $$| $$  | $$ \$$    $$ \$$     \| $$  | $$</div><div class="line"> _\$$$$$$$ \$$   \$$ _\$$$$$$$  \$$$$$$$ \$$   \$$</div><div class="line">|  \__| $$          |  \__| $$                    </div><div class="line"> \$$    $$           \$$    $$                    </div><div class="line">  \$$$$$$             \$$$$$$                     </div><div class="line">2017-03-01 09:36:14.028  INFO 12032 --- [           main] com.ghg.boot.controller.HelloController  : Starting HelloController on SC-201607041015 with PID 12032 (D:\myeclipsework\boot\target\classes started by Administrator in D:\myeclipsework\boot)</div><div class="line">2017-03-01 09:36:14.033  INFO 12032 --- [           main] com.ghg.boot.controller.HelloController  : No active profile set, falling back to default profiles: default</div><div class="line">2017-03-01 09:36:14.080  INFO 12032 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@48c8997c: startup date [Wed Mar 01 09:36:14 CST 2017]; root of context hierarchy</div><div class="line">2017-03-01 09:36:14.717  INFO 12032 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean &apos;org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration&apos; of type [class org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)</div><div class="line">2017-03-01 09:36:14.803  INFO 12032 --- [           main] trationDele</div></pre></td></tr></table></figure></p>
<h4 id="关于-SpringBootApplication注解"><a href="#关于-SpringBootApplication注解" class="headerlink" title="关于@SpringBootApplication注解"></a>关于@SpringBootApplication注解</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * Copyright 2012-2017 the original author or authors.</div><div class="line"> *</div><div class="line"> * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);</div><div class="line"> * you may not use this file except in compliance with the License.</div><div class="line"> * You may obtain a copy of the License at</div><div class="line"> *</div><div class="line"> *      http://www.apache.org/licenses/LICENSE-2.0</div><div class="line"> *</div><div class="line"> * Unless required by applicable law or agreed to in writing, software</div><div class="line"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</div><div class="line"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</div><div class="line"> * See the License for the specific language governing permissions and</div><div class="line"> * limitations under the License.</div><div class="line"> */</div><div class="line"></div><div class="line">package org.springframework.boot.autoconfigure;</div><div class="line"></div><div class="line">import java.lang.annotation.Documented;</div><div class="line">import java.lang.annotation.ElementType;</div><div class="line">import java.lang.annotation.Inherited;</div><div class="line">import java.lang.annotation.Retention;</div><div class="line">import java.lang.annotation.RetentionPolicy;</div><div class="line">import java.lang.annotation.Target;</div><div class="line"></div><div class="line">import org.springframework.boot.SpringBootConfiguration;</div><div class="line">import org.springframework.boot.context.TypeExcludeFilter;</div><div class="line">import org.springframework.context.annotation.Bean;</div><div class="line">import org.springframework.context.annotation.ComponentScan;</div><div class="line">import org.springframework.context.annotation.ComponentScan.Filter;</div><div class="line">import org.springframework.context.annotation.Configuration;</div><div class="line">import org.springframework.context.annotation.FilterType;</div><div class="line">import org.springframework.core.annotation.AliasFor;</div><div class="line"></div><div class="line">/**</div><div class="line"> * Indicates a &#123;@link Configuration configuration&#125; class that declares one or more</div><div class="line"> * &#123;@link Bean @Bean&#125; methods and also triggers &#123;@link EnableAutoConfiguration</div><div class="line"> * auto-configuration&#125; and &#123;@link ComponentScan component scanning&#125;. This is a convenience</div><div class="line"> * annotation that is equivalent to declaring &#123;@code @Configuration&#125;,</div><div class="line"> * &#123;@code @EnableAutoConfiguration&#125; and &#123;@code @ComponentScan&#125;.</div><div class="line"> *</div><div class="line"> * @author Phillip Webb</div><div class="line"> * @author Stephane Nicoll</div><div class="line"> * @since 1.2.0</div><div class="line"> */</div><div class="line">@Target(ElementType.TYPE)</div><div class="line">@Retention(RetentionPolicy.RUNTIME)</div><div class="line">@Documented</div><div class="line">@Inherited</div><div class="line">@SpringBootConfiguration</div><div class="line">@EnableAutoConfiguration</div><div class="line">@ComponentScan(excludeFilters = &#123;</div><div class="line">		@Filter(type = FilterType.CUSTOM, classes = TypeExcludeFilter.class),</div><div class="line">		@Filter(type = FilterType.CUSTOM, classes = AutoConfigurationExcludeFilter.class) &#125;)</div><div class="line">public @interface SpringBootApplication &#123;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * Exclude specific auto-configuration classes such that they will never be applied.</div><div class="line">	 * @return the classes to exclude</div><div class="line">	 */</div><div class="line">	@AliasFor(annotation = EnableAutoConfiguration.class, attribute = &quot;exclude&quot;)</div><div class="line">	Class&lt;?&gt;[] exclude() default &#123;&#125;;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * Exclude specific auto-configuration class names such that they will never be</div><div class="line">	 * applied.</div><div class="line">	 * @return the class names to exclude</div><div class="line">	 * @since 1.3.0</div><div class="line">	 */</div><div class="line">	@AliasFor(annotation = EnableAutoConfiguration.class, attribute = &quot;excludeName&quot;)</div><div class="line">	String[] excludeName() default &#123;&#125;;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * Base packages to scan for annotated components. Use &#123;@link #scanBasePackageClasses&#125;</div><div class="line">	 * for a type-safe alternative to String-based package names.</div><div class="line">	 * @return base packages to scan</div><div class="line">	 * @since 1.3.0</div><div class="line">	 */</div><div class="line">	@AliasFor(annotation = ComponentScan.class, attribute = &quot;basePackages&quot;)</div><div class="line">	String[] scanBasePackages() default &#123;&#125;;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * Type-safe alternative to &#123;@link #scanBasePackages&#125; for specifying the packages to</div><div class="line">	 * scan for annotated components. The package of each class specified will be scanned.</div><div class="line">	 * &lt;p&gt;</div><div class="line">	 * Consider creating a special no-op marker class or interface in each package that</div><div class="line">	 * serves no purpose other than being referenced by this attribute.</div><div class="line">	 * @return base packages to scan</div><div class="line">	 * @since 1.3.0</div><div class="line">	 */</div><div class="line">	@AliasFor(annotation = ComponentScan.class, attribute = &quot;basePackageClasses&quot;)</div><div class="line">	Class&lt;?&gt;[] scanBasePackageClasses() default &#123;&#125;;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>@SpringBootApplication等同于<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@ComponentScan</div><div class="line">@EnableAutoConfiguration</div></pre></td></tr></table></figure></p>
<p>组合<br>关闭特定的配置，使用exclude参数<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">@SpringBootApplication(exclude=&#123;DataSourceConnectionSource.class&#125;)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;spring-boot入门一环境搭建及hellospringboot&quot;&gt;&lt;a href=&quot;#spring-boot入门一环境搭建及hellospringboot&quot; class=&quot;headerlink&quot; title=&quot;spring-boot入门一环境搭建及hello
    
    </summary>
    
      <category term="spring-boot" scheme="https://ln0491.github.io/categories/spring-boot/"/>
    
    
      <category term="spring-boot" scheme="https://ln0491.github.io/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>mybatis入门四延时加载、缓存</title>
    <link href="https://ln0491.github.io/2017/02/28/mybatis%E5%85%A5%E9%97%A8%E5%9B%9B%E5%BB%B6%E6%97%B6%E5%8A%A0%E8%BD%BD%E3%80%81%E7%BC%93%E5%AD%98/"/>
    <id>https://ln0491.github.io/2017/02/28/mybatis入门四延时加载、缓存/</id>
    <published>2017-02-28T01:01:03.000Z</published>
    <updated>2017-02-28T02:10:36.922Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mybatis入门四延时加载、缓存"><a href="#mybatis入门四延时加载、缓存" class="headerlink" title="mybatis入门四延时加载、缓存"></a>mybatis入门四延时加载、缓存</h3><h4 id="mybatis一级缓存"><a href="#mybatis一级缓存" class="headerlink" title="mybatis一级缓存"></a>mybatis一级缓存</h4><p>mybatis，默认开启了一级缓存，sqlSession中默认有一个hashMap</p>
<p>当查询时，先去hashMap中查找，</p>
<p>如果有就直接，取出，不再操作数据库</p>
<p>如果没有就去数据库查找，并放在haspMap中</p>
<p>当做事物时，如添加，删除，修改，后有commit时会清空一级缓存</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.dao;</div><div class="line"></div><div class="line">import org.apache.ibatis.annotations.Param;</div><div class="line"></div><div class="line">import com.ghg.md.domain.Author;</div><div class="line"></div><div class="line">public interface AuthorMapper &#123;</div><div class="line">	</div><div class="line">	</div><div class="line">	public Author findAuthorById(@Param(&quot;id&quot;) int id);</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>mapper.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE mapper</div><div class="line">  PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</div><div class="line">  &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</div><div class="line">&lt;mapper namespace=&quot;com.ghg.md.dao.AuthorMapper&quot;&gt;</div><div class="line"></div><div class="line">	&lt;!--使用resultMap映射 type使用别名，单独使用Author关联 --&gt;</div><div class="line">	&lt;resultMap type=&quot;Author&quot; id=&quot;authorResultMap&quot;&gt;</div><div class="line">		&lt;!--主键 --&gt;</div><div class="line">		&lt;id property=&quot;authorId&quot; column=&quot;author_id&quot; /&gt;</div><div class="line">		&lt;!--普通属性与表中的字段对应 --&gt;</div><div class="line">		&lt;result property=&quot;authorUserName&quot; column=&quot;author_username&quot; /&gt;</div><div class="line">		&lt;result property=&quot;authorPassword&quot; column=&quot;author_password&quot; /&gt;</div><div class="line">		&lt;result property=&quot;authorEmail&quot; column=&quot;author_email&quot; /&gt;</div><div class="line">		&lt;result property=&quot;authorBio&quot; column=&quot;author_bio&quot; /&gt;</div><div class="line">		&lt;result property=&quot;registerTime&quot; column=&quot;register_time&quot; /&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line">	</div><div class="line">	&lt;select id=&quot;findAuthorById&quot; parameterType=&quot;int&quot; resultMap=&quot;authorResultMap&quot;&gt;</div><div class="line">		select * from author where author_id = #&#123;id&#125;</div><div class="line">	&lt;/select&gt;</div><div class="line">	</div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure>
<p>测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.test;</div><div class="line"></div><div class="line">import java.io.IOException;</div><div class="line">import java.io.Reader;</div><div class="line"></div><div class="line">import org.apache.ibatis.io.Resources;</div><div class="line">import org.apache.ibatis.session.SqlSession;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactory;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactoryBuilder;</div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">import com.ghg.md.dao.AuthorMapper;</div><div class="line">import com.ghg.md.dao.BlogMapper;</div><div class="line">import com.ghg.md.domain.Author;</div><div class="line">import com.ghg.md.domain.Blog;</div><div class="line"></div><div class="line">public class Test6 &#123;</div><div class="line">	private static SqlSessionFactory sqlSessionFactory;</div><div class="line">	private static Reader reader;</div><div class="line">	private static Logger logger = LoggerFactory.getLogger(Test.class);</div><div class="line"></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line"></div><div class="line">		try &#123;</div><div class="line">			reader = Resources.getResourceAsReader(&quot;Configuration.xml&quot;);</div><div class="line">			sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);</div><div class="line">		&#125; catch (IOException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		SqlSession session = sqlSessionFactory.openSession();</div><div class="line">		</div><div class="line">		AuthorMapper authorMapper = session.getMapper(AuthorMapper.class);</div><div class="line">		</div><div class="line">		</div><div class="line">		Author authorById = authorMapper.findAuthorById(1);</div><div class="line">		logger.debug(&quot;author id --&gt;&#123;&#125;&quot;,authorById);</div><div class="line">		Author authorById1 = authorMapper.findAuthorById(1);</div><div class="line">		logger.debug(&quot;author id --&gt;&#123;&#125;&quot;,authorById1);</div><div class="line">		Author authorById2 = authorMapper.findAuthorById(2);</div><div class="line">		logger.debug(&quot;author id --&gt;&#123;&#125;&quot;,authorById2);</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">09:08:47.539 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ==&gt;  Preparing: select * from author where author_id = ? </div><div class="line">09:08:47.568 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ==&gt; Parameters: 1(Integer)</div><div class="line">09:08:47.582 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- &lt;==      Total: 1</div><div class="line">09:08:47.582 [main] DEBUG com.ghg.md.test.Test- author id --&gt;Author [authorId=1, authorUserName=张三, authorPassword=123456, authorEmail=123@qq.com, authorBio=张三是个新手，刚开始注册, registerTime=Thu Oct 29 10:23:59 CST 2015]</div><div class="line">09:08:47.584 [main] DEBUG com.ghg.md.test.Test- author id --&gt;Author [authorId=1, authorUserName=张三, authorPassword=123456, authorEmail=123@qq.com, authorBio=张三是个新手，刚开始注册, registerTime=Thu Oct 29 10:23:59 CST 2015]</div><div class="line">09:08:47.584 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ==&gt;  Preparing: select * from author where author_id = ? </div><div class="line">09:08:47.584 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ==&gt; Parameters: 2(Integer)</div><div class="line">09:08:47.585 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- &lt;==      Total: 1</div><div class="line">09:08:47.585 [main] DEBUG com.ghg.md.test.Test- author id --&gt;Author [authorId=2, authorUserName=李四, authorPassword=123asf, authorEmail=lisi@163.com, authorBio=魂牵梦萦 , registerTime=Thu Oct 29 10:24:29 CST 2015]</div></pre></td></tr></table></figure></p>
<p>同一条记录只查询了一次，不同的才会继续查询</p>
<h4 id="延时加载"><a href="#延时加载" class="headerlink" title="延时加载"></a>延时加载</h4><h5 id="看一个没有延时加载的BlogMapper-xml"><a href="#看一个没有延时加载的BlogMapper-xml" class="headerlink" title="看一个没有延时加载的BlogMapper.xml"></a>看一个没有延时加载的BlogMapper.xml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE mapper</div><div class="line">  PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</div><div class="line">  &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</div><div class="line">&lt;mapper namespace=&quot;com.ghg.md.dao.BlogMapper&quot;&gt;</div><div class="line"></div><div class="line">	&lt;!--使用ResultMap --&gt;</div><div class="line">	&lt;resultMap type=&quot;Blog&quot; id=&quot;blogResultMap&quot;&gt;</div><div class="line">		&lt;!--主键 --&gt;</div><div class="line">		&lt;id property=&quot;blogId&quot; column=&quot;blog_id&quot; /&gt;</div><div class="line">		&lt;!--标题 --&gt;</div><div class="line">		&lt;result property=&quot;blogTitle&quot; column=&quot;blog_title&quot; /&gt;</div><div class="line">		</div><div class="line">		&lt;!--关联作者 外键 column：外键 select:引用Authro的namespace.方法 --&gt;</div><div class="line">	</div><div class="line">		&lt;association property=&quot;author&quot; javaType=&quot;Author&quot; column=&quot;author_id&quot;</div><div class="line">			select=&quot;com.ghg.md.dao.AuthorMapper.findAuthorById&quot; /&gt;</div><div class="line"></div><div class="line">		&lt;!--一对多  ofType属性指定集合中元素的对象类型。--&gt;</div><div class="line">		&lt;collection property=&quot;posts&quot; javaType=&quot;ArrayList&quot; ofType=&quot;Posts&quot; column=&quot;blog_id&quot; select=&quot;com.ghg.md.dao.PostsMapper.findPostsByBlogId&quot; /&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	&lt;!-- 根据ID查询 --&gt;</div><div class="line">	&lt;select id=&quot;findBlogById&quot; parameterType=&quot;int&quot; resultMap=&quot;blogResultMap&quot;&gt;</div><div class="line">		&lt;!-- SELECT</div><div class="line">		blog.blog_id,blog.blog_title,</div><div class="line">		author.author_id,author.author_username,author.author_password,author.author_email,author.author_bio,author.register_time,</div><div class="line">		posts.post_id,posts.post_subject,posts.post_body,posts.createtime,posts.blog_id</div><div class="line">		FROM blog,author,posts</div><div class="line">		WHERE blog.author_id=author.author_id</div><div class="line">		AND</div><div class="line">		blog.blog_id=posts.blog_id</div><div class="line">		AND blog.blog_id=#&#123;blogId&#125; --&gt;</div><div class="line">		select * from blog where blog_id = #&#123;blogId&#125;</div><div class="line">	&lt;/select&gt;</div><div class="line">	&lt;!-- 根据名字查询 --&gt;</div><div class="line">	&lt;select id=&quot;findBlogByName&quot; parameterType=&quot;String&quot; resultMap=&quot;blogResultMap&quot;&gt;</div><div class="line">		SELECT</div><div class="line">		blog.blog_id,blog.blog_title,author.author_id,author.author_username,author.author_password,author.author_email,author.author_bio,author.register_time</div><div class="line">		FROM blog,author</div><div class="line">		WHERE blog.author_id=author.author_id</div><div class="line">		AND blog_title</div><div class="line">		LIKE &quot;%&quot;#&#123;blogTitle&#125;&quot;%&quot;</div><div class="line">	&lt;/select&gt;</div><div class="line"></div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure>
<p>测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.test;</div><div class="line"></div><div class="line">import java.io.IOException;</div><div class="line">import java.io.Reader;</div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">import org.apache.ibatis.io.Resources;</div><div class="line">import org.apache.ibatis.session.SqlSession;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactory;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactoryBuilder;</div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">import com.ghg.md.dao.BlogMapper;</div><div class="line">import com.ghg.md.dao.PostsMapper;</div><div class="line">import com.ghg.md.domain.Blog;</div><div class="line">import com.ghg.md.domain.Posts;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">public class Test6 &#123;</div><div class="line">	private static SqlSessionFactory sqlSessionFactory;</div><div class="line">	private static Reader reader;</div><div class="line">	private static Logger logger = LoggerFactory.getLogger(Test.class);</div><div class="line"></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line"></div><div class="line">		try &#123;</div><div class="line">			reader = Resources.getResourceAsReader(&quot;Configuration.xml&quot;);</div><div class="line">			sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);</div><div class="line">		&#125; catch (IOException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		SqlSession session = sqlSessionFactory.openSession();</div><div class="line">		</div><div class="line">	</div><div class="line">		BlogMapper blogMapper = session.getMapper(BlogMapper.class);</div><div class="line">		</div><div class="line">		Blog blogById = blogMapper.findBlogById(2);</div><div class="line">		</div><div class="line">		</div><div class="line">		logger.debug(&quot;Blogid : &#123;&#125;,title: &#123;&#125;&quot;,blogById.getBlogId(),blogById.getBlogTitle());</div><div class="line">		logger.debug(&quot;==========开始延时加载====================&quot;);</div><div class="line">		logger.debug(&quot;BlogPost: &#123;&#125;&quot;,blogById.getPosts());</div><div class="line">		logger.debug(&quot;BlogAuthor: &#123;&#125;&quot;,blogById.getAuthor());</div><div class="line">		</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">09:23:26.760 [main] DEBUG c.ghg.md.dao.BlogMapper.findBlogById- ==&gt;  Preparing: select * from blog where blog_id = ? </div><div class="line">09:23:26.787 [main] DEBUG c.ghg.md.dao.BlogMapper.findBlogById- ==&gt; Parameters: 2(Integer)</div><div class="line">09:23:26.801 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ====&gt;  Preparing: select * from author where author_id = ? </div><div class="line">09:23:26.801 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ====&gt; Parameters: 2(Integer)</div><div class="line">09:23:26.803 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- &lt;====      Total: 1</div><div class="line">09:23:26.804 [main] DEBUG c.g.m.d.P.findPostsByBlogId- ====&gt;  Preparing: select * from posts where blog_id =? </div><div class="line">09:23:26.804 [main] DEBUG c.g.m.d.P.findPostsByBlogId- ====&gt; Parameters: 2(Integer)</div><div class="line">09:23:26.806 [main] DEBUG c.g.m.d.P.findPostsByBlogId- &lt;====      Total: 2</div><div class="line">09:23:26.806 [main] DEBUG c.ghg.md.dao.BlogMapper.findBlogById- &lt;==      Total: 1</div><div class="line">09:23:26.807 [main] DEBUG com.ghg.md.test.Test- Blogid : 2,title: 小李</div><div class="line">09:23:26.808 [main] DEBUG com.ghg.md.test.Test- ==========开始延时加载====================</div><div class="line">09:23:26.808 [main] DEBUG com.ghg.md.test.Test- BlogPost: [Posts [postId=3, postSubject=Oracle学习, postBody=Oracle Database，又名Oracle RDBMS，或简称Oracle。是甲骨文公司的一款关系数据库管理系统, createTime=Thu Oct 29 10:33:26 CST 2015], Posts [postId=7, postSubject=javascript, postBody=js:是前端脚本语言, createTime=Thu Oct 29 10:40:18 CST 2015]]</div><div class="line">09:23:26.808 [main] DEBUG com.ghg.md.test.Test- BlogAuthor: Author [authorId=2, authorUserName=李四, authorPassword=123asf, authorEmail=lisi@163.com, authorBio=魂牵梦萦 , registerTime=Thu Oct 29 10:24:29 CST 2015]</div></pre></td></tr></table></figure></p>
<p>先把所有的有关联的查询都执行过了，也就是一次性全部查出</p>
<h5 id="添加延时加载"><a href="#添加延时加载" class="headerlink" title="添加延时加载"></a>添加延时加载</h5><p>configuration.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">	&lt;!--资源文件 --&gt;</div><div class="line">	&lt;properties resource=&quot;jdbc.properties&quot; /&gt;</div><div class="line"></div><div class="line">	&lt;settings&gt;</div><div class="line">		&lt;!-- 开启延时加载 默认为false--&gt; </div><div class="line">		&lt;setting name=&quot;lazyLoadingEnabled&quot; value=&quot;true&quot; /&gt;</div><div class="line">		&lt;!--关闭立即加载 默认为true --&gt;</div><div class="line">		&lt;setting name=&quot;aggressiveLazyLoading&quot; value=&quot;false&quot; /&gt;</div><div class="line">	&lt;/settings&gt;</div></pre></td></tr></table></figure></p>
<p>测试还是上面的方法，查询结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.test;</div><div class="line"></div><div class="line">import java.io.IOException;</div><div class="line">import java.io.Reader;</div><div class="line"></div><div class="line"></div><div class="line">import org.apache.ibatis.io.Resources;</div><div class="line">import org.apache.ibatis.session.SqlSession;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactory;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactoryBuilder;</div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">import com.ghg.md.dao.BlogMapper;</div><div class="line">import com.ghg.md.domain.Blog;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">public class Test6 &#123;</div><div class="line">	private static SqlSessionFactory sqlSessionFactory;</div><div class="line">	private static Reader reader;</div><div class="line">	private static Logger logger = LoggerFactory.getLogger(Test.class);</div><div class="line"></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line"></div><div class="line">		try &#123;</div><div class="line">			reader = Resources.getResourceAsReader(&quot;Configuration.xml&quot;);</div><div class="line">			sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);</div><div class="line">		&#125; catch (IOException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		SqlSession session = sqlSessionFactory.openSession();</div><div class="line">		</div><div class="line">	</div><div class="line">		BlogMapper blogMapper = session.getMapper(BlogMapper.class);</div><div class="line">		</div><div class="line">		Blog blogById = blogMapper.findBlogById(2);</div><div class="line">		</div><div class="line">		</div><div class="line">		logger.debug(&quot;Blogid : &#123;&#125;,title: &#123;&#125;&quot;,blogById.getBlogId(),blogById.getBlogTitle());</div><div class="line">		logger.debug(&quot;==========开始延时加载Posts====================&quot;);</div><div class="line">		logger.debug(&quot;BlogPost: &#123;&#125;&quot;,blogById.getPosts());</div><div class="line">		logger.debug(&quot;==========开始延时加载Author====================&quot;);</div><div class="line">		logger.debug(&quot;BlogAuthor: &#123;&#125;&quot;,blogById.getAuthor());</div><div class="line">		</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">09:42:07.696 [main] DEBUG c.ghg.md.dao.BlogMapper.findBlogById- ==&gt;  Preparing: select * from blog where blog_id = ? </div><div class="line">09:42:07.723 [main] DEBUG c.ghg.md.dao.BlogMapper.findBlogById- ==&gt; Parameters: 2(Integer)</div><div class="line">09:42:07.770 [main] DEBUG c.ghg.md.dao.BlogMapper.findBlogById- &lt;==      Total: 1</div><div class="line">09:42:07.771 [main] DEBUG com.ghg.md.test.Test- Blogid : 2,title: 小李</div><div class="line">09:42:07.772 [main] DEBUG com.ghg.md.test.Test- ==========开始延时加载Posts====================</div><div class="line">09:42:07.772 [main] DEBUG c.g.m.d.P.findPostsByBlogId- ==&gt;  Preparing: select * from posts where blog_id =? </div><div class="line">09:42:07.773 [main] DEBUG c.g.m.d.P.findPostsByBlogId- ==&gt; Parameters: 2(Integer)</div><div class="line">09:42:07.776 [main] DEBUG c.g.m.d.P.findPostsByBlogId- &lt;==      Total: 2</div><div class="line">09:42:07.776 [main] DEBUG com.ghg.md.test.Test- BlogPost: [Posts [postId=3, postSubject=Oracle学习, postBody=Oracle Database，又名Oracle RDBMS，或简称Oracle。是甲骨文公司的一款关系数据库管理系统, createTime=Thu Oct 29 10:33:26 CST 2015], Posts [postId=7, postSubject=javascript, postBody=js:是前端脚本语言, createTime=Thu Oct 29 10:40:18 CST 2015]]</div><div class="line">09:42:07.776 [main] DEBUG com.ghg.md.test.Test- ==========开始延时加载Author====================</div><div class="line">09:42:07.776 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ==&gt;  Preparing: select * from author where author_id = ? </div><div class="line">09:42:07.777 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ==&gt; Parameters: 2(Integer)</div><div class="line">09:42:07.778 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- &lt;==      Total: 1</div><div class="line">09:42:07.778 [main] DEBUG com.ghg.md.test.Test- BlogAuthor: Author [authorId=2, authorUserName=李四, authorPassword=123asf, authorEmail=lisi@163.com, authorBio=魂牵梦萦 , registerTime=Thu Oct 29 10:24:29 CST 2015]</div></pre></td></tr></table></figure></p>
<p>在需要使得的使用的时候，才去执行查询</p>
<h4 id="二级缓存"><a href="#二级缓存" class="headerlink" title="二级缓存"></a>二级缓存</h4><h5 id="开启二级缓存"><a href="#开启二级缓存" class="headerlink" title="开启二级缓存"></a>开启二级缓存</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;settings&gt;</div><div class="line"></div><div class="line">		&lt;!-- 开启延时加载 --&gt;</div><div class="line">		&lt;setting name=&quot;lazyLoadingEnabled&quot; value=&quot;true&quot; /&gt;</div><div class="line">		&lt;!-- 关闭立即加载 --&gt;</div><div class="line">		&lt;setting name=&quot;aggressiveLazyLoading&quot; value=&quot;false&quot; /&gt;</div><div class="line">		&lt;!--开启二级缓存 --&gt;</div><div class="line">		&lt;setting name=&quot;cacheEnabled&quot; value=&quot;true&quot; /&gt;</div><div class="line">	&lt;/settings&gt;</div></pre></td></tr></table></figure>
<h5 id="在authorMapper中开启二级缓存"><a href="#在authorMapper中开启二级缓存" class="headerlink" title="在authorMapper中开启二级缓存"></a>在authorMapper中开启二级缓存</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!--开启本mapper下的二级缓冲  --&gt;</div><div class="line">&lt;cache /&gt;</div></pre></td></tr></table></figure>
<h5 id="mybatis二级缓存与一级缓存"><a href="#mybatis二级缓存与一级缓存" class="headerlink" title="mybatis二级缓存与一级缓存"></a>mybatis二级缓存与一级缓存</h5><p>sqlSession是互不影响的，一级缓存</p>
<p>Mapper(namespace)是二级缓存</p>
<p>多个sqlSession可以共享一个Mapper的二级缓存区域</p>
<p>二级缓存按namespace分，其它的mapper也有自己的二级缓存区域namespace</p>
<p>第一个namespace的mapper都有一个二级缓存区域，2个mapper的namespace如果相同，这2个mapper执行sql查询数据将存在相同的二级缓存区域中.<br>二级缓存是mapper范围级别的，除了在configuration.xml设置二级缓存的总开关，还在在个体的mapper.xml中开启二级缓存</p>
<h5 id="实现序列化"><a href="#实现序列化" class="headerlink" title="实现序列化"></a>实现序列化</h5><p><img src="http://images2015.cnblogs.com/blog/710715/201510/710715-20151031172732575-896798847.png" alt="http://images2015.cnblogs.com/blog/710715/201510/710715-20151031172732575-896798847.png"></p>
<h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.test;</div><div class="line"></div><div class="line">import java.io.IOException;</div><div class="line">import java.io.Reader;</div><div class="line"></div><div class="line"></div><div class="line">import org.apache.ibatis.io.Resources;</div><div class="line">import org.apache.ibatis.session.SqlSession;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactory;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactoryBuilder;</div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">import com.ghg.md.dao.AuthorMapper;</div><div class="line">import com.ghg.md.dao.BlogMapper;</div><div class="line">import com.ghg.md.domain.Author;</div><div class="line">import com.ghg.md.domain.Blog;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">public class Test7 &#123;</div><div class="line">	private static SqlSessionFactory sqlSessionFactory;</div><div class="line">	private static Reader reader;</div><div class="line">	private static Logger logger = LoggerFactory.getLogger(Test.class);</div><div class="line"></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line"></div><div class="line">		try &#123;</div><div class="line">			reader = Resources.getResourceAsReader(&quot;Configuration.xml&quot;);</div><div class="line">			sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);</div><div class="line">		&#125; catch (IOException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		SqlSession sqlSession1 = sqlSessionFactory.openSession();</div><div class="line">        AuthorMapper authorMapper1 = sqlSession1.getMapper(AuthorMapper.class);</div><div class="line">        // 第一次查询</div><div class="line">        Author author1 = authorMapper1.findAuthorById(2);</div><div class="line">        logger.debug(&quot;sqlSession1 &#123;&#125;&quot;,author1);</div><div class="line">        //必须关闭不数据无法写到缓存区域</div><div class="line">        sqlSession1.close();</div><div class="line"></div><div class="line">        // 获取会话工厂</div><div class="line">        SqlSession sqlSession3 = sqlSessionFactory.openSession();</div><div class="line">        AuthorMapper authorMapper3 = sqlSession3.getMapper(AuthorMapper.class);</div><div class="line">        // 第一次查询</div><div class="line">        Author author3 = authorMapper3.findAuthorById(2);</div><div class="line">        logger.debug(&quot;author3 &#123;&#125;&quot;,author3);</div><div class="line">        sqlSession3.close();</div><div class="line"></div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">09:53:03.059 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ==&gt;  Preparing: select * from author where author_id = ? </div><div class="line">09:53:03.087 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ==&gt; Parameters: 2(Integer)</div><div class="line">09:53:03.101 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- &lt;==      Total: 1</div><div class="line">09:53:03.101 [main] DEBUG com.ghg.md.test.Test- sqlSession1 Author [authorId=2, authorUserName=李四, authorPassword=123asf, authorEmail=lisi@163.com, authorBio=魂牵梦萦 , registerTime=Thu Oct 29 10:24:29 CST 2015]</div><div class="line">09:53:03.107 [main] DEBUG o.a.i.t.jdbc.JdbcTransaction- Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@3457949e]</div><div class="line">09:53:03.108 [main] DEBUG o.a.i.t.jdbc.JdbcTransaction- Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@3457949e]</div><div class="line">09:53:03.108 [main] DEBUG o.a.i.d.pooled.PooledDataSource- Returned connection 878154910 to pool.</div><div class="line">09:53:03.109 [main] DEBUG com.ghg.md.dao.AuthorMapper- Cache Hit Ratio [com.ghg.md.dao.AuthorMapper]: 0.5</div><div class="line">09:53:03.109 [main] DEBUG com.ghg.md.test.Test- author3 Author [authorId=2, authorUserName=李四, authorPassword=123asf, authorEmail=lisi@163.com, authorBio=魂牵梦萦 , registerTime=Thu Oct 29 10:24:29 CST 2015]</div></pre></td></tr></table></figure>
<p>中间有这样<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">09:53:03.109 [main] DEBUG com.ghg.md.dao.AuthorMapper- Cache Hit Ratio [com.ghg.md.dao.AuthorMapper]: 0.5</div></pre></td></tr></table></figure></p>
<p>缓存</p>
<h5 id="中间增加commit操作"><a href="#中间增加commit操作" class="headerlink" title="中间增加commit操作"></a>中间增加commit操作</h5><p>mapper接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.dao;</div><div class="line"></div><div class="line">import org.apache.ibatis.annotations.Param;</div><div class="line"></div><div class="line">import com.ghg.md.domain.Author;</div><div class="line"></div><div class="line">public interface AuthorMapper &#123;</div><div class="line">	</div><div class="line">	</div><div class="line">	public Author findAuthorById(@Param(&quot;id&quot;) int id);</div><div class="line"></div><div class="line">	public int addAuthor(Author author);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;!--添加 --&gt;</div><div class="line">&lt;insert id=&quot;addAuthor&quot; parameterType=&quot;Author&quot;&gt;</div><div class="line">	INSERT INTO author(author_username,author_password,author_email,author_bio)</div><div class="line">	VALUES(#&#123;authorUserName&#125;,#&#123;authorPassword&#125;,#&#123;authorEmail&#125;,#&#123;authorBio&#125;)</div><div class="line">&lt;/insert&gt;</div></pre></td></tr></table></figure></p>
<p>测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.test;</div><div class="line"></div><div class="line">import java.io.IOException;</div><div class="line">import java.io.Reader;</div><div class="line"></div><div class="line">import org.apache.ibatis.io.Resources;</div><div class="line">import org.apache.ibatis.session.SqlSession;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactory;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactoryBuilder;</div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">import com.ghg.md.dao.AuthorMapper;</div><div class="line">import com.ghg.md.dao.BlogMapper;</div><div class="line">import com.ghg.md.domain.Author;</div><div class="line">import com.ghg.md.domain.Blog;</div><div class="line"></div><div class="line">public class Test7 &#123;</div><div class="line">	private static SqlSessionFactory sqlSessionFactory;</div><div class="line">	private static Reader reader;</div><div class="line">	private static Logger logger = LoggerFactory.getLogger(Test.class);</div><div class="line"></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line"></div><div class="line">		try &#123;</div><div class="line">			reader = Resources.getResourceAsReader(&quot;Configuration.xml&quot;);</div><div class="line">			sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);</div><div class="line">		&#125; catch (IOException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		SqlSession sqlSession1 = sqlSessionFactory.openSession();</div><div class="line">		AuthorMapper authorMapper1 = sqlSession1.getMapper(AuthorMapper.class);</div><div class="line">		// 第一次查询</div><div class="line">		Author author1 = authorMapper1.findAuthorById(2);</div><div class="line">		logger.debug(&quot;sqlSession1 &#123;&#125;&quot;, author1);</div><div class="line">		// 必须关闭不数据无法写到缓存区域</div><div class="line">		sqlSession1.close();</div><div class="line">		logger.debug(&quot;============开始添加========&quot;);</div><div class="line">		SqlSession sqlSession2 = sqlSessionFactory.openSession();</div><div class="line">		AuthorMapper authorMapper2 = sqlSession2.getMapper(AuthorMapper.class);</div><div class="line">		// 第一次查询</div><div class="line">		Author newAuthor = new Author();</div><div class="line">		newAuthor.setAuthorEmail(&quot;qq.com@qq.com&quot;);</div><div class="line">		newAuthor.setAuthorPassword(&quot;fdsfds&quot;);</div><div class="line">		newAuthor.setAuthorUserName(&quot;郭靖&quot;);</div><div class="line">		newAuthor.setAuthorBio(&quot;射雕英雄传&quot;);</div><div class="line"></div><div class="line">		authorMapper2.addAuthor(newAuthor);</div><div class="line"></div><div class="line">		sqlSession2.commit();</div><div class="line">		sqlSession2.close();</div><div class="line"></div><div class="line">		logger.debug(&quot;============添加完成========&quot;);</div><div class="line"></div><div class="line">		// 获取会话工厂</div><div class="line">		SqlSession sqlSession3 = sqlSessionFactory.openSession();</div><div class="line">		AuthorMapper authorMapper3 = sqlSession3.getMapper(AuthorMapper.class);</div><div class="line">		// 第一次查询</div><div class="line">		Author author3 = authorMapper3.findAuthorById(2);</div><div class="line">		logger.debug(&quot;author3 &#123;&#125;&quot;, author3);</div><div class="line">		sqlSession3.close();</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">10:08:51.418 [main] DEBUG c.ghg.md.dao.AuthorMapper.addAuthor- ==&gt;  Preparing: INSERT INTO author(author_username,author_password,author_email,author_bio) VALUES(?,?,?,?) </div><div class="line">10:08:51.419 [main] DEBUG c.ghg.md.dao.AuthorMapper.addAuthor- ==&gt; Parameters: 郭靖(String), fdsfds(String), qq.com@qq.com(String), 射雕英雄传(String)</div><div class="line">10:08:51.429 [main] DEBUG c.ghg.md.dao.AuthorMapper.addAuthor- &lt;==    Updates: 1</div><div class="line">10:08:51.429 [main] DEBUG o.a.i.t.jdbc.JdbcTransaction- Committing JDBC Connection [com.mysql.jdbc.JDBC4Connection@2be4d228]</div><div class="line">10:08:51.459 [main] DEBUG o.a.i.t.jdbc.JdbcTransaction- Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@2be4d228]</div><div class="line">10:08:51.459 [main] DEBUG o.a.i.t.jdbc.JdbcTransaction- Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@2be4d228]</div><div class="line">10:08:51.459 [main] DEBUG o.a.i.d.pooled.PooledDataSource- Returned connection 736416296 to pool.</div><div class="line">10:08:51.459 [main] DEBUG com.ghg.md.test.Test- ============添加完成========</div><div class="line">10:08:51.460 [main] DEBUG com.ghg.md.dao.AuthorMapper- Cache Hit Ratio [com.ghg.md.dao.AuthorMapper]: 0.0</div><div class="line">10:08:51.460 [main] DEBUG o.a.i.t.jdbc.JdbcTransaction- Opening JDBC Connection</div><div class="line">10:08:51.460 [main] DEBUG o.a.i.d.pooled.PooledDataSource- Checked out connection 736416296 from pool.</div><div class="line">10:08:51.460 [main] DEBUG o.a.i.t.jdbc.JdbcTransaction- Setting autocommit to false on JDBC Connection [com.mysql.jdbc.JDBC4Connection@2be4d228]</div><div class="line">10:08:51.460 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ==&gt;  Preparing: select * from author where author_id = ? </div><div class="line">10:08:51.460 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- ==&gt; Parameters: 2(Integer)</div><div class="line">10:08:51.461 [main] DEBUG c.g.m.d.AuthorMapper.findAuthorById- &lt;==      Total: 1</div><div class="line">10:08:51.461 [main] DEBUG com.ghg.md.test.Test- author3 Author [authorId=2, authorUserName=李四, authorPassword=123asf, authorEmail=lisi@163.com, authorBio=魂牵梦萦 , registerTime=Thu Oct 29 10:24:29 CST 2015]</div><div class="line">10:08:51.461 [main] DEBUG o.a.i.t.jdbc.JdbcTransaction- Resetting autocommit to true on JDBC Connection [com.mysql.jdbc.JDBC4Connection@2be4d228]</div><div class="line">10:08:51.462 [main] DEBUG o.a.i.t.jdbc.JdbcTransaction- Closing JDBC Connection [com.mysql.jdbc.JDBC4Connection@2be4d228]</div><div class="line">10:08:51.462 [main] DEBUG o.a.i.d.pooled.PooledDataSource- Returned connection 736416296 to pool.</div></pre></td></tr></table></figure></p>
<p>看到中间有commit时，会清空缓存<br>当做事物时，如添加，删除，修改，后有commit时会清空一级缓存</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mybatis入门四延时加载、缓存&quot;&gt;&lt;a href=&quot;#mybatis入门四延时加载、缓存&quot; class=&quot;headerlink&quot; title=&quot;mybatis入门四延时加载、缓存&quot;&gt;&lt;/a&gt;mybatis入门四延时加载、缓存&lt;/h3&gt;&lt;h4 id=&quot;mybat
    
    </summary>
    
      <category term="mybatis" scheme="https://ln0491.github.io/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://ln0491.github.io/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>mybatis入门三</title>
    <link href="https://ln0491.github.io/2017/02/27/mybatis%E5%85%A5%E9%97%A8%E4%B8%89/"/>
    <id>https://ln0491.github.io/2017/02/27/mybatis入门三/</id>
    <published>2017-02-27T08:18:55.000Z</published>
    <updated>2017-02-27T09:58:36.731Z</updated>
    
    <content type="html"><![CDATA[<h3 id="实现关联数据的查询"><a href="#实现关联数据的查询" class="headerlink" title="实现关联数据的查询"></a>实现关联数据的查询</h3><h4 id="建立表"><a href="#建立表" class="headerlink" title="建立表"></a>建立表</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">CREATE TABLE article(</div><div class="line">id INT(11) PRIMARY KEY AUTO_INCREMENT,</div><div class="line">userid INT(11) NOT NULL,</div><div class="line">title VARCHAR(100) NOT NULL,</div><div class="line">content TEXT NOT NULL</div><div class="line"></div><div class="line">);</div><div class="line"></div><div class="line">INSERT INTO article VALUES (NULL, 1, &apos;test_title&apos;, &apos;test_content&apos;);</div><div class="line">INSERT INTO article VALUES (NULL, 2, &apos;test_title_2&apos;, &apos;test_content_2&apos;);</div><div class="line">INSERT INTO article VALUES (NULL, 3, &apos;test_title_3&apos;, &apos;test_content_3&apos;);</div><div class="line">INSERT INTO article VALUES (NULL, 1, &apos;test_title_4&apos;, &apos;test_content_4&apos;);</div></pre></td></tr></table></figure>
<h4 id="建立对应的JAVA类"><a href="#建立对应的JAVA类" class="headerlink" title="建立对应的JAVA类"></a>建立对应的JAVA类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.domain;</div><div class="line"></div><div class="line">public class Article &#123;</div><div class="line"></div><div class="line">	private int id;</div><div class="line">	//用户对应userID</div><div class="line">	private UserDo userDo;</div><div class="line">	private String titile;</div><div class="line">	private String content;</div><div class="line"></div><div class="line">	private Article() &#123;</div><div class="line">		super();</div><div class="line">		// TODO Auto-generated constructor stub</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	private Article(int id, UserDo userDo, String titile, String content) &#123;</div><div class="line">		super();</div><div class="line">		this.id = id;</div><div class="line">		this.userDo = userDo;</div><div class="line">		this.titile = titile;</div><div class="line">		this.content = content;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public UserDo getUserDo() &#123;</div><div class="line">		return userDo;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setUserDo(UserDo userDo) &#123;</div><div class="line">		this.userDo = userDo;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public int getId() &#123;</div><div class="line">		return id;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setId(int id) &#123;</div><div class="line">		this.id = id;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getTitile() &#123;</div><div class="line">		return titile;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setTitile(String titile) &#123;</div><div class="line">		this.titile = titile;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getContent() &#123;</div><div class="line">		return content;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setContent(String content) &#123;</div><div class="line">		this.content = content;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="建立mapper-xml-association"><a href="#建立mapper-xml-association" class="headerlink" title="建立mapper.xml association"></a>建立mapper.xml association</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE mapper</div><div class="line">  PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</div><div class="line">  &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</div><div class="line"></div><div class="line">&lt;mapper namespace=&quot;com.ghg.md.dao.ArticleMapper&quot;&gt;</div><div class="line"></div><div class="line">	&lt;!--UserDo 联合文章进行查询 方法之一的配置 (多对一的方式) --&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;resultMap type=&quot;com.ghg.md.domain.UserDo&quot; id=&quot;userDo&quot;&gt;</div><div class="line">		&lt;id column=&quot;uid&quot; property=&quot;id&quot; /&gt;</div><div class="line">		&lt;result column=&quot;username&quot; property=&quot;userName&quot; /&gt;</div><div class="line">		&lt;result column=&quot;userage&quot; property=&quot;userAge&quot; /&gt;</div><div class="line">		&lt;result column=&quot;useraddress&quot; property=&quot;userAddress&quot; /&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line"></div><div class="line">	&lt;resultMap type=&quot;com.ghg.md.domain.Article&quot; id=&quot;article&quot;&gt;</div><div class="line">		&lt;id column=&quot;id&quot; property=&quot;id&quot; /&gt;</div><div class="line">		&lt;result column=&quot;title&quot; property=&quot;title&quot; /&gt;</div><div class="line">		&lt;result column=&quot;content&quot; property=&quot;content&quot; /&gt;</div><div class="line">		&lt;!--一对多 --&gt;</div><div class="line">		&lt;association property=&quot;userDo&quot; javaType=&quot;com.ghg.md.domain.UserDo&quot; resultMap=&quot;userDo&quot; &gt;</div><div class="line">		&lt;!--此处也有ID，需要使用别名，对应sql中的 uid  --&gt;</div><div class="line">		&lt;!-- 	&lt;id column=&quot;uid&quot; property=&quot;id&quot; /&gt;</div><div class="line">			&lt;result column=&quot;username&quot; property=&quot;userName&quot; /&gt;</div><div class="line">			&lt;result column=&quot;userage&quot; property=&quot;userAge&quot; /&gt;</div><div class="line">			&lt;result column=&quot;useraddress&quot; property=&quot;userAddress&quot; /&gt; --&gt;</div><div class="line">		&lt;/association&gt;</div><div class="line"></div><div class="line">	&lt;/resultMap&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;select id=&quot;getUserArticles&quot; parameterType=&quot;int&quot; resultMap=&quot;article&quot;&gt;</div><div class="line">		SELECT</div><div class="line">		user.id uid,user.userName,user.userAddress,article.id,article.title,article.content</div><div class="line">		FROM USER,article</div><div class="line">		WHERE user.id=article.userid AND user.id=#&#123;id&#125;</div><div class="line">	&lt;/select&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure>
<p>mapper接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">public interface ArticleMapper &#123;</div><div class="line"></div><div class="line">	</div><div class="line">	public List&lt;Article&gt; getUserArticles(@Param(&quot;id&quot;) int id);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">private static SqlSessionFactory sqlSessionFactory;</div><div class="line">private static Reader reader;</div><div class="line">private static Logger logger = LoggerFactory.getLogger(Test.class);</div><div class="line"></div><div class="line">public static void main(String[] args) &#123;</div><div class="line"></div><div class="line">	try &#123;</div><div class="line">		reader = Resources.getResourceAsReader(&quot;Configuration.xml&quot;);</div><div class="line">		sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);</div><div class="line">	&#125; catch (IOException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	SqlSession session = sqlSessionFactory.openSession();</div><div class="line">	</div><div class="line">	ArticleMapper articleMapper = session.getMapper(ArticleMapper.class);</div><div class="line">	</div><div class="line">	List&lt;Article&gt; articles = articleMapper.getUserArticles(1);</div><div class="line">	</div><div class="line">	for(Article a:articles)&#123;</div><div class="line">	logger.debug(&quot;用户内容:&#123;&#125;\n&quot;,a);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="复杂关系一对一与一对多"><a href="#复杂关系一对一与一对多" class="headerlink" title="复杂关系一对一与一对多"></a>复杂关系一对一与一对多</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line">SQLyog Enterprise v12.09 (64 bit)</div><div class="line">MySQL - 5.6.27-log : Database - mybatis</div><div class="line">*********************************************************************</div><div class="line">*/</div><div class="line"></div><div class="line"></div><div class="line">/*!40101 SET NAMES utf8 */;</div><div class="line"></div><div class="line">/*!40101 SET SQL_MODE=&apos;&apos;*/;</div><div class="line"></div><div class="line">/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;</div><div class="line">/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;</div><div class="line">/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE=&apos;NO_AUTO_VALUE_ON_ZERO&apos; */;</div><div class="line">/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;</div><div class="line">CREATE DATABASE /*!32312 IF NOT EXISTS*/`mybatis` /*!40100 DEFAULT CHARACTER SET utf8 */;</div><div class="line"></div><div class="line">USE `mybatis`;</div><div class="line"></div><div class="line">/*Table structure for table `author` */</div><div class="line"></div><div class="line">DROP TABLE IF EXISTS `author`;</div><div class="line"></div><div class="line">CREATE TABLE `author` (</div><div class="line">  `author_id` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT &apos;作者ID主键&apos;,</div><div class="line">  `author_username` VARCHAR(30) NOT NULL COMMENT &apos;作者用户名&apos;,</div><div class="line">  `author_password` VARCHAR(32) NOT NULL COMMENT &apos;作者密码&apos;,</div><div class="line">  `author_email` VARCHAR(50) NOT NULL COMMENT &apos;作者邮箱&apos;,</div><div class="line">  `author_bio` VARCHAR(1000) DEFAULT &apos;这家伙很赖，什么也没留下&apos; COMMENT &apos;作者简介&apos;,</div><div class="line">  `register_time` DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT &apos;注册时间&apos;,</div><div class="line">  PRIMARY KEY (`author_id`)</div><div class="line">) ENGINE=INNODB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;</div><div class="line"></div><div class="line">/*Data for the table `author` */</div><div class="line"></div><div class="line">INSERT INTO `author`(`author_id`,`author_username`,`author_password`,`author_email`,`author_bio`,`register_time`) VALUES (1,&apos;张三&apos;,&apos;123456&apos;,&apos;123@qq.com&apos;,&apos;张三是个新手，刚开始注册&apos;,&apos;2015-10-29 10:23:59&apos;),(2,&apos;李四&apos;,&apos;123asf&apos;,&apos;lisi@163.com&apos;,&apos;魂牵梦萦 &apos;,&apos;2015-10-29 10:24:29&apos;),(3,&apos;王五&apos;,&apos;dfsd342&apos;,&apos;ww@sina.com&apos;,&apos;康熙王朝&apos;,&apos;2015-10-29 10:25:23&apos;),(4,&apos;赵六&apos;,&apos;123098sdfa&apos;,&apos;zhaoliu@qq.com&apos;,&apos;花午骨&apos;,&apos;2015-10-29 10:26:09&apos;),(5,&apos;钱七&apos;,&apos;zxasqw&apos;,&apos;qianqi@qq.com&apos;,&apos;这家伙很赖，什么也没留下&apos;,&apos;2015-10-29 10:27:04&apos;),(6,&apos;张三丰&apos;,&apos;123456&apos;,&apos;zhangsf@qq.com&apos;,&apos;这家伙很赖，什么也没留下&apos;,&apos;2015-10-29 11:48:00&apos;),(7,&apos;张无忌&apos;,&apos;qwertyuiop&apos;,&apos;wuji@163.com&apos;,&apos;这家伙很赖，什么也没留下&apos;,&apos;2015-10-29 11:48:24&apos;);</div><div class="line"></div><div class="line">/*Table structure for table `blog` */</div><div class="line"></div><div class="line">DROP TABLE IF EXISTS `blog`;</div><div class="line"></div><div class="line">CREATE TABLE `blog` (</div><div class="line">  `blog_id` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT &apos;BlogId主键&apos;,</div><div class="line">  `blog_title` VARCHAR(255) NOT NULL COMMENT &apos;blog标题&apos;,</div><div class="line">  `author_id` INT(11) UNSIGNED NOT NULL COMMENT &apos;作者ID外键&apos;,</div><div class="line">  PRIMARY KEY (`blog_id`),</div><div class="line">  KEY `fk_author_id` (`author_id`),</div><div class="line">  CONSTRAINT `fk_author_id` FOREIGN KEY (`author_id`) REFERENCES `author` (`author_id`)</div><div class="line">) ENGINE=INNODB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8;</div><div class="line"></div><div class="line">/*Data for the table `blog` */</div><div class="line"></div><div class="line">INSERT  INTO `blog`(`blog_id`,`blog_title`,`author_id`) VALUES (1,&apos;小张的Blog&apos;,1),(2,&apos;小李&apos;,2),(3,&apos;王五不是人&apos;,3),(4,&apos;赵地人&apos;,4),(5,&apos;钱钱钱&apos;,5);</div><div class="line"></div><div class="line">/*Table structure for table `posts` */</div><div class="line"></div><div class="line">DROP TABLE IF EXISTS `posts`;</div><div class="line"></div><div class="line">CREATE TABLE `posts` (</div><div class="line">  `post_id` INT(11) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT &apos;文章主键ID&apos;,</div><div class="line">  `post_subject` VARCHAR(255) NOT NULL COMMENT &apos;文章主题，标题&apos;,</div><div class="line">  `post_body` TEXT NOT NULL COMMENT &apos;文章内容最大3000个字符&apos;,</div><div class="line">  `blog_id` INT(11) UNSIGNED NOT NULL COMMENT &apos;Blog主键做外键&apos;,</div><div class="line">  `createtime` DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT &apos;文章创建时间&apos;,</div><div class="line">  PRIMARY KEY (`post_id`),</div><div class="line">  KEY `fk_blog_id` (`blog_id`),</div><div class="line">  CONSTRAINT `fk_blog_id` FOREIGN KEY (`blog_id`) REFERENCES `blog` (`blog_id`)</div><div class="line">) ENGINE=INNODB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4;</div><div class="line"></div><div class="line">/*Data for the table `posts` */</div><div class="line"></div><div class="line">INSERT  INTO `posts`(`post_id`,`post_subject`,`post_body`,`blog_id`,`createtime`) VALUES (1,&apos;Mybatis入门一&apos;,&apos;什么是 MyBatis ？\r\nMyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以对配置和原生Map使用简单的 XML 或注解，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。&apos;,1,&apos;2015-10-29 10:32:21&apos;),(2,&apos;Mybatis入门二&apos;,&apos;要使用 MyBatis， 只需将 mybatis-x.x.x.jar 文件置于 classpath 中即可。&apos;,1,&apos;2015-10-29 10:32:52&apos;),(3,&apos;Oracle学习&apos;,&apos;Oracle Database，又名Oracle RDBMS，或简称Oracle。是甲骨文公司的一款关系数据库管理系统&apos;,2,&apos;2015-10-29 10:33:26&apos;),(4,&apos;JAVA学习一&apos;,&apos;Java是由Sun Microsystems公司于1995年5月推出的Java面向对象程序设计语言和Java平台的总称&apos;,3,&apos;2015-10-29 10:34:17&apos;),(5,&apos;PL/SQL&apos;,&apos;PL/SQL也是一种程序语言，叫做过程化SQL语言（Procedural Language/SQL）。PL/SQL是Oracle数据库对SQL语句的扩展&apos;,4,&apos;2015-10-29 10:37:52&apos;),(6,&apos;CSS标签选择器&apos;,&apos;标签选择器\r\nID选择器\r\n类选择器\r\n特殊选择器&apos;,5,&apos;2015-10-29 10:39:44&apos;),(7,&apos;javascript&apos;,&apos;js:是前端脚本语言&apos;,2,&apos;2015-10-29 10:40:18&apos;);</div><div class="line"></div><div class="line">/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;</div><div class="line">/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;</div><div class="line">/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;</div><div class="line">/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;</div></pre></td></tr></table></figure>
<h4 id="建立实体类"><a href="#建立实体类" class="headerlink" title="建立实体类"></a>建立实体类</h4><p>Author<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.domain;</div><div class="line"></div><div class="line">import java.util.Date;</div><div class="line"></div><div class="line">public class Author &#123;</div><div class="line">	// 作者ID</div><div class="line">	private int authorId;</div><div class="line"></div><div class="line">	// 作者用户名</div><div class="line">	private String authorUserName;</div><div class="line"></div><div class="line">	// 作者密码</div><div class="line">	private String authorPassword;</div><div class="line"></div><div class="line">	// 作者邮箱</div><div class="line">	private String authorEmail;</div><div class="line"></div><div class="line">	// 作者介绍</div><div class="line">	private String authorBio;</div><div class="line"></div><div class="line">	// 注册时间</div><div class="line">	private Date registerTime;</div><div class="line"></div><div class="line">	public int getAuthorId() &#123;</div><div class="line">		return authorId;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setAuthorId(int authorId) &#123;</div><div class="line">		this.authorId = authorId;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getAuthorUserName() &#123;</div><div class="line">		return authorUserName;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setAuthorUserName(String authorUserName) &#123;</div><div class="line">		this.authorUserName = authorUserName;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getAuthorPassword() &#123;</div><div class="line">		return authorPassword;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setAuthorPassword(String authorPassword) &#123;</div><div class="line">		this.authorPassword = authorPassword;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getAuthorEmail() &#123;</div><div class="line">		return authorEmail;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setAuthorEmail(String authorEmail) &#123;</div><div class="line">		this.authorEmail = authorEmail;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getAuthorBio() &#123;</div><div class="line">		return authorBio;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setAuthorBio(String authorBio) &#123;</div><div class="line">		this.authorBio = authorBio;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public Date getRegisterTime() &#123;</div><div class="line">		return registerTime;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setRegisterTime(Date registerTime) &#123;</div><div class="line">		this.registerTime = registerTime;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	private Author() &#123;</div><div class="line">		super();</div><div class="line">		// TODO Auto-generated constructor stub</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	private Author(int authorId, String authorUserName, String authorPassword, String authorEmail, String authorBio,</div><div class="line">			Date registerTime) &#123;</div><div class="line">		super();</div><div class="line">		this.authorId = authorId;</div><div class="line">		this.authorUserName = authorUserName;</div><div class="line">		this.authorPassword = authorPassword;</div><div class="line">		this.authorEmail = authorEmail;</div><div class="line">		this.authorBio = authorBio;</div><div class="line">		this.registerTime = registerTime;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public String toString() &#123;</div><div class="line">		return &quot;Author [authorId=&quot; + authorId + &quot;, authorUserName=&quot; + authorUserName + &quot;, authorPassword=&quot;</div><div class="line">				+ authorPassword + &quot;, authorEmail=&quot; + authorEmail + &quot;, authorBio=&quot; + authorBio + &quot;, registerTime=&quot;</div><div class="line">				+ registerTime + &quot;]&quot;;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Blog<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.domain;</div><div class="line"></div><div class="line">public class Blog &#123;</div><div class="line">	//博客ID</div><div class="line">    private int blogId;</div><div class="line">    </div><div class="line">    //标题</div><div class="line">    private String blogTitle;</div><div class="line">    </div><div class="line">    //博客作者</div><div class="line">    private Author author;</div><div class="line"></div><div class="line">	private Blog() &#123;</div><div class="line">		super();</div><div class="line">		// TODO Auto-generated constructor stub</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public int getBlogId() &#123;</div><div class="line">		return blogId;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setBlogId(int blogId) &#123;</div><div class="line">		this.blogId = blogId;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getBlogTitle() &#123;</div><div class="line">		return blogTitle;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setBlogTitle(String blogTitle) &#123;</div><div class="line">		this.blogTitle = blogTitle;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public Author getAuthor() &#123;</div><div class="line">		return author;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setAuthor(Author author) &#123;</div><div class="line">		this.author = author;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Override</div><div class="line">	public String toString() &#123;</div><div class="line">		return &quot;Blog [blogId=&quot; + blogId + &quot;, blogTitle=&quot; + blogTitle + &quot;, author=&quot; + author + &quot;]&quot;;</div><div class="line">	&#125;</div><div class="line">    </div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h4 id="一对一"><a href="#一对一" class="headerlink" title="一对一"></a>一对一</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">public interface BlogMapper &#123;</div><div class="line"></div><div class="line">	public Blog findBlogById(@Param(&quot;blogId&quot;)int blogId);</div><div class="line">	</div><div class="line">	</div><div class="line">	public List&lt;Blog&gt; findBlogByName(@Param(&quot;blogTitle&quot;) String blogTitle);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>建立mapper.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE mapper</div><div class="line">  PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</div><div class="line">  &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</div><div class="line">&lt;mapper namespace=&quot;com.ghg.md.dao.BlogMapper&quot;&gt;</div><div class="line"></div><div class="line">	&lt;!--使用resultMap映射 type使用别名，单独使用Author关联 --&gt;</div><div class="line">	&lt;resultMap type=&quot;Author&quot; id=&quot;authorResultMap&quot;&gt;</div><div class="line">		&lt;!--主键 --&gt;</div><div class="line">		&lt;id property=&quot;authorId&quot; column=&quot;author_id&quot; /&gt;</div><div class="line">		&lt;!--普通属性与表中的字段对应 --&gt;</div><div class="line">		&lt;result property=&quot;authorUserName&quot; column=&quot;author_username&quot; /&gt;</div><div class="line">		&lt;result property=&quot;authorPassword&quot; column=&quot;author_password&quot; /&gt;</div><div class="line">		&lt;result property=&quot;authorEmail&quot; column=&quot;author_email&quot; /&gt;</div><div class="line">		&lt;result property=&quot;authorBio&quot; column=&quot;author_bio&quot; /&gt;</div><div class="line">		&lt;result property=&quot;registerTime&quot; column=&quot;register_time&quot; /&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line"></div><div class="line">	&lt;!--使用ResultMap --&gt;</div><div class="line">	&lt;resultMap type=&quot;Blog&quot; id=&quot;blogResultMap&quot;&gt;</div><div class="line">		&lt;!--主键 --&gt;</div><div class="line">		&lt;id property=&quot;blogId&quot; column=&quot;blog_id&quot; /&gt;</div><div class="line">		&lt;!--标题 --&gt;</div><div class="line">		&lt;result property=&quot;blogTitle&quot; column=&quot;blog_title&quot; /&gt;</div><div class="line">		&lt;!--一对一关联 第一种 --&gt;</div><div class="line">		&lt;association property=&quot;author&quot; resultMap=&quot;authorResultMap&quot; /&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line"></div><div class="line">	&lt;!-- 根据ID查询 --&gt;</div><div class="line">	&lt;select id=&quot;findBlogById&quot; parameterType=&quot;int&quot; resultMap=&quot;blogResultMap&quot;&gt;</div><div class="line">		SELECT</div><div class="line">		blog.blog_id,blog.blog_title,author.author_id,author.author_username,author.author_password,author.author_email,author.author_bio,author.register_time</div><div class="line">		FROM blog,author</div><div class="line">		WHERE blog.author_id=author.author_id</div><div class="line">		AND blog.blog_id=#&#123;blogId&#125;</div><div class="line">	&lt;/select&gt;</div><div class="line">	&lt;!-- 根据名字查询 --&gt;</div><div class="line">	&lt;select id=&quot;findBlogByName&quot; parameterType=&quot;String&quot; resultMap=&quot;blogResultMap&quot;&gt;</div><div class="line">		SELECT</div><div class="line">		blog.blog_id,blog.blog_title,author.author_id,author.author_username,author.author_password,author.author_email,author.author_bio,author.register_time</div><div class="line">		FROM blog,author</div><div class="line">		WHERE blog.author_id=author.author_id</div><div class="line">		AND blog_title LIKE &quot;%&quot;#&#123;blogTitle&#125;&quot;%&quot;</div><div class="line">	&lt;/select&gt;</div><div class="line"></div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure></p>
<p>测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">private static SqlSessionFactory sqlSessionFactory;</div><div class="line">private static Reader reader;</div><div class="line">private static Logger logger = LoggerFactory.getLogger(Test.class);</div><div class="line"></div><div class="line">public static void main(String[] args) &#123;</div><div class="line"></div><div class="line">	try &#123;</div><div class="line">		reader = Resources.getResourceAsReader(&quot;Configuration.xml&quot;);</div><div class="line">		sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);</div><div class="line">	&#125; catch (IOException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	SqlSession session = sqlSessionFactory.openSession();</div><div class="line">	</div><div class="line">	BlogMapper blogMapper = session.getMapper(BlogMapper.class);</div><div class="line">	</div><div class="line">	Blog blog = blogMapper.findBlogById(1);</div><div class="line">	</div><div class="line">	</div><div class="line">	</div><div class="line">	List&lt;Blog&gt; list = blogMapper.findBlogByName(&quot;小张&quot;);</div><div class="line">	</div><div class="line">	for(Blog b: list)&#123;</div><div class="line">		logger.debug(&quot;id查询Blog  &#123;&#125;&quot;,b);</div><div class="line">	&#125;</div></pre></td></tr></table></figure></p>
<h3 id="一对多"><a href="#一对多" class="headerlink" title="一对多"></a>一对多</h3><h4 id="Posts"><a href="#Posts" class="headerlink" title="Posts"></a>Posts</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.domain;</div><div class="line"></div><div class="line">import java.util.Date;</div><div class="line"></div><div class="line">public class Posts &#123;</div><div class="line">	// 文章ID</div><div class="line">	private int postId;</div><div class="line"></div><div class="line">	// 文件主题</div><div class="line">	private String postSubject;</div><div class="line"></div><div class="line">	// 主体内容</div><div class="line">	private String postBody;</div><div class="line">	// 文章建立时间</div><div class="line">	private Date createTime;</div><div class="line"></div><div class="line">	private Posts() &#123;</div><div class="line">		super();</div><div class="line">		// TODO Auto-generated constructor stub</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public int getPostId() &#123;</div><div class="line">		return postId;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setPostId(int postId) &#123;</div><div class="line">		this.postId = postId;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getPostSubject() &#123;</div><div class="line">		return postSubject;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setPostSubject(String postSubject) &#123;</div><div class="line">		this.postSubject = postSubject;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getPostBody() &#123;</div><div class="line">		return postBody;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setPostBody(String postBody) &#123;</div><div class="line">		this.postBody = postBody;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public Date getCreateTime() &#123;</div><div class="line">		return createTime;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setCreateTime(Date createTime) &#123;</div><div class="line">		this.createTime = createTime;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="修改blog类"><a href="#修改blog类" class="headerlink" title="修改blog类"></a>修改blog类</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"> //博客ID</div><div class="line">    private int blogId;</div><div class="line">    </div><div class="line">    //标题</div><div class="line">    private String blogTitle;</div><div class="line">    </div><div class="line">    //博客作者</div><div class="line">    private Author author;</div><div class="line">    </div><div class="line">    //文章List</div><div class="line">    private List&lt;Posts&gt; posts;</div><div class="line">....</div></pre></td></tr></table></figure>
<h4 id="修改blogmapper-xml"><a href="#修改blogmapper-xml" class="headerlink" title="修改blogmapper.xml"></a>修改blogmapper.xml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE mapper</div><div class="line">  PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</div><div class="line">  &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</div><div class="line">&lt;mapper namespace=&quot;com.ghg.md.dao.BlogMapper&quot;&gt;</div><div class="line"></div><div class="line">	&lt;!--使用resultMap映射 type使用别名，单独使用Author关联 --&gt;</div><div class="line">	&lt;resultMap type=&quot;Author&quot; id=&quot;authorResultMap&quot;&gt;</div><div class="line">		&lt;!--主键 --&gt;</div><div class="line">		&lt;id property=&quot;authorId&quot; column=&quot;author_id&quot; /&gt;</div><div class="line">		&lt;!--普通属性与表中的字段对应 --&gt;</div><div class="line">		&lt;result property=&quot;authorUserName&quot; column=&quot;author_username&quot; /&gt;</div><div class="line">		&lt;result property=&quot;authorPassword&quot; column=&quot;author_password&quot; /&gt;</div><div class="line">		&lt;result property=&quot;authorEmail&quot; column=&quot;author_email&quot; /&gt;</div><div class="line">		&lt;result property=&quot;authorBio&quot; column=&quot;author_bio&quot; /&gt;</div><div class="line">		&lt;result property=&quot;registerTime&quot; column=&quot;register_time&quot; /&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line">	&lt;!--文章Map --&gt;</div><div class="line">	&lt;resultMap type=&quot;Posts&quot; id=&quot;postsResultMap&quot;&gt;</div><div class="line">		&lt;id property=&quot;postId&quot; column=&quot;post_id&quot; /&gt;</div><div class="line">		&lt;result property=&quot;postSubject&quot; column=&quot;post_subject&quot; /&gt;</div><div class="line">		&lt;result property=&quot;postBody&quot; column=&quot;post_body&quot; /&gt;</div><div class="line">		&lt;result property=&quot;createTime&quot; column=&quot;createtime&quot; /&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line"></div><div class="line">	&lt;!--使用ResultMap --&gt;</div><div class="line">	&lt;resultMap type=&quot;Blog&quot; id=&quot;blogResultMap&quot;&gt;</div><div class="line">		&lt;!--主键 --&gt;</div><div class="line">		&lt;id property=&quot;blogId&quot; column=&quot;blog_id&quot; /&gt;</div><div class="line">		&lt;!--标题 --&gt;</div><div class="line">		&lt;result property=&quot;blogTitle&quot; column=&quot;blog_title&quot; /&gt;</div><div class="line">		&lt;!--一对一关联 第一种 --&gt;</div><div class="line">		&lt;association property=&quot;author&quot; resultMap=&quot;authorResultMap&quot; /&gt;</div><div class="line"></div><div class="line">		&lt;!--一对多关联 --&gt;</div><div class="line">		&lt;collection property=&quot;posts&quot; resultMap=&quot;postsResultMap&quot;</div><div class="line">			ofType=&quot;Posts&quot; /&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">	&lt;!-- 根据ID查询 --&gt;</div><div class="line">	&lt;select id=&quot;findBlogById&quot; parameterType=&quot;int&quot; resultMap=&quot;blogResultMap&quot;&gt;</div><div class="line">		SELECT blog.blog_id,blog.blog_title,</div><div class="line">		author.author_id,author.author_username,author.author_password,author.author_email,author.author_bio,author.register_time,</div><div class="line">		posts.post_id,posts.post_subject,posts.post_body,posts.createtime,posts.blog_id</div><div class="line">		FROM blog,author,posts</div><div class="line">		WHERE blog.author_id=author.author_id</div><div class="line">		AND blog.blog_id=posts.blog_id</div><div class="line">		AND blog.blog_id=#&#123;blogId&#125;</div><div class="line">	&lt;/select&gt;</div><div class="line">	&lt;!-- 根据名字查询 --&gt;</div><div class="line">	&lt;select id=&quot;findBlogByName&quot; parameterType=&quot;String&quot; resultMap=&quot;blogResultMap&quot;&gt;</div><div class="line">		SELECT</div><div class="line">		blog.blog_id,blog.blog_title,author.author_id,author.author_username,author.author_password,author.author_email,author.author_bio,author.register_time</div><div class="line">		FROM blog,author</div><div class="line">		WHERE blog.author_id=author.author_id</div><div class="line">		AND blog_title</div><div class="line">		LIKE &quot;%&quot;#&#123;blogTitle&#125;&quot;%&quot;</div><div class="line">	&lt;/select&gt;</div><div class="line"></div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure>
<p>测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">BlogMapper blogMapper = session.getMapper(BlogMapper.class);</div><div class="line">		</div><div class="line">		Blog blog = blogMapper.findBlogById(1);</div><div class="line">		logger.debug(&quot;id查询Blog  &#123;&#125;&quot;,blog);</div></pre></td></tr></table></figure></p>
<p>结果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">17:57:28.950 [main] DEBUG com.ghg.md.test.Test- id查询Blog  Blog [blogId=1, blogTitle=小张的Blog, author=Author [authorId=1, authorUserName=张三, authorPassword=123456, authorEmail=123@qq.com, authorBio=张三是个新手，刚开始注册, registerTime=Thu Oct 29 10:23:59 CST 2015], posts=[Posts [postId=1, postSubject=Mybatis入门一, postBody=什么是 MyBatis ？</div><div class="line">MyBatis 是支持定制化 SQL、存储过程以及高级映射的优秀的持久层框架。MyBatis 避免了几乎所有的 JDBC 代码和手动设置参数以及获取结果集。MyBatis 可以对配置和原生Map使用简单的 XML 或注解，将接口和 Java 的 POJOs(Plain Old Java Objects,普通的 Java对象)映射成数据库中的记录。, createTime=Thu Oct 29 10:32:21 CST 2015], Posts [postId=2, postSubject=Mybatis入门二, postBody=要使用 MyBatis， 只需将 mybatis-x.x.x.jar 文件置于 classpath 中即可。, createTime=Thu Oct 29 10:32:52 CST 2015]]]</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;实现关联数据的查询&quot;&gt;&lt;a href=&quot;#实现关联数据的查询&quot; class=&quot;headerlink&quot; title=&quot;实现关联数据的查询&quot;&gt;&lt;/a&gt;实现关联数据的查询&lt;/h3&gt;&lt;h4 id=&quot;建立表&quot;&gt;&lt;a href=&quot;#建立表&quot; class=&quot;headerlink
    
    </summary>
    
      <category term="mybatis" scheme="https://ln0491.github.io/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://ln0491.github.io/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>mybatis入门二</title>
    <link href="https://ln0491.github.io/2017/02/27/mybatis%E5%85%A5%E9%97%A8%E4%BA%8C/"/>
    <id>https://ln0491.github.io/2017/02/27/mybatis入门二/</id>
    <published>2017-02-27T02:12:13.000Z</published>
    <updated>2017-02-27T07:48:12.730Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mybatis入门二-实现数据的增删改查"><a href="#mybatis入门二-实现数据的增删改查" class="headerlink" title="mybatis入门二 实现数据的增删改查"></a>mybatis入门二 实现数据的增删改查</h3><h4 id="在mapper-xml中添类与数据库表关系映射"><a href="#在mapper-xml中添类与数据库表关系映射" class="headerlink" title="在mapper.xml中添类与数据库表关系映射"></a>在mapper.xml中添类与数据库表关系映射</h4><p>configuration.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;!--添加别名 --&gt;</div><div class="line">&lt;typeAliases&gt;</div><div class="line">	&lt;!-- &lt;typeAlias alias=&quot;UserDo&quot; type=&quot;com.ghg.md.domain.UserDo&quot;/&gt; --&gt;</div><div class="line">	&lt;!--配置基本包名实体类路径 --&gt;</div><div class="line">	&lt;package name=&quot;com.ghg.md.domain&quot; /&gt;</div><div class="line">&lt;/typeAliases&gt;</div></pre></td></tr></table></figure></p>
<p>mapper.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">&lt;mapper namespace=&quot;com.ghg.md.dao.UserMapper&quot;&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;resultMap type=&quot;UserDo&quot; id=&quot;userDo&quot;&gt;</div><div class="line">		&lt;id column=&quot;id&quot;  property=&quot;id&quot;/&gt;</div><div class="line">		&lt;result column=&quot;username&quot; property=&quot;userName&quot;/&gt;</div><div class="line">		&lt;result column=&quot;userage&quot; property=&quot;userAge&quot;/&gt;</div><div class="line">		&lt;result column=&quot;useraddress&quot;  property=&quot;userAddress&quot;/&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line"></div><div class="line">	&lt;!-- 根据ID查询用户 --&gt;</div><div class="line">	&lt;select id=&quot;selectUserByID&quot; parameterType=&quot;int&quot;	resultMap=&quot;userDo&quot;&gt;</div><div class="line">		select * from user where id=#&#123;id&#125;</div><div class="line">	&lt;/select&gt;</div><div class="line">	&lt;!-- 查询全部用户信息 --&gt;</div><div class="line">	&lt;select id=&quot;getAllUser&quot; resultMap=&quot;userDo&quot;&gt;</div><div class="line">		select * from user</div><div class="line">	&lt;/select&gt;</div><div class="line"></div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure></p>
<p>如果不配置</p>
<p><package name="com.ghg.md.domain"><br>那么resultMap type=”UserDo” 中type就要写全路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&lt;resultMap type=&quot;com.ghg.md.domain.UserDo&quot; id=&quot;userDo&quot;&gt;</div><div class="line">		&lt;id column=&quot;id&quot;  property=&quot;id&quot;/&gt;</div><div class="line">		&lt;result column=&quot;username&quot; property=&quot;userName&quot;/&gt;</div><div class="line">		&lt;result column=&quot;userage&quot; property=&quot;userAge&quot;/&gt;</div><div class="line">		&lt;result column=&quot;useraddress&quot;  property=&quot;userAddress&quot;/&gt;</div><div class="line">	&lt;/resultMap&gt;</div></pre></td></tr></table></figure></package></p>
<h4 id="完整的dao-mapper"><a href="#完整的dao-mapper" class="headerlink" title="完整的dao mapper"></a>完整的dao mapper</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.dao;</div><div class="line"></div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">import org.apache.ibatis.annotations.Param;</div><div class="line"></div><div class="line">import com.ghg.md.domain.UserDo;</div><div class="line"></div><div class="line">/**</div><div class="line"> * dao</div><div class="line">* @ClassName: UserMapper</div><div class="line">* @Description: TODO(这里用一句话描述这个类的作用)</div><div class="line">* @author 刘楠</div><div class="line">* @date 2017-2-27 上午9:25:12</div><div class="line">*</div><div class="line"> */</div><div class="line">public interface UserMapper &#123;</div><div class="line"></div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 获取所有用户</div><div class="line">	* @Title: getAllUser</div><div class="line">	* @Description: TODO(这里用一句话描述这个方法的作用)</div><div class="line">	* @param @return    设定文件</div><div class="line">	* @return List&lt;UserDo&gt;    返回类型</div><div class="line">	* @throws</div><div class="line">	 */</div><div class="line">	public List&lt;UserDo&gt; getAllUser();</div><div class="line">	</div><div class="line">	</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 根据ID查询用户</div><div class="line">	* @Title: selectUserByID</div><div class="line">	* @Description: TODO(这里用一句话描述这个方法的作用)</div><div class="line">	* @param @param id</div><div class="line">	* @param @return    设定文件</div><div class="line">	* @return UserDo    返回类型</div><div class="line">	* @throws</div><div class="line">	 */</div><div class="line">	public UserDo selectUserByID(int id);</div><div class="line">	/**</div><div class="line">	 * 根据名称模糊查询</div><div class="line">	* @Title: selectUsers</div><div class="line">	* @Description: TODO(这里用一句话描述这个方法的作用)</div><div class="line">	* @param @param username</div><div class="line">	* @param @return    设定文件</div><div class="line">	* @return List&lt;UserDo&gt;    返回类型</div><div class="line">	* @throws</div><div class="line">	 */</div><div class="line">	public List&lt;UserDo&gt; selectUsers(@Param(&quot;username&quot;)String username);</div><div class="line">	</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 添加用户</div><div class="line">	* @Title: addUser</div><div class="line">	* @Description: TODO(这里用一句话描述这个方法的作用)</div><div class="line">	* @param @param userDo    设定文件</div><div class="line">	* @return void    返回类型</div><div class="line">	* @throws</div><div class="line">	 */</div><div class="line">	public void addUser(@Param(&quot;userDo&quot;)UserDo userDo);</div><div class="line">	</div><div class="line">	</div><div class="line">	</div><div class="line">	public void updateUser(@Param(&quot;userDo&quot;)UserDo userDo);</div><div class="line">	</div><div class="line">	</div><div class="line">	public void deleteUser(@Param(&quot;id&quot;) int id);</div><div class="line">	</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h5 id="mapper-xml"><a href="#mapper-xml" class="headerlink" title="mapper.xml"></a>mapper.xml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE mapper</div><div class="line">  PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</div><div class="line">  &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</div><div class="line">&lt;mapper namespace=&quot;com.ghg.md.dao.UserMapper&quot;&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;resultMap type=&quot;com.ghg.md.domain.UserDo&quot; id=&quot;userDo&quot;&gt;</div><div class="line">		&lt;id column=&quot;id&quot; property=&quot;id&quot; /&gt;</div><div class="line">		&lt;result column=&quot;username&quot; property=&quot;userName&quot; /&gt;</div><div class="line">		&lt;result column=&quot;userage&quot; property=&quot;userAge&quot; /&gt;</div><div class="line">		&lt;result column=&quot;useraddress&quot; property=&quot;userAddress&quot; /&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line"></div><div class="line">	&lt;!-- 根据ID查询用户 --&gt;</div><div class="line">	&lt;select id=&quot;selectUserByID&quot; parameterType=&quot;int&quot; resultMap=&quot;userDo&quot;&gt;</div><div class="line">		select * from user where id=#&#123;id&#125;</div><div class="line">	&lt;/select&gt;</div><div class="line">	&lt;!-- 查询全部用户信息 --&gt;</div><div class="line">	&lt;select id=&quot;getAllUser&quot; resultMap=&quot;userDo&quot;&gt;</div><div class="line">		select * from user</div><div class="line">	&lt;/select&gt;</div><div class="line"></div><div class="line">	&lt;!-- 模糊查询 --&gt;</div><div class="line">	&lt;select id=&quot;selectUsers&quot; parameterType=&quot;String&quot; resultMap=&quot;userDo&quot;&gt;</div><div class="line">		select * from user</div><div class="line">		&lt;where&gt;</div><div class="line">			&lt;if test=&quot;username != null&quot;&gt;</div><div class="line">				username LIKE CONCAT(&apos;%&apos;,#&#123;username&#125;,&apos;%&apos;)</div><div class="line">			&lt;/if&gt;</div><div class="line">		&lt;/where&gt;</div><div class="line">	&lt;/select&gt;</div><div class="line"></div><div class="line">	&lt;!--添加用户 --&gt;</div><div class="line">	&lt;insert id=&quot;addUser&quot; parameterType=&quot;com.ghg.md.domain.UserDo&quot;&gt;</div><div class="line">		INSERT INTO</div><div class="line">		USER(username,userage,useraddress)</div><div class="line">		VALUES(#&#123;userDo.userName&#125;,#&#123;userDo.userAge&#125;,#&#123;userDo.userAddress&#125;);</div><div class="line">	&lt;/insert&gt;</div><div class="line">	&lt;!--更新用户 --&gt;</div><div class="line">	&lt;update id=&quot;updateUser&quot; parameterType=&quot;com.ghg.md.domain.UserDo&quot;&gt;</div><div class="line">		UPDATE USER SET</div><div class="line">		&lt;if test=&quot;userDo.userName!=null&quot;&gt;</div><div class="line">			username= #&#123;userDo.userName&#125;,</div><div class="line">		&lt;/if&gt;</div><div class="line">		&lt;if test=&quot;userDo.userAge!=null&quot;&gt;</div><div class="line">			userage=#&#123;userDo.userAge&#125;,</div><div class="line">		&lt;/if&gt;</div><div class="line">		&lt;if test=&quot;userDo.userAddress!=null&quot;&gt;</div><div class="line">			useraddress =#&#123;userDo.userAddress&#125;</div><div class="line">		&lt;/if&gt;</div><div class="line">		WHERE id =#&#123;userDo.id&#125;</div><div class="line">	&lt;/update&gt;</div><div class="line">	&lt;!--删除用户 --&gt;</div><div class="line">	&lt;delete id=&quot;deleteUser&quot; parameterType=&quot;int&quot;&gt;</div><div class="line">		DELETE FROM USER</div><div class="line">		&lt;where&gt;</div><div class="line">			&lt;if test=&quot;id!=null&quot;&gt;</div><div class="line">				id=#&#123;id&#125;</div><div class="line">			&lt;/if&gt;</div><div class="line">		&lt;/where&gt;</div><div class="line">	&lt;/delete&gt;</div><div class="line"></div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">UserDo insertUserDo = new UserDo();</div><div class="line">insertUserDo.setUserAddress(&quot;日本海&quot;);</div><div class="line">insertUserDo.setUserAge(32);</div><div class="line">insertUserDo.setUserName(&quot;宫本&quot;);</div><div class="line">userMapper.addUser(insertUserDo);</div><div class="line">session.commit();</div></pre></td></tr></table></figure></p>
<p>修改<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">SqlSession session = sqlSessionFactory.openSession();</div><div class="line">		UserMapper userMapper = session.getMapper(UserMapper.class);</div><div class="line">		</div><div class="line">		</div><div class="line">		UserDo userDo = userMapper.selectUserByID(6);</div><div class="line">		logger.info(&quot;查询一个用户：&#123;&#125;&quot;, userDo);</div><div class="line">		</div><div class="line">		userDo.setUserName(&quot;刀个大蛇&quot;);</div><div class="line">		userDo.setUserAddress(&quot;东京&quot;);</div><div class="line">		userDo.setUserAge(101);</div><div class="line">		userMapper.updateUser(userDo);</div><div class="line">		session.commit();</div></pre></td></tr></table></figure></p>
<p>删除</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">SqlSession session = sqlSessionFactory.openSession();</div><div class="line">		UserMapper userMapper = session.getMapper(UserMapper.class);</div><div class="line">		</div><div class="line">		</div><div class="line">		UserDo userDo = userMapper.selectUserByID(6);</div><div class="line">		logger.info(&quot;查询一个用户：&#123;&#125;&quot;, userDo);</div><div class="line">		</div><div class="line">		 userMapper.deleteUser(6);</div><div class="line">	</div><div class="line">		session.commit();</div></pre></td></tr></table></figure>
<p>增加，修改，删除 必须提交事务，否则不会写入到数据库.<br>模糊查询</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//模糊查询</div><div class="line">		List&lt;UserDo&gt; users = userMapper.selectUsers(&quot;j&quot;);</div></pre></td></tr></table></figure>
<p>写法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">1、mysql ：LIKE CONCAT(&apos;%&apos;,#&#123;empname&#125;,&apos;%&apos; ) 或者 LIKE CONCAT(&apos;%&apos;,‘$&#123;empname&#125;’,&apos;%&apos; )</div><div class="line">2、oracle：LIKE &apos;%&apos;||#&#123;empname&#125;||&apos;%&apos;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mybatis入门二-实现数据的增删改查&quot;&gt;&lt;a href=&quot;#mybatis入门二-实现数据的增删改查&quot; class=&quot;headerlink&quot; title=&quot;mybatis入门二 实现数据的增删改查&quot;&gt;&lt;/a&gt;mybatis入门二 实现数据的增删改查&lt;/h3&gt;&lt;
    
    </summary>
    
      <category term="mybatis" scheme="https://ln0491.github.io/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://ln0491.github.io/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>mybatis入门一</title>
    <link href="https://ln0491.github.io/2017/02/27/mybatis%E5%85%A5%E9%97%A8%E4%B8%80/"/>
    <id>https://ln0491.github.io/2017/02/27/mybatis入门一/</id>
    <published>2017-02-27T00:55:47.000Z</published>
    <updated>2017-02-27T02:23:08.217Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mybatis入门一"><a href="#mybatis入门一" class="headerlink" title="mybatis入门一"></a>mybatis入门一</h3><h4 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h4><p>新建MAVEN普通项目，添加依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">&lt;properties&gt;</div><div class="line">	&lt;mybatis.version&gt;3.4.2&lt;/mybatis.version&gt;</div><div class="line">	&lt;mysql.version&gt;5.1.34&lt;/mysql.version&gt;</div><div class="line">	&lt;slf4j.version&gt;1.7.23&lt;/slf4j.version&gt;</div><div class="line">	&lt;logback.verison&gt;1.2.1&lt;/logback.verison&gt;</div><div class="line">&lt;/properties&gt;</div><div class="line">	&lt;dependencies&gt;</div><div class="line">		&lt;!--mybatis --&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.mybatis&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;mybatis&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;mybatis.version&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;!--mysql --&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;mysql&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;$&#123;mysql.version&#125;&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;!-- slf4j --&gt;</div><div class="line">	&lt;dependency&gt;</div><div class="line">		&lt;groupId&gt;org.slf4j&lt;/groupId&gt;</div><div class="line">		&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;</div><div class="line">		&lt;version&gt;$&#123;slf4j.version&#125;&lt;/version&gt;</div><div class="line">	&lt;/dependency&gt;</div><div class="line">	&lt;!--logback --&gt;</div><div class="line">	&lt;dependency&gt;</div><div class="line">		&lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">		&lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</div><div class="line">		&lt;version&gt;$&#123;logback.verison&#125;&lt;/version&gt;</div><div class="line">	&lt;/dependency&gt;</div><div class="line">&lt;/dependencies&gt;</div></pre></td></tr></table></figure></p>
<p><img src="https://ln0491.github.io/img/mybatis1.png" alt="mybatis1.png"></p>
<h5 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">CREATE TABLE USER (</div><div class="line"></div><div class="line">id INT(11) PRIMARY KEY AUTO_INCREMENT,</div><div class="line">username VARCHAR(50) NOT NULL,</div><div class="line">userage INT(5) DEFAULT NULL,</div><div class="line">useraddress VARCHAR(200) DEFAULT NULL</div><div class="line">);</div><div class="line"></div><div class="line">INSERT INTO USER VALUES(NULL,&apos;summer&apos;,50,&apos;广州&apos;),(NULL,&apos;jack&apos;,25,&apos;深圳&apos;),(NULL,&apos;john&apos;,18,&apos;上海&apos;);</div></pre></td></tr></table></figure>
<h4 id="设置mybatis-配置文件-Configuration-xml，在resources目录下"><a href="#设置mybatis-配置文件-Configuration-xml，在resources目录下" class="headerlink" title="设置mybatis 配置文件:Configuration.xml，在resources目录下"></a>设置mybatis 配置文件:Configuration.xml，在resources目录下</h4><p>参考<a href="http://www.mybatis.org/mybatis-3/zh/getting-started.html" target="_blank" rel="external">http://www.mybatis.org/mybatis-3/zh/getting-started.html</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE configuration</div><div class="line">  PUBLIC &quot;-//mybatis.org//DTD Config 3.0//EN&quot;</div><div class="line">  &quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;&gt;</div><div class="line"></div><div class="line">&lt;configuration&gt;</div><div class="line">	&lt;environments default=&quot;development&quot;&gt;</div><div class="line">		&lt;environment id=&quot;development&quot;&gt;</div><div class="line">			&lt;transactionManager type=&quot;JDBC&quot; /&gt;</div><div class="line"></div><div class="line">			&lt;dataSource type=&quot;POOLED&quot;&gt;</div><div class="line">				&lt;property name=&quot;driver&quot; value=&quot;com.mysql.jdbc.Driver&quot; /&gt;</div><div class="line">				&lt;property name=&quot;url&quot; value=&quot;jdbc:mysql://127.0.0.1:3306/company&quot; /&gt;</div><div class="line">				&lt;property name=&quot;username&quot; value=&quot;root&quot; /&gt;</div><div class="line">				&lt;property name=&quot;password&quot; value=&quot;root&quot; /&gt;</div><div class="line"></div><div class="line">			&lt;/dataSource&gt;</div><div class="line">		&lt;/environment&gt;</div><div class="line">	&lt;/environments&gt;</div><div class="line">	&lt;mappers&gt;</div><div class="line">		&lt;mapper resource=&quot;org/mybatis/md/dao/UserMapper.xml&quot; /&gt;</div><div class="line">	&lt;/mappers&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<h4 id="建立与数据库对应的-java-class-以及映射文件"><a href="#建立与数据库对应的-java-class-以及映射文件" class="headerlink" title="建立与数据库对应的 java class,以及映射文件"></a>建立与数据库对应的 java class,以及映射文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.domain;</div><div class="line"></div><div class="line">public class UserDo &#123;</div><div class="line">	/**</div><div class="line">	 * 用户ID</div><div class="line">	 */</div><div class="line">	private int id;</div><div class="line">	/**</div><div class="line">	 * 用户名</div><div class="line">	 */</div><div class="line">	private String userName;</div><div class="line">	/**</div><div class="line">	 * 用户年龄</div><div class="line">	 */</div><div class="line">	private int userAge;</div><div class="line">	/**</div><div class="line">	 * 用户地址</div><div class="line">	 */</div><div class="line">	private String userAddress;</div><div class="line">	public UserDo() &#123;</div><div class="line">		super();</div><div class="line">		// TODO Auto-generated constructor stub</div><div class="line">	&#125;</div><div class="line">	</div><div class="line">	public UserDo(int id, String userName, int userAge, String userAddress) &#123;</div><div class="line">		super();</div><div class="line">		this.id = id;</div><div class="line">		this.userName = userName;</div><div class="line">		this.userAge = userAge;</div><div class="line">		this.userAddress = userAddress;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public int getId() &#123;</div><div class="line">		return id;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setId(int id) &#123;</div><div class="line">		this.id = id;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getUserName() &#123;</div><div class="line">		return userName;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setUserName(String userName) &#123;</div><div class="line">		this.userName = userName;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public int getUserAge() &#123;</div><div class="line">		return userAge;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setUserAge(int userAge) &#123;</div><div class="line">		this.userAge = userAge;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String getUserAddress() &#123;</div><div class="line">		return userAddress;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setUserAddress(String userAddress) &#123;</div><div class="line">		this.userAddress = userAddress;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public String toString() &#123;</div><div class="line">		return &quot;UserDo [id=&quot; + id + &quot;, userName=&quot; + userName + &quot;, userAge=&quot; + userAge + &quot;, userAddress=&quot; + userAddress</div><div class="line">				+ &quot;]&quot;;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>dao接口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.dao;</div><div class="line"></div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">import com.ghg.md.domain.UserDo;</div><div class="line"></div><div class="line">/**</div><div class="line"> * dao</div><div class="line">* @ClassName: UserMapper</div><div class="line">* @Description: TODO(这里用一句话描述这个类的作用)</div><div class="line">* @author 刘楠</div><div class="line">* @date 2017-2-27 上午9:25:12</div><div class="line">*</div><div class="line"> */</div><div class="line">public interface UserMapper &#123;</div><div class="line"></div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 获取所有用户</div><div class="line">	* @Title: getAllUser</div><div class="line">	* @Description: TODO(这里用一句话描述这个方法的作用)</div><div class="line">	* @param @return    设定文件</div><div class="line">	* @return List&lt;UserDo&gt;    返回类型</div><div class="line">	* @throws</div><div class="line">	 */</div><div class="line">	public List&lt;UserDo&gt; getAllUser();</div><div class="line">	</div><div class="line">	</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * 根据ID查询用户</div><div class="line">	* @Title: selectUserByID</div><div class="line">	* @Description: TODO(这里用一句话描述这个方法的作用)</div><div class="line">	* @param @param id</div><div class="line">	* @param @return    设定文件</div><div class="line">	* @return UserDo    返回类型</div><div class="line">	* @throws</div><div class="line">	 */</div><div class="line">	public UserDo selectUserByID(int id);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</div><div class="line">&lt;!DOCTYPE mapper</div><div class="line">  PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</div><div class="line">  &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</div><div class="line">&lt;mapper namespace=&quot;com.ghg.md.dao.UserMapper&quot;&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;!-- 根据ID查询用户 --&gt;</div><div class="line">	&lt;select id=&quot;selectUserByID&quot; parameterType=&quot;int&quot;</div><div class="line">		resultType=&quot;com.ghg.md.domain.UserDo&quot;&gt;</div><div class="line">		select * from user where id=#&#123;id&#125;</div><div class="line">	&lt;/select&gt;</div><div class="line">	&lt;!-- 查询全部用户信息 --&gt;</div><div class="line">	&lt;select id=&quot;getAllUser&quot; resultType=&quot;com.ghg.md.domain.UserDo&quot;&gt;</div><div class="line">		select * from user</div><div class="line">	&lt;/select&gt;</div><div class="line"></div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure>
<p><img src="https://ln0491.github.io/img/mybatis2.png" alt="mybatis2.png"></p>
<h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">package com.ghg.md.test;</div><div class="line"></div><div class="line">import java.io.IOException;</div><div class="line">import java.io.Reader;</div><div class="line">import java.util.List;</div><div class="line"></div><div class="line">import org.apache.ibatis.io.Resources;</div><div class="line">import org.apache.ibatis.session.SqlSession;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactory;</div><div class="line">import org.apache.ibatis.session.SqlSessionFactoryBuilder;</div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">import com.ghg.md.domain.UserDo;</div><div class="line"></div><div class="line">public class Test &#123;</div><div class="line"></div><div class="line">	private static SqlSessionFactory sqlSessionFactory;</div><div class="line">	private static Reader reader;</div><div class="line">	private static Logger logger = LoggerFactory.getLogger(Test.class);</div><div class="line"></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line"></div><div class="line">		try &#123;</div><div class="line"></div><div class="line">			reader = Resources.getResourceAsReader(&quot;Configuration.xml&quot;);</div><div class="line"></div><div class="line">			sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);</div><div class="line"></div><div class="line">		&#125; catch (IOException e) &#123;</div><div class="line">			e.printStackTrace();</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		SqlSession session = sqlSessionFactory.openSession();</div><div class="line"></div><div class="line">		// 查询一个用户</div><div class="line">		UserDo userDo = session.selectOne(&quot;com.ghg.md.dao.UserMapper.selectUserByID&quot;, 1);</div><div class="line">		// 查询全部用户</div><div class="line">		List&lt;UserDo&gt; list = session.selectList(&quot;com.ghg.md.dao.UserMapper.getAllUser&quot;);</div><div class="line"></div><div class="line">		logger.info(&quot;查询一个用户：&#123;&#125;&quot;, userDo);</div><div class="line">		logger.info(&quot;查询全部用户：&#123;&#125;&quot;, list);</div><div class="line">		</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结果：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">10:03:53.622 [main] INFO  com.ghg.md.test.Test- 查询一个用户：UserDo [id=1, userName=summer, userAge=50, userAddress=广州]</div><div class="line">10:03:53.625 [main] INFO  com.ghg.md.test.Test- 查询全部用户：[UserDo [id=1, userName=summer, userAge=50, userAddress=广州], UserDo [id=2, userName=jack, userAge=25, userAddress=深圳], UserDo [id=3, userName=john, userAge=18, userAddress=上海]]</div></pre></td></tr></table></figure>
<h4 id="为userDo添加别名-在configuration-xml"><a href="#为userDo添加别名-在configuration-xml" class="headerlink" title="为userDo添加别名,在configuration.xml"></a>为userDo添加别名,在configuration.xml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">&lt;!--添加别名  --&gt;</div><div class="line">	&lt;typeAliases&gt; </div><div class="line">        &lt;typeAlias alias=&quot;UserDo&quot; type=&quot;com.ghg.md.domain.UserDo&quot;/&gt; </div><div class="line">    &lt;/typeAliases&gt;</div></pre></td></tr></table></figure>
<p>mapper.xml中可以直接使用，不需要全路径<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;mapper namespace=&quot;com.ghg.md.dao.UserMapper&quot;&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;!-- 根据ID查询用户 --&gt;</div><div class="line">	&lt;select id=&quot;selectUserByID&quot; parameterType=&quot;int&quot;</div><div class="line">		resultType=&quot;UserDo&quot;&gt;</div><div class="line">		select * from user where id=#&#123;id&#125;</div><div class="line">	&lt;/select&gt;</div><div class="line">	&lt;!-- 查询全部用户信息 --&gt;</div><div class="line">	&lt;select id=&quot;getAllUser&quot; resultType=&quot;UserDo&quot;&gt;</div><div class="line">		select * from user</div><div class="line">	&lt;/select&gt;</div><div class="line"></div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mybatis入门一&quot;&gt;&lt;a href=&quot;#mybatis入门一&quot; class=&quot;headerlink&quot; title=&quot;mybatis入门一&quot;&gt;&lt;/a&gt;mybatis入门一&lt;/h3&gt;&lt;h4 id=&quot;环境搭建&quot;&gt;&lt;a href=&quot;#环境搭建&quot; class=&quot;head
    
    </summary>
    
      <category term="mybatis" scheme="https://ln0491.github.io/categories/mybatis/"/>
    
    
      <category term="mybatis" scheme="https://ln0491.github.io/tags/mybatis/"/>
    
  </entry>
  
  <entry>
    <title>logback常用配置详解</title>
    <link href="https://ln0491.github.io/2017/02/24/logback%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>https://ln0491.github.io/2017/02/24/logback常用配置详解/</id>
    <published>2017-02-24T01:55:10.000Z</published>
    <updated>2017-02-24T07:22:05.349Z</updated>
    
    <content type="html"><![CDATA[<h3 id="logback常用配置详解"><a href="#logback常用配置详解" class="headerlink" title="logback常用配置详解"></a>logback常用配置详解</h3><h4 id="什么是-logback"><a href="#什么是-logback" class="headerlink" title="什么是 logback"></a>什么是 logback</h4><p>Logback 为取代 log4j 而生.<br>Logback 由 log4j 的创立者 Ceki Gülcü 设计。以十多年设计工业级记录系统的经验为基<br>础，所创建的 logback 比现有任何记录系统更快、占用资源更少，有时差距非常大。<br>Logback 提供独特而实用的特性，比如 Marker、参数化记录语句、条件化堆栈跟踪和强<br>大的事件过滤功能。以上列出的仅仅是 logbook 实用特性的一小部分。<br>对于自身的错误报告，logback 依赖状态（Status）对象，状态对象极大地简化了故障查<br>找。你也许想在上下文中使用状态对象而不是记录。<br>Logback-core 附带了 Joran，Joran 是个强大的、通用的配置系统，你可以在自己的项目<br>里使用 Joran 以获得巨大的作用</p>
<h4 id="第一步集成"><a href="#第一步集成" class="headerlink" title="第一步集成"></a>第一步集成</h4><p>Logback-classic 依赖 slf4j-api.jar 和 logback-core.jar。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</div><div class="line">	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line">	&lt;groupId&gt;com.ghg&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;logback&lt;/artifactId&gt;</div><div class="line">	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;dependencies&gt;</div><div class="line">		&lt;!--slf4j --&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.slf4j&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;slf4j-api&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;1.7.23&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;!-- logback --&gt;</div><div class="line">		&lt;!-- classic会自动引入core --&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;logback-classic&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;1.2.1&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;!--非必需  --&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;logback-core&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;1.2.1&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;!--非必需  --&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;ch.qos.logback&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;logback-access&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;1.2.1&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line">	&lt;/dependencies&gt;</div><div class="line">	&lt;build /&gt;</div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure></p>
<p>简单输出<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">package com.ghg.logback.demo1;</div><div class="line"></div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">public class HelloWorld &#123;</div><div class="line">	//声明org.slf4j.Logger 通过工厂获取</div><div class="line">	private static final Logger logger = LoggerFactory.getLogger(HelloWorld.class);</div><div class="line">	</div><div class="line">	public static void main(String[] args) &#123;</div><div class="line">		</div><div class="line">		logger.debug(&quot;Hello ,World!.&quot;);</div><div class="line">		logger.info(&quot;Hello ,World!.&quot;);</div><div class="line">		logger.warn(&quot;Hello ,World!.&quot;);</div><div class="line">		logger.error(&quot;Hello ,World!.&quot;);</div><div class="line">		</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>SLF4J API 定义的 Logger 类和 LoggerFactory 类，更明确地说是<br>定义在 org.slf4j 包里的两个类<br>结果:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">10:05:08.086 [main] DEBUG com.ghg.logback.demo1.HelloWorld - Hello ,World!.</div><div class="line">10:05:08.089 [main] INFO com.ghg.logback.demo1.HelloWorld - Hello ,World!.</div><div class="line">10:05:08.089 [main] WARN com.ghg.logback.demo1.HelloWorld - Hello ,World!.</div><div class="line">10:05:08.089 [main] ERROR com.ghg.logback.demo1.HelloWorld - Hello ,World!.</div></pre></td></tr></table></figure></p>
<p>Logback 可以通过内置的状态系统来报告其内部状态。通过 StatusManager 组件可以访<br>问 logback 生命期内发生的重要事件。目前，我们调用 StatusPrinter 类的 print()方法来打印<br>logback 的内部状态。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">package com.ghg.logback.demo1;</div><div class="line"></div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">import ch.qos.logback.classic.LoggerContext;</div><div class="line">import ch.qos.logback.core.util.StatusPrinter;</div><div class="line"></div><div class="line">public class HelloWorld &#123;</div><div class="line">	//声明org.slf4j.Logger 通过工厂获取</div><div class="line">	private static final Logger logger = LoggerFactory.getLogger(HelloWorld.class);</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * The main method.</div><div class="line">	 *</div><div class="line">	 * @param args the arguments</div><div class="line">	 */</div><div class="line">	public static void main(String[] args) &#123;</div><div class="line">		LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();</div><div class="line">		logger.debug(&quot;Hello ,World!.&quot;);</div><div class="line">		</div><div class="line">		logger.info(&quot;Hello ,World!.&quot;);</div><div class="line">		</div><div class="line">		logger.warn(&quot;Hello ,World!.&quot;);</div><div class="line">		</div><div class="line">		logger.error(&quot;Hello ,World!.&quot;);</div><div class="line">	</div><div class="line">		StatusPrinter.print(loggerContext);</div><div class="line">		</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">10:09:16.054 [main] DEBUG com.ghg.logback.demo1.HelloWorld - Hello ,World!.</div><div class="line">10:09:16.056 [main] INFO com.ghg.logback.demo1.HelloWorld - Hello ,World!.</div><div class="line">10:09:16.056 [main] WARN com.ghg.logback.demo1.HelloWorld - Hello ,World!.</div><div class="line">10:09:16.056 [main] ERROR com.ghg.logback.demo1.HelloWorld - Hello ,World!.</div><div class="line">10:09:16,026 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]</div><div class="line">10:09:16,026 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]</div><div class="line">10:09:16,026 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.xml]</div><div class="line">10:09:16,029 |-INFO in ch.qos.logback.classic.BasicConfigurator@557485ac - Setting up default configuration.</div></pre></td></tr></table></figure></p>
<p>结构:</p>
<ul>
<li>第一个字段是自程序启动以来的逝去时间，单位是毫秒。</li>
<li>第二个地段发出记录请求的线程。</li>
<li>第三个字段是记录请求的级别。</li>
<li>第四个字段是与记录请求关联的 logger 的名称。</li>
<li>“-”之后是请求的消息文字。</li>
</ul>
<p>Logback 说它没有找到配置文件 logback-test.xml 、logback.groovy和 logback.xml，于是用默<br>认策略进行配置，即用一个基本的 ConsoleAppender。Appender 类可被视为输出目的地的。<br>Appender 包含许多不同类型的目的地，包括控制台、文件、Syslog、TCP 套接字、JMS 和<br>其他。用户可以很容易地自定义 Appender。</p>
<h4 id="在应程序里启用记录的三个必需步骤如下"><a href="#在应程序里启用记录的三个必需步骤如下" class="headerlink" title="在应程序里启用记录的三个必需步骤如下"></a>在应程序里启用记录的三个必需步骤如下</h4><ol>
<li>配置 logback 环境。引入依赖，JAR之类</li>
<li><p>在每个需要执行记录的类里，调用 org.slf4j.LoggerFactory 类的 getLogger()方法获<br>取一个 Logger 实例，以当前类名或类本身作为参数。</p>
</li>
<li><p>调用取得的 logger 实例的打印方法，即 debug()、info()、warn()和 error()，把记录<br>输出到配置里的各 appender。</p>
</li>
</ol>
<h4 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h4><h5 id="logback-的体系结构"><a href="#logback-的体系结构" class="headerlink" title="logback  的体系结构"></a>logback  的体系结构</h5><p>Logback 的基本结构充分通用，可应用于各种不同环境。目前，logback 分为三个模块：<br>Core、Classic 和 Access<br>Core模块是其他两个模块的基础。Classic 模块扩展了core模块。Classic 模块相当于 log4j<br>的显著改进版。Logback-classic 直接实现了 SLF4J API，因此你可以在 logback 与其他记录<br>系统如 log4j 和 java.util.logging (JUL)之间轻松互相切换。Access 模块与 Servlet 容器集成，<br>提供 HTTP 访问记录功能</p>
<p>这里，“logback”代表 logback-classic 模块。引入时只需要引入这个就可以使用logback了</p>
<h5 id="Logger-、Appender-和-和-Layout"><a href="#Logger-、Appender-和-和-Layout" class="headerlink" title="Logger 、Appender 和 和 Layout"></a>Logger 、Appender 和 和 Layout</h5><p>Logback 建立于三个主要类之上：Logger、Appender 和 Layout。这三种组件协同工作，<br>使开发者可以按照消息类型和级别来记录消息，还可以在程序运行期内控制消息的输出格式<br>和输出目的地。<br>Logger类是logback-classic 模块的一部分，而Appender和Layout接口来自logback-core。<br>作为一个多用途模块，logback-core 不包含任何 logger。</p>
<p>Logger 是命名了的实体:<br>如果 logger  的名称带上一个点号后是另外一个 logger  的名称的前缀，那么， 前者 就被<br>称为 后者的祖先。 如果 logger  与代 其后代 logger  之间没有其他祖先， 那么，前者就被称为子<br>logger  之 父。<br>比如，名为“com.foo””的 logger 是名为“com.foo.Bar”之父。同理， “java”是“java.util””<br>之父，也是“java.util.Vector”的祖先。<br>根 logger 位于 logger 等级的最顶端，它的特别之处是它是每个层次等级的共同始祖。<br>如同其他各 logger，根 logger 可以通过其名称取得，如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">Logger logger =LoggerFactory.getLogger(org.slf4j.Logger.ROOT_LOGGER_NAME);</div><div class="line"></div><div class="line">logger.error(logger.getName());</div></pre></td></tr></table></figure></p>
<p>结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">10:17:54.385 [main] ERROR ROOT - ROOT</div></pre></td></tr></table></figure></p>
<p>其他所有 logger 也通过 org.slf4j.LoggerFactory 类的静态方法 getLogger 取得。getLogger<br>方法以 logger 名称为参数</p>
<h5 id="有效-级别（Level-）-即-级别-继承"><a href="#有效-级别（Level-）-即-级别-继承" class="headerlink" title="有效 级别（Level ） 即 级别 继承"></a>有效 级别（Level ） 即 级别 继承</h5><p>Logger 可以被分配级别。级别包括：TRACE、DEBUG、INFO、WARN 和 ERROR，定<br>义于 ch.qos.logback.classic.Level 类。注意在 logback 里，Level 类是 final 的，不能被继承，<br>Marker 对象提供了更灵活的方法。</p>
<p>为确保所有 logger 都能够最终继承一个级别，根 logger 总是有级别，默认情况下，这<br>个级别是 DEBUG</p>
<p>logger L 的有效级别 等于其层次等级里的第一个非 null  级别， 顺序是从 从 L 开始， 向上<br>直至根 根 logger</p>
<h4 id="logback配置"><a href="#logback配置" class="headerlink" title="logback配置"></a>logback配置</h4><p>Logback 可以通过编程式配置，或用 XML 格式的配置文件进行配置</p>
<p>Logback 采取下面的步骤进行自我配置：</p>
<ol>
<li>尝试在 classpath 下查找文件 logback-test.xml；</li>
<li>如果文件不存在，则查找文件 logback.xml；</li>
<li>如果两个文件都不存在，logback 用 BasicConfigurator 自动对自己进行配置，这会<br>导致记录输出到控制台。<br>第三步也是最后一步是为了在缺少配置文件时提供默认（但基本的）记录功能</li>
</ol>
<h5 id="自动配置"><a href="#自动配置" class="headerlink" title="自动配置"></a>自动配置</h5><p>不需要写配置文件直接使用，如开头的例子，日志会输出到控制台<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">package com.ghg.logback.demo1;</div><div class="line"></div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">import ch.qos.logback.classic.LoggerContext;</div><div class="line">import ch.qos.logback.core.util.StatusPrinter;</div><div class="line"></div><div class="line">public class HelloWorld &#123;</div><div class="line">	//声明org.slf4j.Logger 通过工厂获取</div><div class="line">	private static final Logger logger = LoggerFactory.getLogger(HelloWorld.class);</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * The main method.</div><div class="line">	 *</div><div class="line">	 * @param args the arguments</div><div class="line">	 */</div><div class="line">	public static void main(String[] args) &#123;</div><div class="line">		LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();</div><div class="line">		logger.debug(&quot;Hello ,World!.&quot;);</div><div class="line">		</div><div class="line">		logger.info(&quot;Hello ,World!.&quot;);</div><div class="line">		</div><div class="line">		logger.warn(&quot;Hello ,World!.&quot;);</div><div class="line">		</div><div class="line">		logger.error(&quot;Hello ,World!.&quot;);</div><div class="line">	</div><div class="line">		StatusPrinter.print(loggerContext);</div><div class="line">		</div><div class="line">		Logger logger =LoggerFactory.getLogger(org.slf4j.Logger.ROOT_LOGGER_NAME);</div><div class="line">		</div><div class="line">		logger.error(logger.getName());</div><div class="line">		</div><div class="line"></div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h5 id="logback-test-xml-或-或-logback-xml-自动-配置"><a href="#logback-test-xml-或-或-logback-xml-自动-配置" class="headerlink" title="logback-test.xml 或 或 logback.xml  自动 配置"></a>logback-test.xml 或 或 logback.xml  自动 配置</h5><p>如果 classpath 里有 logback-test.xml 或 logback.xml，logback 会试图用它进<br>行自我配置,在resources目录下，建立logback.xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;configuration&gt;</div><div class="line">	&lt;!--指定输出目的地为控制台 ch.qos.logback.core.ConsoleAppender name可以随意写 --&gt;</div><div class="line">	&lt;appender name=&quot;STDOUT&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</div><div class="line">		&lt;!--指定输出规则 --&gt;</div><div class="line">		&lt;encoder&gt;</div><div class="line">			&lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125;- %msg%n</div><div class="line">			&lt;/pattern&gt;</div><div class="line">		&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line">	&lt;!--过滤输出级别，在这个之上的才会输出  --&gt;</div><div class="line">	&lt;root level=&quot;info&quot;&gt;</div><div class="line">		&lt;appender-ref ref=&quot;STDOUT&quot; /&gt;</div><div class="line">	&lt;/root&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p>代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">package com.ghg.logback.demo1;</div><div class="line"></div><div class="line">import org.slf4j.Logger;</div><div class="line">import org.slf4j.LoggerFactory;</div><div class="line"></div><div class="line">import ch.qos.logback.classic.LoggerContext;</div><div class="line">import ch.qos.logback.core.util.StatusPrinter;</div><div class="line"></div><div class="line">public class HelloWorld1 &#123;</div><div class="line">	//声明org.slf4j.Logger 通过工厂获取</div><div class="line">	private static final Logger logger = LoggerFactory.getLogger(HelloWorld1.class);</div><div class="line">	</div><div class="line">	/**</div><div class="line">	 * The main method.</div><div class="line">	 *</div><div class="line">	 * @param args the arguments</div><div class="line">	 */</div><div class="line">	public static void main(String[] args) &#123;</div><div class="line">	</div><div class="line">		LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();</div><div class="line">		logger.debug(&quot;Hello ,World!.&quot;);</div><div class="line">		</div><div class="line">		logger.info(&quot;Hello ,World!.&quot;);</div><div class="line">		</div><div class="line">		logger.warn(&quot;Hello ,World!.&quot;);</div><div class="line">		</div><div class="line">		logger.error(&quot;Hello ,World!.&quot;);</div><div class="line">	</div><div class="line">		</div><div class="line">		StatusPrinter.print(loggerContext);</div><div class="line">	</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>结果<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">10:39:11.621 [main] INFO  com.ghg.logback.demo1.HelloWorld1- Hello ,World!.</div><div class="line">10:39:11.623 [main] WARN  com.ghg.logback.demo1.HelloWorld1- Hello ,World!.</div><div class="line">10:39:11.623 [main] ERROR com.ghg.logback.demo1.HelloWorld1- Hello ,World!.</div><div class="line">.....省略</div><div class="line">10:41:50,877 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]</div><div class="line">10:41:50,877 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]</div><div class="line">10:41:50,877 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/D:/myeclipsework/logback/target/classes/logback.xml]</div><div class="line">10:41:50,925 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set</div><div class="line">10:41:50,926 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]</div><div class="line">10:41:50,932 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]</div><div class="line">10:41:50,937 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property</div><div class="line">10:41:50,974 |-INFO in ch.qos.logback.classic.joran.action.RootLoggerAction - Setting level of ROOT logger to INFO</div><div class="line">10:41:50,974 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]</div><div class="line">10:41:50,975 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.</div><div class="line">10:41:50,976 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@14874647 - Registering current configuration as safe fallback point</div></pre></td></tr></table></figure></p>
<p>发现只有INFO之上的才输出，DEBUG并没有输出,同时也提示找到了Found resource [logback.xml]</p>
<p>可以不用从代码里调用 StatusPrinter，而是在配置文件里进行相关配置，即使没有出现<br>错误。方法是，设置 configuration 元素的 debug 属性为 true。请注意 debug 属性只与状态数<br>据有关，它不影响 logback 的配置，更不会影响记录级别</p>
<h5 id="debug模式，"><a href="#debug模式，" class="headerlink" title="debug模式，"></a>debug模式，</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;configuration debug=&quot;true&quot;&gt;</div></pre></td></tr></table></figure>
<p>加个这段就不需要使用StatusPrinter进行打印了<br>把 configuration 元素的 debug 属性设为 true 后，会输出状态信息，但是前提是：</p>
<ol>
<li>找到了配置文件；</li>
<li>配置文件是格式化良好的 XML</li>
</ol>
<h5 id="配置文件修改后自动重新加载"><a href="#配置文件修改后自动重新加载" class="headerlink" title="配置文件修改后自动重新加载"></a>配置文件修改后自动重新加载</h5><p>如果设置成自动重新加载，logback-classic 会扫描配置文件里的变化，并且当发生变化<br>后进行重新配置。设置访方法是设 configuration 元素的 scan 属性为 true。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;configuration debug=&quot;true&quot; scan=&quot;true&quot;&gt;</div><div class="line">...</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p>默认情况下，每隔一分钟扫描一次。configuration 元素的 scanPeriod 属性控制扫描周期，<br>其值可以带时间单位，包括：milliseconds、seconds、minutes 和 hours。<br>指定不同的扫描周期<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;configuration debug=&quot;true&quot; scan=&quot;true&quot; scanPeriod=&quot;30 seconds&quot;&gt;</div><div class="line">...</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure></p>
<p>如果没写明时间单位，则默认为毫秒</p>
<h5 id="查看状态消息"><a href="#查看状态消息" class="headerlink" title="查看状态消息"></a>查看状态消息</h5><p>Logback 把内部数据放在一个 StatusManager 对象里，并通过 LoggerContext 访问<br>StatusManager 通过 logback 上下文来访问所有数据对象。为把内存占用保持在合理的范<br>围内，默认的 StatusManager 实现将状态消息按头和尾两部分存储。头部存储开始的 H 条状<br>态消息，尾部存储后面的 T 条消息。现在的 H=T=150，将来或许会改变</p>
<p>Logback-classic 带了一个叫 ViewStatusMessagesServlet 的 Servlet，它以 HTML 表格的格<br>式打印与当前 LoggerContext 关联的 StatusManager 的内容</p>
<p><img src="https://ln0491.github.io/img/logbackstatuslook.png" alt="logbackstatuslook.png"></p>
<p>要加到自己的 web 应用程序里，可以在 WEB-INF/web.xml 里添加如下内容<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;servlet&gt;</div><div class="line">		&lt;servlet-name&gt;ViewStatusMessages&lt;/servlet-name&gt;</div><div class="line">		&lt;servlet-class&gt;ch.qos.logback.classic.ViewStatusMessagesServlet&lt;/servlet-class&gt;</div><div class="line">	&lt;/servlet&gt;</div><div class="line">	&lt;servlet-mapping&gt;</div><div class="line">		&lt;servlet-name&gt;ViewStatusMessages&lt;/servlet-name&gt;</div><div class="line">		&lt;url-pattern&gt;/lbClassicStatus&lt;/url-pattern&gt;</div><div class="line">	&lt;/servlet-mapping&gt;</div></pre></td></tr></table></figure></p>
<p>访问地址是 <a href="http://host/yourWebapp/lbClassicStatus" target="_blank" rel="external">http://host/yourWebapp/lbClassicStatus</a></p>
<h5 id="配置文件语法"><a href="#配置文件语法" class="headerlink" title="配置文件语法"></a>配置文件语法</h5><p>Logback 配置文件的语法非常灵活。正因为灵活，所以无法用 DTD 或 XML schema 进<br>行定义。尽管如此，可以这样描述配置文件的基本结构：以<configuration>开头，后面有零<br>个或多个<appender>元素，有零个或多个<logger>元素，有最多一个<root>元素。如下图所<br>示：</root></logger></appender></configuration></p>
<p><img src="https://ln0491.github.io/img/logbackconfig.png" alt="logbackconfig.png"></p>
<h6 id="标记名大小写敏感"><a href="#标记名大小写敏感" class="headerlink" title="标记名大小写敏感"></a>标记名大小写敏感</h6><p>从 logback 0.9.17 版起，标记名不区分大小些。比如，<logger>、<logger>和<logger><br>都是合法元素且表示同一个意思。按照隐式规则，标记名除了首字母外要区分大小写。因此，</logger></logger></logger></p>
<p><xyz>与<xyz>等价，但不等价于<xyz>。隐式规则一般遵循 Java 世界里常用的驼峰命名规<br>则。因为很难确定一个标记什么时候与显式动作相关，什么时候又与隐式动作相关，所以很<br>难说 XML 标记是否是大小写敏感。如果你不确定标记名的大小写，就用驼峰命名法，基本<br>不会错。</xyz></xyz></xyz></p>
<h6 id="配置logger或-元素"><a href="#配置logger或-元素" class="headerlink" title="配置logger或 元素"></a>配置logger或<logger> 元素</logger></h6><p>Logger 是用<logger>元素配置的。<logger>元素有且仅有一个 name 属性、一个可选的<br>level 属性和一个可选的 additivity 属性。<br>Level 属性的值大小写无关，其值为下面其中一个字符串：TRACE、DEBUG、INFO、<br>WARN、ERROR、ALL 和 OFF。还可以是一个特殊的字符串“INHERITED”或其同义词<br>“NULL”，表示强制继承上级的级别。</logger></logger></p>
<p><logger>元素可以包含零个或多个<appender-ref>元素，表示这个 appender 会被添加到<br>该 logger。强调一下，每个用<logger>元素声明的 logger，首先会移除所有 appender，然后<br>才添加引用了的 appender，所以如果 logger 没有引用任何 appender，就会失去所有 appender</logger></appender-ref></logger></p>
<p>####### 配置根logger或<root> 元素</root></p>
<p><root>元素配置根 logger。该元素有一个 level 属性。没有 name 属性，因为已经被命名<br>为“ROOT”。<br>Level 属性的值大小写无关，其值为下面其中一个字符串：TRACE、DEBUG、INFO、<br>WARN、ERROR、ALL 和 OFF。注意不能设置为“INHERITED” 或“NULL”。</root></p>
<p><logger>元素可以包含零个或多个<appender-ref>元素。与<logger>元素类似，声明<root><br>元素后，会先关闭然后移除全部当前 appender，只引用声明了的 appender。如果 root 元素没<br>有引用任何 appender，就会失去所有 appender</root></logger></appender-ref></logger></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;configuration debug=&quot;true&quot; scan=&quot;true&quot; scanPeriod=&quot;30 seconds&quot;&gt;</div><div class="line">	&lt;!--指定输出目的地为控制台 ch.qos.logback.core.ConsoleAppender name可以随意写 --&gt;</div><div class="line">	&lt;appender name=&quot;STDOUT&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</div><div class="line">		&lt;!--指定输出规则 --&gt;</div><div class="line">		&lt;encoder&gt;</div><div class="line">			&lt;pattern&gt;%d&#123;HH:mm:ss.SSS&#125; [%thread] %-5level %logger&#123;36&#125;- %msg%n</div><div class="line">			&lt;/pattern&gt;</div><div class="line">		&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line">	&lt;logger name=&quot;org.springframework&quot; level=&quot;debug&quot; /&gt;</div><div class="line">	&lt;logger name=&quot;org.springframework.jdbc&quot; level=&quot;warn&quot; additivity=&quot;false&quot;/&gt;</div><div class="line">	&lt;!--过滤输出级别，在这个之上的才会输出  --&gt;</div><div class="line">	&lt;root level=&quot;info&quot;&gt;</div><div class="line">		&lt;appender-ref ref=&quot;STDOUT&quot; /&gt;</div><div class="line">	&lt;/root&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>
<p>#######  配置Appender<br>Appender 用<appender>元素配置，该元素必要属性 name 和 class。<br>name 属性指定 appender 的名称，class 属性指定 appender 类的全限定名。</appender></p>
<p><appender>元素可以包含零个或多个<layout>元素、零个或多个<encoder>元素和零个或<br>多个<filter>元素。除了这三个常用元素之外，还可以包含 appender 类的任意数量的 javabean<br>属性。</filter></encoder></layout></appender></p>
<p><layout>元素的 class 属性是必要的，表示将被实例化的 layout 类的全限定名。和</layout></p>
<p><appender>元素一样， <layout>元素可以包含 layout 的的 javabean 属性。因为太常用了，所<br>以当当 layout 是 PatternLayout 时，可以省略 class 属性</layout></appender></p>
<p><encoder>元素 class 属性是必要的，表示将被实例化的 encoder 类的全限定名。因为太<br>常用了，所以当当 encoder 是 PatternLayoutEncoder 时，可以省略 class 属性</encoder></p>
<p>记录输出到多个 appender 很简单，先定义各种 appender，然后在 logger 里进行引用，<br>就行了</p>
<h6 id="设置上下文名称"><a href="#设置上下文名称" class="headerlink" title="设置上下文名称"></a>设置上下文名称</h6><p>每个 logger 都关联到 logger 上下文。默认情况下，logger 上下文名为“default”。但是<br>你可以借助配置指令<contextname>设置成其他名字。注意一旦设置 logger 上下文名称后，<br>不能再改。设置上下文名称后，可以方便地区分来自不同应用程序的记录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;!-- 上下文建议为应用名称 --&gt;</div><div class="line">&lt;contextName&gt;logback&lt;/contextName&gt;</div></pre></td></tr></table></figure></contextname></p>
<h6 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;!--属性  --&gt;</div><div class="line">	&lt;property name=&quot;log_base&quot; value=&quot;/home/datas/logs/logback&quot; /&gt;</div><div class="line"></div><div class="line">	&lt;appender name=&quot;FILE&quot; class=&quot;ch.qos.logback.core.FileAppender&quot;&gt;</div><div class="line">		&lt;file&gt;$&#123;log_base&#125;/myApp.log&lt;/file&gt;</div><div class="line">		&lt;encoder&gt;</div><div class="line">			&lt;pattern&gt;%msg%n&lt;/pattern&gt;</div><div class="line">		&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line">&lt;!--过滤输出级别，在这个之上的才会输出 --&gt;</div><div class="line">	&lt;root level=&quot;info&quot;&gt;</div><div class="line">		&lt;appender-ref ref=&quot;FILE&quot; /&gt;</div><div class="line">	&lt;/root&gt;</div></pre></td></tr></table></figure>
<p>属性引用属性文件propertites<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;property file=&quot;src/main/java/chapters/configuration/variables1.properties&quot; /&gt;</div></pre></td></tr></table></figure></p>
<p>属性引用资源文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;property resource=&quot;resource1.properties&quot; /&gt;</div></pre></td></tr></table></figure></p>
<p>文件包括<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;include file=&quot;src/main/java/chapters/configuration/includedConfig.xml&quot; /&gt;</div></pre></td></tr></table></figure></p>
<h4 id="Appender"><a href="#Appender" class="headerlink" title="Appender"></a>Appender</h4><h5 id="什么是Appender"><a href="#什么是Appender" class="headerlink" title="什么是Appender"></a>什么是Appender</h5><p>Appender 是 负 责 写 记 录 事 件 的 组 件 。 Appender 必 须 实 现 接 口”ch.qos.logback.core.Appender”<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">package ch.qos.logback.core;</div><div class="line">import ch.qos.logback.core.spi.ContextAware;</div><div class="line">import ch.qos.logback.core.spi.FilterAttachable;</div><div class="line">import ch.qos.logback.core.spi.LifeCycle;</div><div class="line">public interface Appender&lt;E&gt; extends LifeCycle, ContextAware,</div><div class="line">FilterAttachable &#123;</div><div class="line">public String getName();</div><div class="line">public void setName(String name);</div><div class="line">void doAppend(E event);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Appender 接口里的多数方法都是 getter 和 setting。值得注意的是 doAppend()方法，它唯<br>一的参数是类型E的对象。类型E的实际类型视 logback模块的不同而不同。在 logback-classic<br>模块里，E 可能是“ILoggingEvent”类型；在 logback-access 模块里，E 可能是“AccessEvent”<br>类型。doAppend()方法也许是 logback 框架里最重要的方法，它负责以适当的格式将记录事<br>件输出到合适的设备。</p>
<p>Appender 是被命名的实体。因为有名字，所以能被引用。Appender 接口扩展了<br>FilterAttachable 接口，因此 appender 实例可被关联一个或多个过滤器</p>
<p>Appender 是最终负责输出记录事件的组件。然而，它们可以把实际格式化的任务委托<br>给Layout或Encoder对象。每个layout/encoder都关联到一个且仅一个appender。有些appender<br>有内置的或固定的事件格式，因此它们不需要也没有 layout/encoder。例如，SocketAppender<br>在发送记录事件之前只是简单地对其进行序列化。</p>
<h5 id="AppenderBase"><a href="#AppenderBase" class="headerlink" title="AppenderBase"></a>AppenderBase</h5><p>类 ch.qos.logback.core.AppenderBase 是实现了 Appender 接口的抽象类。AppenderBase<br>提供所有 appender 共享的基本功能，比如设置/获取名字的方法，其活动状态和过滤器。<br>AppenderBase 是 loback 里所有 appender 的超类。尽管是抽象类，AppenderBase 实际上实现<br>了 Appender 接口的 doAppend()方法</p>
<h5 id="OutputStreamAppender"><a href="#OutputStreamAppender" class="headerlink" title="OutputStreamAppender"></a>OutputStreamAppender</h5><p>OutputStreamAppender 把事件添加到 java.io.OutputStream。该类提供其他 appender 所需的基本服务。用户通常不直接实例化 OutputStreamAppender 对象。由于 java.io.OutputStream<br>一般无法被方便地映射到字符串，所以无法在配置文件里指定目标 OutputStream 对象。简<br>而言之，你不能在配置文件里配置 OutputStreamAppender。但这不是说 OutputStreamAppender<br>没有配置属性。它的属性如下。<br>属性名          类型              描述<br>encoder  Encoder  决定把事件写入到底层 OutputStreamAppender 的方式。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;encoder&gt;</div><div class="line">	&lt;pattern&gt;%date %-5level - %msg%n&lt;/pattern&gt;</div><div class="line">	&lt;charset&gt;UTF-8&lt;/charset&gt;</div><div class="line">&lt;/encoder&gt;</div></pre></td></tr></table></figure>
<p>OutputStreamAppender 是另外三个 appender 的超类：ConsoleAppender、FileAppender<br>及其直接子类 RollingFileAppender</p>
<p><img src="https://ln0491.github.io/img/outpustreamappender.png" alt="outpustreamappender.png"></p>
<h5 id="ConsoleAppender"><a href="#ConsoleAppender" class="headerlink" title="ConsoleAppender"></a>ConsoleAppender</h5><p>ConsoleAppender 把事件添加到控制台，更准确地说是 System.out 或 System.err，默认为前者。ConsoleAppender 按照用户指定的 encoder 对事件进行格式化。System.out 和 System.err都是 java.io.PrintStream 类型，因此，它们被包裹在有缓冲 I/O 操作的 OutputStreamWriter 里.</p>
<ul>
<li>encoder  Encoder  参见 OutputStreamAppender 属性</li>
<li>target  String字 符 串 “ System.out ” 或 “ System.err ”。 默 认 为“System.out”。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">	&lt;appender name=&quot;STDOUT&quot;class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</div><div class="line"></div><div class="line">	&lt;encoder&gt;</div><div class="line">		&lt;pattern&gt;%-4relative [%thread] %-5level - %msg%n&lt;/pattern&gt;</div><div class="line">	&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line">	&lt;root level=&quot;DEBUG&quot;&gt;</div><div class="line">		&lt;appender-ref ref=&quot;STDOUT&quot; /&gt;</div><div class="line">	&lt;/root&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>
<h5 id="FileAppender"><a href="#FileAppender" class="headerlink" title="FileAppender"></a>FileAppender</h5><p>FileAppender 是 OutputStreamAppender 的子类，把记录事件添加到文件。目标文件通过<br>File 选项指定。如果文件已经存在，则根据 Append 属性追加或清空文件</p>
<ul>
<li>append  boolean  如果 true，事件被追加到现存文件尾部。如果 false，清空现存文件。默认为 true。</li>
<li>encoder  Encoder  参见 OutputStreamAppender 属性</li>
<li>File  String  被写入的文件名。如果文件不存在，则创建之。没有默认值。如果文件的父目录不存在，FileAppender 会自动创建各<br>级不存在的目录。</li>
<li>prudent  boolean<br>在 prudent 模式下，FileAppender 将安全地写入指定文<br>件，即使其他 FileAppender 实例运行在不同 JVM 上，<br>比如运行在不同主机上。<br>prudent 默认值为 false。<br>prudent 模式意味着 Append 属性自动设为 true。<br>prudent 模式写记录事件时，大约消耗非 prudent 模式的<br>三倍。在一台“普通”的 PC 上，向本地硬盘写文件，<br>写一条记录事件，非 prudent 模式需要 10 微妙，prudent<br>模式需要 30 微妙。也就是非 prudent 模式每秒记录<br>100000 条事件，prudent 模式每秒 33000 条。<br>不同 JVM 写入同一个文件时，prudent 模式高效地排<br>列 I/O 操作。所以，由于访问文件的 JVM 的数量增加，<br>导致每次 I/O 操作都会有延迟。只要 I/O 操作的总数大<br>约是 20 次记录请求/秒，就可以忽略对性能的影响。每<br>秒 100 次或等多次 I/O 操作会影响性能，此时应当避免<br>prudent 模式。<br>prudent 模式可以与 RollingFileAppender 联合使用，但<br>有些限制。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">	&lt;appender name=&quot;FILE&quot; class=&quot;ch.qos.logback.core.FileAppender&quot;&gt;</div><div class="line">		&lt;file&gt;testFile.log&lt;/file&gt;</div><div class="line">		&lt;append&gt;true&lt;/append&gt;</div><div class="line"></div><div class="line">	&lt;encoder&gt;</div><div class="line">		&lt;pattern&gt;%-4relative [%thread] %-5level %logger&#123;35&#125; - %msg%n&lt;/pattern&gt;</div><div class="line">	&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line">	&lt;root level=&quot;DEBUG&quot;&gt;</div><div class="line">		&lt;appender-ref ref=&quot;FILE&quot; /&gt;</div><div class="line">	&lt;/root&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>
<h5 id="文件名时间戳"><a href="#文件名时间戳" class="headerlink" title="文件名时间戳"></a>文件名时间戳</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line"></div><div class="line">		&lt;timestamp key=&quot;bySecond&quot; datePattern=&quot;yyyyMMdd&apos;T&apos;HHmmss&quot; /&gt;</div><div class="line">	&lt;appender name=&quot;FILE&quot; class=&quot;ch.qos.logback.core.FileAppender&quot;&gt;</div><div class="line"></div><div class="line">		&lt;file&gt;log-$&#123;bySecond&#125;.txt&lt;/file&gt;</div><div class="line">		&lt;encoder&gt;</div><div class="line">		&lt;pattern&gt;%logger&#123;35&#125; - %msg%n&lt;/pattern&gt;</div><div class="line"></div><div class="line">		&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line">	&lt;root level=&quot;DEBUG&quot;&gt;</div><div class="line">		&lt;appender-ref ref=&quot;FILE&quot; /&gt;</div><div class="line">	&lt;/root&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>
<p>timestamp 元素有两个属性：key 和 datePattern。属性 key 是变量名，对余下的配置元素<br>可用。属性 datePattern 表示把当前时间（解析配置文件的时间）转换成字符串时使用的日期<br>模式，遵从 java.text.SimpleDateFormat 里的约定</p>
<h5 id="RollingFileAppender"><a href="#RollingFileAppender" class="headerlink" title="RollingFileAppender"></a>RollingFileAppender</h5><p>RollingFileAppender 继承 FileAppender，能够滚动记录文件。例如，RollingFileAppender<br>能先记录到文件“log.txt”，然后当符合某个条件时，变成记录到其他文件。<br>RollingFileAppender 有两个与之互动的重要子组件。第一个是 RollingPolicy，负责滚动。<br>第二个是 TriggeringPolicy，决定是否以及何时进行滚动。所以，RollingPolicy 负责“什么”，<br>TriggeringPolicy 负责“何时”。<br>要想 RollingFileAppender 起作用，必须同时设置 RollingPolicy 和 TriggeringPolicy。不<br>过，如果 RollingPolicy 也实现了 TriggeringPolicy 接口，那么只需要设置 RollingPolicy</p>
<ul>
<li>file  String  参加 FileAppender 属性</li>
<li>append  boolean  参加 FileAppender 属性</li>
<li>encoder  Encoder  参见 OutputStreamAppender 属性</li>
<li>rollingPolicy  RollingPolicy  当发生滚动时，决定 RollingFileAppender 的行为。</li>
<li>triggeringPolicy  TriggeringPolicy  告知 RollingFileAppender 何时激活滚动。</li>
<li>prudent  boolean  prudent 模式下不支持 FixedWindowRollingPolicy。<br>RollingFileAppender 支 持 prudent 与TimeBasedRollingPolicy 的联合使用，但有两个限制：</li>
</ul>
<ol>
<li>在 prudent 模式，不支持也不允许文件压缩（不能<br>在一个 JVM 压缩文件时，让另一个 JVM 写文件）。</li>
<li>不能设置 FileAppender 的 file 属性，必须留空。实<br>际上，多数操作系统不允许当一个进程打开文件时<br>又重命名该文件</li>
</ol>
<h5 id="FixedWindowRollingPolicy"><a href="#FixedWindowRollingPolicy" class="headerlink" title="FixedWindowRollingPolicy"></a>FixedWindowRollingPolicy</h5><p>当发生滚动时，FixedWindowRollingPolicy 根据如下固定窗口（window）算法重命名文<br>件。<br>选项“fileNamePattern”代表归档（滚动）记录文件的文件名模式。该选项是必需的，<br>且必需在模式的某处包含标志“%i”。<br>下面是 FixedWindowRollingPolicy 的可用属性</p>
<ul>
<li>minIndex  int  窗口索引的最小值</li>
<li>maxIndex  int  窗口索引的最大值</li>
<li>fileNamePattern  String<br>例如，对于最小值和最大值分别是 1 和 3 的文件名模式<br>“MyLogFile%i.log”，会产生归档文件 MyLogFile1.log、<br>MyLogFile2.log 和 MyLogFile3.log。<br>该 属 性 还 可 以 指 定 文 件 压 缩 选 项 。 例 如<br>“MyLogFile%i.log.zip”表示归档文件必须用 zip 格式<br>进行压缩；还支持“.gz”格式。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">	&lt;appender name=&quot;FILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</div><div class="line">		&lt;file&gt;testFile.log&lt;/file&gt;</div><div class="line">	&lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.FixedWindowRollingPolicy&quot;&gt;</div><div class="line">	&lt;fileNamePattern&gt;testFile.%i.log.zip&lt;/fileNamePattern&gt;</div><div class="line">	&lt;minIndex&gt;1&lt;/minIndex&gt;</div><div class="line">	&lt;maxIndex&gt;3&lt;/maxIndex&gt;</div><div class="line">	&lt;/rollingPolicy&gt;</div><div class="line">	&lt;triggeringPolicy class=&quot;ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy&quot;&gt;</div><div class="line">		&lt;maxFileSize&gt;5MB&lt;/maxFileSize&gt;</div><div class="line">	&lt;/triggeringPolicy&gt;</div><div class="line">	&lt;encoder&gt;</div><div class="line">		&lt;pattern&gt;%-4relative [%thread] %-5level %logger&#123;35&#125; - %msg%n	&lt;/pattern&gt;</div><div class="line">	&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line">	&lt;root level=&quot;DEBUG&quot;&gt;</div><div class="line">		&lt;appender-ref ref=&quot;FILE&quot; /&gt;</div><div class="line">	&lt;/root&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>
<h5 id="TimeBasedRollingPolicy"><a href="#TimeBasedRollingPolicy" class="headerlink" title="TimeBasedRollingPolicy"></a>TimeBasedRollingPolicy</h5><p>TimeBasedRollingPolicy 或许是最受流行的滚动策略。它根据时间来制定滚动策略，例<br>如 根 据 日 或 月 。TimeBasedRollingPolicy 既 负 责 滚 动 也 负 责 触 发 滚 动 。 实 际 上 ，<br>TimeBasedRollingPolicy 同时实现了 RollingPolicy 接口和 TriggeringPolicy 接口。<br>TimeBasedRollingPolicy 有两个属性：必需的“fileNamePattern”和可选的“maxHistory”</p>
<ul>
<li>fileNamePattern  String<br>必需。定义滚动（归档）记录文件的名字。其值应当包含文件名及“%d”格式转换符。“%d”可以包含一个<br>java.text.SimpleDateFormat 指定的日期时间模式。如果没有指定日期时间模式，则默认为 yyyy-MM-dd。<br>RollingFileAppender（TimeBasedRollingPolicy 之父）的“file”选项可有可无。<br>通过设置“file”属性，可以为活动文件和归档文件指定不同的位置。当前记录总是被指向由“file”属性指<br>定的文件。如果有“file”属性，则活动文件的名字不会改变。而如果没有“file”属性，则活动文件的名字<br>会根据“fileNamePattern”的值每隔一段时间就重新计算一次。下面的例子会解释这点。<br>“ %d{} ” 里 的 日 期 时 间 模 式 遵 循java.text.SimpleDateFormat 的约定。在 fileNamePattern<br>或日期时间模式里的前置“/”或后置“\”会被当作目录分隔符。</li>
<li>maxHistory int</li>
</ul>
<p>控制被保留的归档文件的最大数量，超出数量就删除旧文件。例如，假设每月滚动，且 maxHistory 是 6，则只<br>保留最近 6 个月的归档文件，删除之前的文件。注意当删除旧归档文件时，那些为了归档而创建的目录也会被删除。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;configuration&gt;</div><div class="line">	&lt;appender name=&quot;FILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</div><div class="line">		&lt;file&gt;logFile.log&lt;/file&gt;</div><div class="line">	&lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</div><div class="line"></div><div class="line">&lt;!-- keep 30 days worth of history --&gt;</div><div class="line">	&lt;maxHistory&gt;30&lt;/maxHistory&gt;</div><div class="line">	&lt;/rollingPolicy&gt;</div><div class="line">	&lt;encoder&gt;</div><div class="line">		&lt;pattern&gt;%-4relative [%thread] %-5level %logger&#123;35&#125; - %msg%n&lt;/pattern&gt;</div><div class="line">	&lt;/encoder&gt;</div><div class="line">	&lt;/appender&gt;</div><div class="line">	&lt;root level=&quot;DEBUG&quot;&gt;</div><div class="line">		&lt;appender-ref ref=&quot;FILE&quot; /&gt;</div><div class="line">	&lt;/root&gt;</div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>
<h4 id="Encoder"><a href="#Encoder" class="headerlink" title="Encoder"></a>Encoder</h4><p>Encoder 负责两件事，一是把事件转换为字节数组，二是把字节数组写入输出流。在<br>logback 0.9.19 版之前没有 encoder。在之前的版本里，多数 appender 依靠 layout 来把事件转<br>换成字符串并用 java.io.Writer 把字符串输出。在之前的版本里，用户需要在 FileAppender<br>里嵌入一个 PatternLayout。而从 0.9.19 版开始，FileAppender 和其子类使用 encoder，不接<br>受 layout</p>
<h4 id="Layout"><a href="#Layout" class="headerlink" title="Layout"></a>Layout</h4><p>Layout 负责把事件转换成字符串。Layout 接口的 format()方法的参数是代表任何类型的<br>事件，返回字符串</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;logback常用配置详解&quot;&gt;&lt;a href=&quot;#logback常用配置详解&quot; class=&quot;headerlink&quot; title=&quot;logback常用配置详解&quot;&gt;&lt;/a&gt;logback常用配置详解&lt;/h3&gt;&lt;h4 id=&quot;什么是-logback&quot;&gt;&lt;a href=
    
    </summary>
    
      <category term="logback" scheme="https://ln0491.github.io/categories/logback/"/>
    
    
      <category term="logback" scheme="https://ln0491.github.io/tags/logback/"/>
    
  </entry>
  
  <entry>
    <title>mysql学习十九系统信息函数</title>
    <link href="https://ln0491.github.io/2017/02/17/mysql%E5%AD%A6%E4%B9%A0%E5%8D%81%E4%B9%9D%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF%E5%87%BD%E6%95%B0/"/>
    <id>https://ln0491.github.io/2017/02/17/mysql学习十九系统信息函数/</id>
    <published>2017-02-17T05:23:58.000Z</published>
    <updated>2017-02-17T07:04:29.268Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql学习十九系统信息函数"><a href="#mysql学习十九系统信息函数" class="headerlink" title="mysql学习十九系统信息函数"></a>mysql学习十九系统信息函数</h3><ul>
<li>version() 返回数据库版本号</li>
<li>DATABASE() 返回当前数据库名</li>
<li>USER() 返回当前用户</li>
<li>LAST_INSERT_ID() 返回最近生成的AUTO_INCREMENT值</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select version(),database(),user();</div><div class="line">+------------+------------+----------------+</div><div class="line">| version()  | database() | user()         |</div><div class="line">+------------+------------+----------------+</div><div class="line">| 5.7.17-log | company    | root@localhost |</div><div class="line">+------------+------------+----------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="获取AUTO-INCREMENT约束的最后ID值"><a href="#获取AUTO-INCREMENT约束的最后ID值" class="headerlink" title="获取AUTO_INCREMENT约束的最后ID值"></a>获取AUTO_INCREMENT约束的最后ID值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">CREATE TABLE IF NOT EXISTS t_autoincrement(</div><div class="line">id INT(11) PRIMARY KEY AUTO_INCREMENT </div><div class="line">);</div><div class="line"></div><div class="line">INSERT INTO t_autoincrement VALUES(NULL);</div><div class="line">INSERT INTO t_autoincrement VALUES(NULL);</div><div class="line">INSERT INTO t_autoincrement VALUES(NULL);</div><div class="line">INSERT INTO t_autoincrement VALUES(NULL);</div><div class="line">INSERT INTO t_autoincrement VALUES(NULL);</div><div class="line">INSERT INTO t_autoincrement VALUES(NULL);</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">SELECT LAST_INSERT_ID();</div><div class="line">mysql&gt; select last_insert_id();</div><div class="line">+------------------+</div><div class="line">| last_insert_id() |</div><div class="line">+------------------+</div><div class="line">|               6 |</div><div class="line">+------------------+</div><div class="line">1 row in set (0.00 sec)\</div></pre></td></tr></table></figure>
<h4 id="其它的函数"><a href="#其它的函数" class="headerlink" title="其它的函数"></a>其它的函数</h4><ul>
<li>IF(value,t f) 如果value是真，返回t，否则返回f</li>
<li>IFNULL(value1,value2) 如果value1不为空返回value1，否则返回value2</li>
<li>CASE WHEN [value1] THEN[result1]…ELSE[default] END 如果value1是真，返回result1，否则返回default</li>
<li>CASE [expr]WHEN[value1] THEN[result1]…ELSE[default] END 如果expr等于value1，返回result1，否则返回default</li>
<li>PASSWORD(str)  实现对字符串str进行加密</li>
<li>FORMAT(x,n) 实现将数字x进行格式化，保留n位小数</li>
<li>INET_ATON(ip) 实现将IP地址转换成数字</li>
<li>INET_NTOA(x) 实现将数字转换成IP</li>
<li>GET_LOCT(name,time) 创建一个持续时间为time的名为name的锁</li>
<li>RELEASE_LOCT(name) 为名为name的锁进行解锁</li>
<li>BENCHMARK(count,expr) 实现将表达式重复执行count次</li>
<li>CONVERT(s USING cs) 实现将字符串s的字符集变成cs</li>
<li>CONV(N,from_base,to_base)函数</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mysql学习十九系统信息函数&quot;&gt;&lt;a href=&quot;#mysql学习十九系统信息函数&quot; class=&quot;headerlink&quot; title=&quot;mysql学习十九系统信息函数&quot;&gt;&lt;/a&gt;mysql学习十九系统信息函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;version() 返回
    
    </summary>
    
      <category term="mysql" scheme="https://ln0491.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://ln0491.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql学习十八日期函数</title>
    <link href="https://ln0491.github.io/2017/02/17/mysql%E5%AD%A6%E4%B9%A0%E5%8D%81%E5%85%AB%E6%97%A5%E6%9C%9F%E5%87%BD%E6%95%B0/"/>
    <id>https://ln0491.github.io/2017/02/17/mysql学习十八日期函数/</id>
    <published>2017-02-17T05:23:48.000Z</published>
    <updated>2017-02-17T08:37:02.171Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql学习十八日期函数"><a href="#mysql学习十八日期函数" class="headerlink" title="mysql学习十八日期函数"></a>mysql学习十八日期函数</h3><ul>
<li>CURDATE() 获取当前日期</li>
<li>CURTIME() 获取当前时间</li>
<li>NOW() 获取前的日期和时间</li>
<li>UNIX_TIMESTAMP(DATE) 获取日期DATE的UNIX时间戳</li>
<li>FROM_UNIXTIME()获取UNIX时间戳的日期值</li>
<li>WEEK（date） 返日期DATE为一年中的第几周</li>
<li>YEAR(DATE)返回日期DATE的年份</li>
<li>HOUR(TIME) 返回时间 为TIME的小时值</li>
<li>MINUTE(TIME)返回时间为TIME的分钟值</li>
<li>MONTHNAME(DATE)返回时间TIME的月份值</li>
</ul>
<h4 id="获取当前的时间和时间"><a href="#获取当前的时间和时间" class="headerlink" title="获取当前的时间和时间"></a>获取当前的时间和时间</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW() now方式,CURRENT_TIMESTAMP() timestamp方式,LOCALTIME() localtime方式,SYSDATE() sysdate方式;</div><div class="line">+---------------------+---------------------+---------------------+---------------------+</div><div class="line">| now方式             | timestamp方式       | localtime方式       | sysdate方式         |</div><div class="line">+---------------------+---------------------+---------------------+---------------------+</div><div class="line">| 2017-02-17 15:11:36 | 2017-02-17 15:11:36 | 2017-02-17 15:11:36 | 2017-02-17 15:11:36 |</div><div class="line">+---------------------+---------------------+---------------------+---------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<p>可以获取当前时间，同一种格式显示日期和时间</p>
<h4 id="获取当前日期"><a href="#获取当前日期" class="headerlink" title="获取当前日期"></a>获取当前日期</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select curdate() curdate方式,current_date() current_date方式;</div><div class="line">+---------------+--------------------+</div><div class="line">| curdate方式   | current_date方式   |</div><div class="line">+---------------+--------------------+</div><div class="line">| 2017-02-17    | 2017-02-17         |</div><div class="line">+---------------+--------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select curtime() curtime方式,current_time current_time方式;</div><div class="line">+---------------+--------------------+</div><div class="line">| curtime方式   | current_time方式   |</div><div class="line">+---------------+--------------------+</div><div class="line">| 15:14:48      | 15:14:48           |</div><div class="line">+---------------+--------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="通过UNIX方式显示日期和时间"><a href="#通过UNIX方式显示日期和时间" class="headerlink" title="通过UNIX方式显示日期和时间"></a>通过UNIX方式显示日期和时间</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW() 当前时间,UNIX_TIMESTAMP(NOW()) unix方式,FROM_UNIXTIME(UNIX_TIMESTAMP(NOW())) 普通方式;</div><div class="line">+---------------------+------------+---------------------+</div><div class="line">| 当前时间            | unix方式   | 普通方式            |</div><div class="line">+---------------------+------------+---------------------+</div><div class="line">| 2017-02-17 15:17:53 | 1487315873 | 2017-02-17 15:17:53 |</div><div class="line">+---------------------+------------+---------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<p>UNIX_TIMESTAMP(),UNIX_TIMESTAMP(NOW())<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW(),UNIX_TIMESTAMP(),UNIX_TIMESTAMP(NOW());</div><div class="line">+---------------------+------------------+-----------------------+</div><div class="line">| NOW()               | UNIX_TIMESTAMP() | UNIX_TIMESTAMP(NOW()) |</div><div class="line">+---------------------+------------------+-----------------------+</div><div class="line">| 2017-02-17 15:19:17 |       1487315957 |            1487315957 |</div><div class="line">+---------------------+------------------+-----------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>UNIX_TIMESTAMP(),UNIX_TIMESTAMP(NOW())返回相同的时间戳</p>
<h4 id="通过UTC的方式显示日期和时间"><a href="#通过UTC的方式显示日期和时间" class="headerlink" title="通过UTC的方式显示日期和时间"></a>通过UTC的方式显示日期和时间</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW(),UTC_DATE(),UTC_TIME();</div><div class="line">+---------------------+------------+------------+</div><div class="line">| NOW()               | UTC_DATE() | UTC_TIME() |</div><div class="line">+---------------------+------------+------------+</div><div class="line">| 2017-02-17 15:20:42 | 2017-02-17 | 07:20:42   |</div><div class="line">+---------------------+------------+------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="获取日期和时间各部分的值"><a href="#获取日期和时间各部分的值" class="headerlink" title="获取日期和时间各部分的值"></a>获取日期和时间各部分的值</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW() 当前时间,YEAR(NOW()) 年,MONTH(NOW()) 月,DAY(NOW())日,QUARTER(NOW()) 季度,WEEK(NOW()) 星期,DAYOFMONTH(NOW())月中天,HOUR(NOW())时,MINUTE(NOW())分,SECOND(NOW())秒;</div><div class="line">+---------------------+------+------+------+--------+--------+-----------+------+------+------+</div><div class="line">| 当前时间            | 年   | 月   | 日   | 季度   | 星期   | 月中天    | 时   | 分   | 秒   |</div><div class="line">+---------------------+------+------+------+--------+--------+-----------+------+------+------+</div><div class="line">| 2017-02-17 15:24:32 | 2017 |    2 |   17 |      1 |      7 |        17 |   15 |   24 |   32 |</div><div class="line">+---------------------+------+------+------+--------+--------+-----------+------+------+------+</div></pre></td></tr></table></figure>
<h4 id="月的函数"><a href="#月的函数" class="headerlink" title="月的函数"></a>月的函数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select now(), month(now()),monthname(now());</div><div class="line">+---------------------+--------------+------------------+</div><div class="line">| now()               | month(now()) | monthname(now()) |</div><div class="line">+---------------------+--------------+------------------+</div><div class="line">| 2017-02-17 15:26:04 |            2 | February         |</div><div class="line">+---------------------+--------------+------------------+</div><div class="line">1 row in set (0.01 sec)</div></pre></td></tr></table></figure>
<h4 id="星期"><a href="#星期" class="headerlink" title="星期"></a>星期</h4><ul>
<li>WEEK()和WEEKOFYEAR（）返回日期和时间中星期都是当前年的第几个星期1-53</li>
<li>DAYNAME()返回日期和时间中星期的英文名</li>
<li>DAYOFWEEK()返回星期几1-7</li>
<li>WEEKDAY()返回星期几0-6</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW()当前时间,WEEK(NOW()),WEEKOFYEAR(NOW()),DAYNAME(NOW()),DAYOFWEEK(NOW()),WEEKDAY(NOW());</div><div class="line">+---------------------+-------------+-------------------+----------------+------------------+----------------+</div><div class="line">| 当前时间            | WEEK(NOW()) | WEEKOFYEAR(NOW()) | DAYNAME(NOW()) | DAYOFWEEK(NOW()) | WEEKDAY(NOW()) |</div><div class="line">+---------------------+-------------+-------------------+----------------+------------------+----------------+</div><div class="line">| 2017-02-17 15:31:06 |           7 |                 7 | Friday         |                6 |              4 |</div><div class="line">+---------------------+-------------+-------------------+----------------+------------------+----------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="天"><a href="#天" class="headerlink" title="天"></a>天</h4><ul>
<li>DAYOFMONTH()日期属于当前月的第几天</li>
<li>DAY()日期属于当前月的第几天</li>
<li>DAYOFYEAR（）  本年的第几天</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW()当前时间,DAY(NOW()),DAYOFMONTH(NOW()),DAYOFYEAR(NOW());</div><div class="line">+---------------------+------------+-------------------+------------------+</div><div class="line">| 当前时间            | DAY(NOW()) | DAYOFMONTH(NOW()) | DAYOFYEAR(NOW()) |</div><div class="line">+---------------------+------------+-------------------+------------------+</div><div class="line">| 2017-02-17 15:32:56 |         17 |                17 |               48 |</div><div class="line">+---------------------+------------+-------------------+------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="获取指定EXTRACT-函数"><a href="#获取指定EXTRACT-函数" class="headerlink" title="获取指定EXTRACT()函数"></a>获取指定EXTRACT()函数</h4><p>统一获取日期和时间的各部分值</p>
<p>extract(type from date);<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW()当前时间,EXTRACT(YEAR FROM NOW()) 年,EXTRACT(MONTH FROM NOW())月,EXTRACT(DAY FROM NOW()) 日,EXTRACT(QUARTER FROM NOW())季,EXTRACT(WEEK FROM NOW())星期,EXTRACT(HOUR FROM NOW())时,EXTRACT(MINUTE FROM NOW())分,EXTRACT(SECOND FROM NOW());</div><div class="line">+---------------------+------+------+------+------+--------+------+------+----------------------------+</div><div class="line">| 当前时间            | 年   | 月   | 日   | 季   | 星期   | 时   | 分   | EXTRACT(SECOND FROM NOW()) |</div><div class="line">+---------------------+------+------+------+------+--------+------+------+----------------------------+</div><div class="line">| 2017-02-17 15:40:12 | 2017 |    2 |   17 |    1 |      7 |   15 |   40 |                         12 |</div><div class="line">+---------------------+------+------+------+------+--------+------+------+----------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h4 id="TO-DAYS-DATE-与FROM-DAYS-NUMBER"><a href="#TO-DAYS-DATE-与FROM-DAYS-NUMBER" class="headerlink" title="TO_DAYS(DATE)与FROM_DAYS(NUMBER)"></a>TO_DAYS(DATE)与FROM_DAYS(NUMBER)</h4><ul>
<li>TO_DAYS(DATE) 计算日期参数与默认日期0000年1月1日）之间的天数</li>
<li>FROM_DAYS(NUMBER) 计算从默认昌和时间0000年1月1日）开始经历NUMBER天数后的日期和时间</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW() ,TO_DAYS(NOW()),FROM_DAYS(TO_DAYS(NOW()));</div><div class="line">+---------------------+----------------+---------------------------+</div><div class="line">| NOW()               | TO_DAYS(NOW()) | FROM_DAYS(TO_DAYS(NOW())) |</div><div class="line">+---------------------+----------------+---------------------------+</div><div class="line">| 2017-02-17 16:06:39 |         736742 | 2017-02-17                |</div><div class="line">+---------------------+----------------+---------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="DATEDIFF-date1-date2"><a href="#DATEDIFF-date1-date2" class="headerlink" title="DATEDIFF(date1,date2)"></a>DATEDIFF(date1,date2)</h4><p>返回date1与date2之间的天数</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW(),DATEDIFF(NOW(),&apos;2015-02-24&apos;);</div><div class="line">+---------------------+------------------------------+</div><div class="line">| NOW()               | DATEDIFF(NOW(),&apos;2015-02-24&apos;) |</div><div class="line">+---------------------+------------------------------+</div><div class="line">| 2017-02-17 16:07:57 |                          724 |</div><div class="line">+---------------------+------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="指定日期和时间操作"><a href="#指定日期和时间操作" class="headerlink" title="指定日期和时间操作"></a>指定日期和时间操作</h4><ul>
<li>ADDDATE(DATE,N),计算日期加上N天后的日期</li>
<li>SUBDATE(DATE,N),计算日期减去N天后的日期</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT NOW(),ADDDATE(CURDATE(),5),SUBDATE(CURDATE(),5);</div><div class="line">+---------------------+----------------------+----------------------+</div><div class="line">| NOW()               | ADDDATE(CURDATE(),5) | SUBDATE(CURDATE(),5) |</div><div class="line">+---------------------+----------------------+----------------------+</div><div class="line">| 2017-02-17 16:15:35 | 2017-02-22           | 2017-02-12           |</div><div class="line">+---------------------+----------------------+----------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<ul>
<li>ADDDATE(DATE,interval expr type),计算日期加上N天后的日期</li>
<li><p>SUBDATE(DATE,interval expr type),计算日期减去N天后的日期</p>
<h4 id="TYPE类型"><a href="#TYPE类型" class="headerlink" title="TYPE类型"></a>TYPE类型</h4></li>
<li><p>YEAR 年 YY</p>
</li>
<li>MONTH 月 MM</li>
<li>DAY 日 DD</li>
<li>HOUR 时 hh</li>
<li>MINUTE 分钟 mm</li>
<li>SECOND 秒 ss</li>
<li>YEAR_MONTH 年和月 YY与MM之间用任意符号隔开</li>
<li>DAY_HOUR 日和小时 DD和hh之间用任意符号隔开</li>
<li>DAY_MINUTE 日和分钟 DD和mm之间用任意符号隔开</li>
<li>DAY_SECOND 日和秒 DD和ss之间用任意符号隔开</li>
<li>HOUR_MINUTE 小时和分钟  hh和mm之间用任意符号隔开</li>
<li>HOUR_SECOND 小时和秒 hh和ss之间用任意符号隔开</li>
<li>MINUTE_SECOND  分钟和秒 mm和ss之间用任意符号隔开</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select adddate(curdate(),interval &apos;1,2&apos; year_month),subdate(curdate(),interval 1 year);</div><div class="line">+----------------------------------------------+------------------------------------+</div><div class="line">| adddate(curdate(),interval &apos;1,2&apos; year_month) | subdate(curdate(),interval 1 year) |</div><div class="line">+----------------------------------------------+------------------------------------+</div><div class="line">| 2018-04-17                                   | 2016-02-17                         |</div><div class="line">+----------------------------------------------+------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line">mysql&gt; select adddate(curdate(),interval &apos;1,2&apos; year_month),subdate(curdate(),interval -1 year);</div><div class="line">+----------------------------------------------+-------------------------------------+</div><div class="line">| adddate(curdate(),interval &apos;1,2&apos; year_month) | subdate(curdate(),interval -1 year) |</div><div class="line">+----------------------------------------------+-------------------------------------+</div><div class="line">| 2018-04-17                                   | 2018-02-17                          |</div><div class="line">+----------------------------------------------+-------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="ADDTIME-TIME-N-SUBTIME-TIME-N"><a href="#ADDTIME-TIME-N-SUBTIME-TIME-N" class="headerlink" title="ADDTIME(TIME,N),SUBTIME(TIME,N)"></a>ADDTIME(TIME,N),SUBTIME(TIME,N)</h4><p>时间加上N秒，或者时间减去N秒后的时间<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT CURTIME(),ADDTIME(CURTIME(),5),SUBTIME(CURTIME(),5);</div><div class="line">+-----------+----------------------+----------------------+</div><div class="line">| CURTIME() | ADDTIME(CURTIME(),5) | SUBTIME(CURTIME(),5) |</div><div class="line">+-----------+----------------------+----------------------+</div><div class="line">| 16:27:29  | 16:27:34             | 16:27:24             |</div><div class="line">+-----------+----------------------+----------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mysql学习十八日期函数&quot;&gt;&lt;a href=&quot;#mysql学习十八日期函数&quot; class=&quot;headerlink&quot; title=&quot;mysql学习十八日期函数&quot;&gt;&lt;/a&gt;mysql学习十八日期函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;CURDATE() 获取当前日期&lt;/li
    
    </summary>
    
      <category term="mysql" scheme="https://ln0491.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://ln0491.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql学习十七数值函数</title>
    <link href="https://ln0491.github.io/2017/02/17/mysql%E5%AD%A6%E4%B9%A0%E5%8D%81%E4%B8%83%E6%95%B0%E5%80%BC%E5%87%BD%E6%95%B0/"/>
    <id>https://ln0491.github.io/2017/02/17/mysql学习十七数值函数/</id>
    <published>2017-02-17T05:23:39.000Z</published>
    <updated>2017-02-27T02:21:32.613Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql学习十七数值函数"><a href="#mysql学习十七数值函数" class="headerlink" title="mysql学习十七数值函数"></a>mysql学习十七数值函数</h3><ul>
<li>ABS(X) 返回数据X的绝对值</li>
<li>CEIL(X) 返回大于X的最大整数值</li>
<li>FLOOR(X) 返回小于X的最大整数</li>
<li>MODE(X,Y) 返回X模Y的值</li>
<li>RAND(） 返回0-1之间的随机数</li>
<li>ROUND(X,Y) 返回数值X的四舍5入后有Y位小数的数值</li>
<li>TRUNCATE(X,Y)，返回X断为Y位小数的数值</li>
</ul>
<h4 id="获取随机数RAND"><a href="#获取随机数RAND" class="headerlink" title="获取随机数RAND()"></a>获取随机数RAND()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT RAND(),RAND(),RAND(3),RAND(3);</div><div class="line">+---------------------+---------------------+--------------------+--------------------+</div><div class="line">| RAND()              | RAND()              | RAND(3)            | RAND(3)            |</div><div class="line">+---------------------+---------------------+--------------------+--------------------+</div><div class="line">| 0.14539613215755312 | 0.17698627540561024 | 0.9057697559760601 | 0.9057697559760601 |</div><div class="line">+---------------------+---------------------+--------------------+--------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<p>每次运行RAND（）函数返回的都不一样，如果要获取相同的随机数，使用带有相同参数的RNAD()来实现</p>
<h4 id="获取整数"><a href="#获取整数" class="headerlink" title="获取整数"></a>获取整数</h4><ul>
<li>CEIL(X) 返回大于X的最大整数值</li>
<li>FLOOR(X) 返回小于X的最大整数<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT CEIL(3.5),CEIL(-3.5),FLOOR(3.5),FLOOR(-3.5);</div><div class="line">+-----------+------------+------------+-------------+</div><div class="line">| CEIL(3.5) | CEIL(-3.5) | FLOOR(3.5) | FLOOR(-3.5) |</div><div class="line">+-----------+------------+------------+-------------+</div><div class="line">|         4 |         -3 |          3 |          -4 |</div><div class="line">+-----------+------------+------------+-------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
</li>
</ul>
<h4 id="截取数值函数"><a href="#截取数值函数" class="headerlink" title="截取数值函数"></a>截取数值函数</h4><ul>
<li>TRUNCATE(X,Y)，返回X断为Y位小数的数值</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT TRUNCATE(903.53564,2),TRUNCATE(903.53567,-1);</div><div class="line">+-----------------------+------------------------+</div><div class="line">| TRUNCATE(903.53564,2) | TRUNCATE(903.53567,-1) |</div><div class="line">+-----------------------+------------------------+</div><div class="line">|                903.53 |                    900 |</div><div class="line">+-----------------------+------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="四舍五入函数"><a href="#四舍五入函数" class="headerlink" title="四舍五入函数"></a>四舍五入函数</h4><ul>
<li>ROUND(X,Y) 返回数值X的四舍5入后有Y位小数的数值</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT ROUND(903.53564),ROUND(903.53564,2),ROUND(-903.53564),ROUND(903.53564,-1);</div><div class="line">+------------------+--------------------+-------------------+---------------------+</div><div class="line">| ROUND(903.53564) | ROUND(903.53564,2) | ROUND(-903.53564) | ROUND(903.53564,-1) |</div><div class="line">+------------------+--------------------+-------------------+---------------------+</div><div class="line">|              904 |             903.54 |              -904 |                 900 |</div><div class="line">+------------------+--------------------+-------------------+---------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="BIN（N）-OCT（N），HEX（N-or-S）函数-其实就是进制转换"><a href="#BIN（N）-OCT（N），HEX（N-or-S）函数-其实就是进制转换" class="headerlink" title="BIN（N）,OCT（N），HEX（N_or_S）函数..其实就是进制转换"></a>BIN（N）,OCT（N），HEX（N_or_S）函数..其实就是进制转换</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT BIN(12);</div><div class="line">        -&gt; &apos;1100&apos;</div><div class="line">mysql&gt; SELECT OCT(12);</div><div class="line">        -&gt; &apos;14&apos;</div><div class="line">mysql&gt; SELECT HEX(255);</div><div class="line">        -&gt; &apos;FF&apos;</div><div class="line">mysql&gt; SELECT HEX(&quot;abc&quot;);</div><div class="line">        -&gt; 616263</div></pre></td></tr></table></figure>
<h4 id="CONV-N-from-base-to-base-函数"><a href="#CONV-N-from-base-to-base-函数" class="headerlink" title="CONV(N,from_base,to_base)函数"></a>CONV(N,from_base,to_base)函数</h4><p>将一个数字N，从from_base转换为to_base，返回值为字符串..</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mysql&gt; SELECT CONV(&quot;a&quot;,16,2);</div><div class="line">        -&gt; &apos;1010&apos;</div><div class="line">mysql&gt; SELECT CONV(&quot;6E&quot;,18,8);</div><div class="line">        -&gt; &apos;172&apos;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mysql学习十七数值函数&quot;&gt;&lt;a href=&quot;#mysql学习十七数值函数&quot; class=&quot;headerlink&quot; title=&quot;mysql学习十七数值函数&quot;&gt;&lt;/a&gt;mysql学习十七数值函数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;ABS(X) 返回数据X的绝对值&lt;/li
    
    </summary>
    
      <category term="mysql" scheme="https://ln0491.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://ln0491.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql学习十六常用字符函数</title>
    <link href="https://ln0491.github.io/2017/02/17/mysql%E5%AD%A6%E4%B9%A0%E5%8D%81%E5%85%AD%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6%E5%87%BD%E6%95%B0/"/>
    <id>https://ln0491.github.io/2017/02/17/mysql学习十六常用字符函数/</id>
    <published>2017-02-17T05:23:10.000Z</published>
    <updated>2017-02-17T07:03:17.572Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql学习十六常用字符函数"><a href="#mysql学习十六常用字符函数" class="headerlink" title="mysql学习十六常用字符函数"></a>mysql学习十六常用字符函数</h3><h4 id="全并字符串函数-CONCAT-和CONCAT-WS"><a href="#全并字符串函数-CONCAT-和CONCAT-WS" class="headerlink" title="全并字符串函数 CONCAT()和CONCAT_WS()"></a>全并字符串函数 CONCAT()和CONCAT_WS()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CONCAT(S1,S2,S3...SN)</div></pre></td></tr></table></figure>
<p>将传入的函数连接起来返回所合并字符串数据，如果其中一个为NULL，则返加值为NULL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select concat(&apos;M&apos;,&apos;y&apos;,&apos;S&apos;,&apos;q&apos;,&apos;l&apos;);</div><div class="line">+-----------------------------+</div><div class="line">| concat(&apos;M&apos;,&apos;y&apos;,&apos;S&apos;,&apos;q&apos;,&apos;l&apos;) |</div><div class="line">+-----------------------------+</div><div class="line">| MySql                       |</div><div class="line">+-----------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>有NULL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select concat(&apos;M&apos;,&apos;y&apos;,&apos;S&apos;,&apos;q&apos;,&apos;l&apos;,null);</div><div class="line">+----------------------------------+</div><div class="line">| concat(&apos;M&apos;,&apos;y&apos;,&apos;S&apos;,&apos;q&apos;,&apos;l&apos;,null) |</div><div class="line">+----------------------------------+</div><div class="line">| NULL                             |</div><div class="line">+----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>实现当前时间CURDATE和数值合并<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select concat(curdate(),13.27);</div><div class="line">+-------------------------+</div><div class="line">| concat(curdate(),13.27) |</div><div class="line">+-------------------------+</div><div class="line">| 2017-02-1713.27         |</div><div class="line">+-------------------------+</div><div class="line">1 row in set (0.03 sec)</div></pre></td></tr></table></figure></p>
<h4 id="全并字符串函数CONCAT-WS"><a href="#全并字符串函数CONCAT-WS" class="headerlink" title="全并字符串函数CONCAT_WS()"></a>全并字符串函数CONCAT_WS()</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">CONCAT_WS(S1,S2,S3...SN)</div></pre></td></tr></table></figure>
<p>与CONCAT相比多了一个SEP分割符参数，即不仅将传的其他参数连接起来，而且还会通过分割符将各个字符串侵害开，分隔答可以是一个字符串，也可以是其他参数。<br>如果分隔符为NULL，则返回结果为NULL，函数会忽略任何分隔符参数后的NULL。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt;  SELECT CONCAT_WS(&apos;-&apos;,&apos;0755&apos;,&apos;518000&apos;);</div><div class="line">+--------------------------------+</div><div class="line">| CONCAT_WS(&apos;-&apos;,&apos;0755&apos;,&apos;518000&apos;) |</div><div class="line">+--------------------------------+</div><div class="line">| 0755-518000                    |</div><div class="line">+--------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<p>NULL<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt;  SELECT CONCAT_WS(null,&apos;0755&apos;,&apos;518000&apos;);</div><div class="line">+---------------------------------+</div><div class="line">| CONCAT_WS(null,&apos;0755&apos;,&apos;518000&apos;) |</div><div class="line">+---------------------------------+</div><div class="line">| NULL                            |</div><div class="line">+---------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>当侵害符后，参数存在NULL时<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">mysql&gt;  SELECT CONCAT_WS(&apos;-&apos;,&apos;0755&apos;,null,&apos;518000&apos;);</div><div class="line">+-------------------------------------+</div><div class="line">| CONCAT_WS(&apos;-&apos;,&apos;0755&apos;,null,&apos;518000&apos;) |</div><div class="line">+-------------------------------------+</div><div class="line">| 0755-518000                         |</div><div class="line">+-------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt;  SELECT CONCAT_WS(&apos;-&apos;,null,&apos;0755&apos;,&apos;518000&apos;);</div><div class="line">+-------------------------------------+</div><div class="line">| CONCAT_WS(&apos;-&apos;,null,&apos;0755&apos;,&apos;518000&apos;) |</div><div class="line">+-------------------------------------+</div><div class="line">| 0755-518000                         |</div><div class="line">+-------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h4 id="比较字符大小函数STRCMP"><a href="#比较字符大小函数STRCMP" class="headerlink" title="比较字符大小函数STRCMP()"></a>比较字符大小函数STRCMP()</h4><p>STRCMP(S1,S2)<br>比较字符串1，与字符串2，如果参数1大于参数2，返回1，<br>如果参数1小参数2，返回-1<br>如果相等则返回0</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT STRCMP(&apos;ABC&apos;,&apos;abc&apos;),</div><div class="line">    -&gt; STRCMP(&apos;abc&apos;,&apos;abd&apos;),</div><div class="line">    -&gt; STRCMP(&apos;abc&apos;,&apos;abb&apos;);</div><div class="line">+---------------------+---------------------+---------------------+</div><div class="line">| STRCMP(&apos;ABC&apos;,&apos;abc&apos;) | STRCMP(&apos;abc&apos;,&apos;abd&apos;) | STRCMP(&apos;abc&apos;,&apos;abb&apos;) |</div><div class="line">+---------------------+---------------------+---------------------+</div><div class="line">|                   0 |                  -1 |                   1 |</div><div class="line">+---------------------+---------------------+---------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="获取字符串长度函数LENGTH"><a href="#获取字符串长度函数LENGTH" class="headerlink" title="获取字符串长度函数LENGTH()"></a>获取字符串长度函数LENGTH()</h4><p>LENGTH(STR)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT &apos;Mysql&apos; 英文字符,</div><div class="line">    -&gt; LENGTH(&apos;Mysql&apos;) 长度,</div><div class="line">    -&gt; &apos;常用数&apos; 中文字符,</div><div class="line">    -&gt; LENGTH(&apos;常用数&apos;) 长度;</div><div class="line">+--------------+--------+--------------+--------+</div><div class="line">| 英文字符     | 长度   | 中文字符     | 长度   |</div><div class="line">+--------------+--------+--------------+--------+</div><div class="line">| Mysql        |      5 | 常用数       |      9 |</div><div class="line">+--------------+--------+--------------+--------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>中文字符一个占3位</p>
<h4 id="获取字符串长度函数CHAR-LENGTH"><a href="#获取字符串长度函数CHAR-LENGTH" class="headerlink" title="获取字符串长度函数CHAR_LENGTH()"></a>获取字符串长度函数CHAR_LENGTH()</h4><p>CHAR_LENGTH(str)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT &apos;Mysql&apos; 英文字符,</div><div class="line">    -&gt; CHAR_LENGTH(&apos;Mysql&apos;) 长度,</div><div class="line">    -&gt; &apos;常用数&apos; 中文字符,</div><div class="line">    -&gt; CHAR_LENGTH(&apos;常用数&apos;) 长度;</div><div class="line">+--------------+--------+--------------+--------+</div><div class="line">| 英文字符     | 长度   | 中文字符     | 长度   |</div><div class="line">+--------------+--------+--------------+--------+</div><div class="line">| Mysql        |      5 | 常用数       |      3 |</div><div class="line">+--------------+--------+--------------+--------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>中文还是占一个字符</p>
<h4 id="字母大小写转换函数UPPPER-和函数LOWER"><a href="#字母大小写转换函数UPPPER-和函数LOWER" class="headerlink" title="字母大小写转换函数UPPPER()和函数LOWER()"></a>字母大小写转换函数UPPPER()和函数LOWER()</h4><p>UPPER(STR)将字符所有字符转换为大写<br>ucase(str)将字符所有字符转换为大写<br>LOWER(STR)将字符所有字符转换为小写<br>LCASE(STR)将字符所有字符转换为小写</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select &apos;mysql&apos; 字符串,upper(&apos;mysql&apos;) 转换后,ucase(&apos;mysql&apos;) 转换后,lower(&apos;MYsQL&apos;) 转换后, lcase(&apos;MYSQL&apos;) 转换后;</div><div class="line">+-----------+-----------+-----------+-----------+-----------+</div><div class="line">| 字符串    | 转换后    | 转换后    | 转换后    | 转换后    |</div><div class="line">+-----------+-----------+-----------+-----------+-----------+</div><div class="line">| mysql     | MYSQL     | MYSQL     | mysql     | mysql     |</div><div class="line">+-----------+-----------+-----------+-----------+-----------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="返加字符串位置的FIND-IN-SET"><a href="#返加字符串位置的FIND-IN-SET" class="headerlink" title="返加字符串位置的FIND_IN_SET()"></a>返加字符串位置的FIND_IN_SET()</h4><p>FIND_IN_SET(s1,,s2)<br>会返回在字符串s2中与s1相匹配的字符口中的益，参数S2字符串中将包含若干个用逗号隔开的字符串</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT FIND_IN_SET(&apos;MySQL&apos;,&apos;oracle,sql,server,MySql&apos;);</div><div class="line">+------------------------------------------------+</div><div class="line">| FIND_IN_SET(&apos;MySQL&apos;,&apos;oracle,sql,server,MySql&apos;) |</div><div class="line">+------------------------------------------------+</div><div class="line">|                                              4 |</div><div class="line">+------------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="返回指定字符串的位置FIELD"><a href="#返回指定字符串的位置FIELD" class="headerlink" title="返回指定字符串的位置FIELD()"></a>返回指定字符串的位置FIELD()</h4><p>FIELD(str,s1,,s2,…)返回第一个与字符串str，匹配的字符串的位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT FIELD(&apos;MySQL&apos;,&apos;oracle&apos;,&apos;MySql&apos;,&apos;sql&apos;,&apos;server&apos;);</div><div class="line">+------------------------------------------------+</div><div class="line">| FIELD(&apos;MySQL&apos;,&apos;oracle&apos;,&apos;MySql&apos;,&apos;sql&apos;,&apos;server&apos;) |</div><div class="line">+------------------------------------------------+</div><div class="line">|                                              2 |</div><div class="line">+------------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h4 id="返回子字符串相匹配的开始位置"><a href="#返回子字符串相匹配的开始位置" class="headerlink" title="返回子字符串相匹配的开始位置"></a>返回子字符串相匹配的开始位置</h4><p>LOCATE(str1,str)<br>返回参数str中字符串str1的开始位置</p>
<p>POSITION(str1 in str)<br>instr(str,str1)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT LOCATE(&apos;sql&apos;,&apos;mysql&apos;),</div><div class="line">    -&gt;        POSITION(&apos;sql&apos; IN &apos;MySQL&apos;),</div><div class="line">    -&gt;        INSTR(&apos;MySql&apos;,&apos;my&apos;);</div><div class="line">+-----------------------+----------------------------+---------------------+</div><div class="line">| LOCATE(&apos;sql&apos;,&apos;mysql&apos;) | POSITION(&apos;sql&apos; IN &apos;MySQL&apos;) | INSTR(&apos;MySql&apos;,&apos;my&apos;) |</div><div class="line">+-----------------------+----------------------------+---------------------+</div><div class="line">|                     3 |                          3 |                   1 |</div><div class="line">+-----------------------+----------------------------+---------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="返回指定位置的字符串ELT"><a href="#返回指定位置的字符串ELT" class="headerlink" title="返回指定位置的字符串ELT()"></a>返回指定位置的字符串ELT()</h4><p>ELT(N，s1,s2,s3…);</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT ELT(3,&apos;MySQL&apos;,&apos;oracle&apos;,&apos;MySql&apos;,&apos;sql&apos;,&apos;server&apos;);</div><div class="line">+------------------------------------------------+</div><div class="line">| ELT(3,&apos;MySQL&apos;,&apos;oracle&apos;,&apos;MySql&apos;,&apos;sql&apos;,&apos;server&apos;) |</div><div class="line">+------------------------------------------------+</div><div class="line">| MySql                                          |</div><div class="line">+------------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; SELECT ELT(0,&apos;MySQL&apos;,&apos;oracle&apos;,&apos;MySql&apos;,&apos;sql&apos;,&apos;server&apos;);</div><div class="line">+------------------------------------------------+</div><div class="line">| ELT(0,&apos;MySQL&apos;,&apos;oracle&apos;,&apos;MySql&apos;,&apos;sql&apos;,&apos;server&apos;) |</div><div class="line">+------------------------------------------------+</div><div class="line">| NULL                                           |</div><div class="line">+------------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; SELECT ELT(-1,&apos;MySQL&apos;,&apos;oracle&apos;,&apos;MySql&apos;,&apos;sql&apos;,&apos;server&apos;);</div><div class="line">+-------------------------------------------------+</div><div class="line">| ELT(-1,&apos;MySQL&apos;,&apos;oracle&apos;,&apos;MySql&apos;,&apos;sql&apos;,&apos;server&apos;) |</div><div class="line">+-------------------------------------------------+</div><div class="line">| NULL                                            |</div><div class="line">+-------------------------------------------------+</div><div class="line">1 row in set (0.01 sec)</div><div class="line"></div><div class="line">mysql&gt; SELECT ELT(8,&apos;MySQL&apos;,&apos;oracle&apos;,&apos;MySql&apos;,&apos;sql&apos;,&apos;server&apos;);</div><div class="line">+------------------------------------------------+</div><div class="line">| ELT(8,&apos;MySQL&apos;,&apos;oracle&apos;,&apos;MySql&apos;,&apos;sql&apos;,&apos;server&apos;) |</div><div class="line">+------------------------------------------------+</div><div class="line">| NULL                                           |</div><div class="line">+------------------------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="选择字符串的MAKE-SET（）"><a href="#选择字符串的MAKE-SET（）" class="headerlink" title="选择字符串的MAKE_SET（）"></a>选择字符串的MAKE_SET（）</h4><p>MAKE_SET（num,s1,s2,s3,…）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">SELECT BIN(5) 二进制数,MAKE_SET(5,&apos;MySQL&apos;,&apos;Oracle&apos;,&apos;SQL Server&apos;,&apos;PostgreSQL&apos;) 选取后的字符串;</div><div class="line">+--------------+-----------------------+</div><div class="line">| 二进制数     | 选取后的字符串        |</div><div class="line">+--------------+-----------------------+</div><div class="line">| 101          | MySQL,SQL Server      |</div><div class="line">+--------------+-----------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<p>由于5的二进制为101,所以选择MySQL,SQL Server ，第一个和第三个<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select BIN(7) 二进制数,MAKE_SET(7,&apos;MySQL&apos;,&apos;Oracle&apos;,&apos;SQL Server&apos;,&apos;PostgreSQL&apos;) 选取后的字符串;</div><div class="line">+--------------+-------------------------+</div><div class="line">| 二进制数     | 选取后的字符串          |</div><div class="line">+--------------+-------------------------+</div><div class="line">| 111          | MySQL,Oracle,SQL Server |</div><div class="line">+--------------+-------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>7为111,选择为前3个</p>
<h4 id="从现有字符串中截取子字符串LEFT-和RIGHT"><a href="#从现有字符串中截取子字符串LEFT-和RIGHT" class="headerlink" title="从现有字符串中截取子字符串LEFT()和RIGHT"></a>从现有字符串中截取子字符串LEFT()和RIGHT</h4><p> LEFT(str,num) RIGHT(str,num)<br>从左边或右边截取子字符串<br>返回字符串str中包含前NUM个字符，从左或者从右边数的字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT &apos;MySQL&apos; 字符串,LEFT(&apos;MySQL&apos;,2) 前2个字符串 ,RIGHT(&apos;MySQL&apos;,3) 后3个字符串;</div><div class="line">+-----------+------------------+------------------+</div><div class="line">| 字符串    | 前2个字符串      | 后3个字符串      |</div><div class="line">+-----------+------------------+------------------+</div><div class="line">| MySQL     | My               | SQL              |</div><div class="line">+-----------+------------------+------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h4 id="截取指定位置和长度子字符串SUBSTRING和MID"><a href="#截取指定位置和长度子字符串SUBSTRING和MID" class="headerlink" title="截取指定位置和长度子字符串SUBSTRING和MID()"></a>截取指定位置和长度子字符串SUBSTRING和MID()</h4><p>SUBSTRING(str,num,len)<br>返回字符串str第num个位置开始长度为len的子字符串<br>MID(str,num,len)<br>返回字符串str第num个位置开始长度为len的子字符串</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT &apos;oraclemysql&apos; 字符串,SUBSTR(&apos;oraclemysql&apos;,1,5),SUBSTR(&apos;oraclemysql&apos;,7),SUBSTRING(&apos;oraclemysql&apos;,7,5),SUBSTRING(&apos;oraclemysql&apos;,7),MID(&apos;oraclemysql&apos;,7,5),MID(&apos;oraclemysql&apos;,7);</div><div class="line">+-------------+---------------------------+-------------------------+------------------------------+----------------------------+------------------------+----------------------+</div><div class="line">| 字符串      | SUBSTR(&apos;oraclemysql&apos;,1,5) | SUBSTR(&apos;oraclemysql&apos;,7) | SUBSTRING(&apos;oraclemysql&apos;,7,5) | SUBSTRING(&apos;oraclemysql&apos;,7) | MID(&apos;oraclemysql&apos;,7,5) | MID(&apos;oraclemysql&apos;,7) |</div><div class="line">+-------------+---------------------------+-------------------------+------------------------------+----------------------------+------------------------+----------------------+</div><div class="line">| oraclemysql | oracl                     | mysql                   | mysql                        | mysql                      | mysql                  | mysql                |</div><div class="line">+-------------+---------------------------+-------------------------+------------------------------+----------------------------+------------------------+----------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="去队字符串的首空格LTRIM"><a href="#去队字符串的首空格LTRIM" class="headerlink" title="去队字符串的首空格LTRIM()"></a>去队字符串的首空格LTRIM()</h4><p>LTRIM(STR)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT  CONCAT(&apos;-&apos;,&apos; MySQL &apos;,&apos;-&apos;) 原来字符串,</div><div class="line">    -&gt; CHAR_LENGTH(CONCAT(&apos;-&apos;,&apos; MySQL &apos;,&apos;-&apos;))  原来字符串长度,</div><div class="line">    -&gt; CONCAT(&apos;-&apos;,LTRIM(&apos; MySQL &apos;),&apos;-&apos;) 处理后字符串,</div><div class="line">    -&gt; CHAR_LENGTH(CONCAT(&apos;-&apos;,LTRIM(&apos; MySQL &apos;),&apos;-&apos;))  处理后字符串长度;</div><div class="line">+-----------------+-----------------------+--------------------+--------------------------+</div><div class="line">| 原来字符串      | 原来字符串长度        | 处理后字符串       | 处理后字符串长度         |</div><div class="line">+-----------------+-----------------------+--------------------+--------------------------+</div><div class="line">| - MySQL -       |                     9 | -MySQL -           |                        8 |</div><div class="line">+-----------------+-----------------------+--------------------+--------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h4 id="去队字符串的尾空格RTRIM"><a href="#去队字符串的尾空格RTRIM" class="headerlink" title="去队字符串的尾空格RTRIM()"></a>去队字符串的尾空格RTRIM()</h4><p>RTRIM(STR)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT  CONCAT(&apos;-&apos;,&apos; MySQL &apos;,&apos;-&apos;) 原来字符串,</div><div class="line">    -&gt; CHAR_LENGTH(CONCAT(&apos;-&apos;,&apos; MySQL &apos;,&apos;-&apos;))  原来字符串长度,</div><div class="line">    -&gt; CONCAT(&apos;-&apos;,RTRIM(&apos; MySQL &apos;),&apos;-&apos;) 处理后字符串,</div><div class="line">    -&gt; CHAR_LENGTH(CONCAT(&apos;-&apos;,RTRIM(&apos; MySQL &apos;),&apos;-&apos;))  处理后字符串长度;</div><div class="line">+-----------------+-----------------------+--------------------+--------------------------+</div><div class="line">| 原来字符串      | 原来字符串长度        | 处理后字符串       | 处理后字符串长度         |</div><div class="line">+-----------------+-----------------------+--------------------+--------------------------+</div><div class="line">| - MySQL -       |                     9 | - MySQL-           |                        8 |</div><div class="line">+-----------------+-----------------------+--------------------+--------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h4 id="去队字符串的首尾空格TRIM"><a href="#去队字符串的首尾空格TRIM" class="headerlink" title="去队字符串的首尾空格TRIM()"></a>去队字符串的首尾空格TRIM()</h4><p>TRIM(STR)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT  CONCAT(&apos;-&apos;,&apos; MySQL &apos;,&apos;-&apos;) 原来字符串,</div><div class="line">    -&gt; CHAR_LENGTH(CONCAT(&apos;-&apos;,&apos; MySQL &apos;,&apos;-&apos;))  原来字符串长度,</div><div class="line">    -&gt; CONCAT(&apos;-&apos;,TRIM(&apos; MySQL &apos;),&apos;-&apos;) 处理后字符串,</div><div class="line">    -&gt; CHAR_LENGTH(CONCAT(&apos;-&apos;,TRIM(&apos; MySQL &apos;),&apos;-&apos;))  处理后字符串长度;</div><div class="line">+-----------------+-----------------------+--------------------+--------------------------+</div><div class="line">| 原来字符串      | 原来字符串长度        | 处理后字符串       | 处理后字符串长度         |</div><div class="line">+-----------------+-----------------------+--------------------+--------------------------+</div><div class="line">| - MySQL -       |                     9 | -MySQL-            |                        7 |</div><div class="line">+-----------------+-----------------------+--------------------+--------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h4 id="替换字符串insert"><a href="#替换字符串insert" class="headerlink" title="替换字符串insert"></a>替换字符串insert</h4><p>INSERT(str,pos,len,newstr)<br>将字符串str中pos位置开始长度为len的字符串使用newstr来替换</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT &apos;这是MySQL数据库管理系统&apos; 原字符串,</div><div class="line">    -&gt; INSERT(&apos;这是MySQL数据库管理系统&apos;,3,5,&apos;Oracle&apos;) 替换后字符串;</div><div class="line">+----------------------------------+-----------------------------------+</div><div class="line">| 原字符串                         | 替换后字符串                      |</div><div class="line">+----------------------------------+-----------------------------------+</div><div class="line">| 这是MySQL数据库管理系统          | 这是Oracle数据库管理系统          |</div><div class="line">+----------------------------------+-----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
<p>当长度大于原来的字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT &apos;这是MySQL数据库管理系统&apos; 原字符串,</div><div class="line">    -&gt; CHAR_LENGTH(&apos;这是MySQL数据库管理系统&apos;) 字符串长度,</div><div class="line">    -&gt; INSERT(&apos;这是MySQL数据库管理系统&apos;,20,5,&apos;Oracle&apos;) 替换后字符串;</div><div class="line">+----------------------------------+-----------------+----------------------------------+</div><div class="line">| 原字符串                         | 字符串长度      | 替换后字符串                     |</div><div class="line">+----------------------------------+-----------------+----------------------------------+</div><div class="line">| 这是MySQL数据库管理系统          |              14 | 这是MySQL数据库管理系统          |</div><div class="line">+----------------------------------+-----------------+----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div><div class="line"></div><div class="line">mysql&gt; SELECT &apos;这是MySQL数据库管理系统&apos; 原字符串,</div><div class="line">    -&gt; CHAR_LENGTH(&apos;这是MySQL数据库管理系统&apos;) 字符串长度,</div><div class="line">    -&gt; INSERT(&apos;这是MySQL数据库管理系统&apos;,13,5,&apos;Oracle&apos;) 替换后字符串;</div><div class="line">+----------------------------------+-----------------+----------------------------------+</div><div class="line">| 原字符串                         | 字符串长度      | 替换后字符串                     |</div><div class="line">+----------------------------------+-----------------+----------------------------------+</div><div class="line">| 这是MySQL数据库管理系统          |              14 | 这是MySQL数据库管理Oracle        |</div><div class="line">+----------------------------------+-----------------+----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>当所有替换的长度大于原来字符串中所剩下的长度<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT &apos;这是MySQL数据库管理系统&apos; 原字符串,</div><div class="line">    -&gt; CHAR_LENGTH(&apos;这是MySQL数据库管理系统&apos;) 字符串长度,</div><div class="line">    -&gt; INSERT(&apos;这是MySQL数据库管理系统&apos;,6,20,&apos;Oracle&apos;) 替换后字符串;</div><div class="line">+----------------------------------+-----------------+--------------------+</div><div class="line">| 原字符串                         | 字符串长度      | 替换后字符串       |</div><div class="line">+----------------------------------+-----------------+--------------------+</div><div class="line">| 这是MySQL数据库管理系统          |              14 | 这是MySOracle      |</div><div class="line">+----------------------------------+-----------------+--------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<h4 id="替换字符串REPLACE"><a href="#替换字符串REPLACE" class="headerlink" title="替换字符串REPLACE"></a>替换字符串REPLACE</h4><p>replcae(str,substr,newstr)<br>将字符串str中的子字符串substr用字符串newstr替换<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT &apos;这是MySQL数据库管理系统&apos; 原字符串,</div><div class="line">    -&gt; REPLACE(&apos;这是MySQL数据库管理系统&apos;,&apos;mysql&apos;,&apos;Oracle&apos;) 替换后字符串,</div><div class="line">    -&gt; REPLACE(&apos;这是MySQL数据库管理系统&apos;,&apos;MySQL&apos;,&apos;Oracle&apos;) 替换后字符串;</div><div class="line">+----------------------------------+----------------------------------+-----------------------------------+</div><div class="line">| 原字符串                         | 替换后字符串                     | 替换后字符串                      |</div><div class="line">+----------------------------------+----------------------------------+-----------------------------------+</div><div class="line">| 这是MySQL数据库管理系统          | 这是MySQL数据库管理系统          | 这是Oracle数据库管理系统          |</div><div class="line">+----------------------------------+----------------------------------+-----------------------------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>大小写必须一样才会替换，不然不会替换</p>
<h4 id="字符串反转-Reverse-str-字符串反转"><a href="#字符串反转-Reverse-str-字符串反转" class="headerlink" title="字符串反转 Reverse(str)字符串反转.."></a>字符串反转 Reverse(str)字符串反转..</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; select reverse(&apos;abc&apos;);</div><div class="line">+----------------+</div><div class="line">| reverse(&apos;abc&apos;) |</div><div class="line">+----------------+</div><div class="line">| cba            |</div><div class="line">+----------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mysql学习十六常用字符函数&quot;&gt;&lt;a href=&quot;#mysql学习十六常用字符函数&quot; class=&quot;headerlink&quot; title=&quot;mysql学习十六常用字符函数&quot;&gt;&lt;/a&gt;mysql学习十六常用字符函数&lt;/h3&gt;&lt;h4 id=&quot;全并字符串函数-CONCA
    
    </summary>
    
      <category term="mysql" scheme="https://ln0491.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://ln0491.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql学习十五子查询四(在select子句中使用子查询)</title>
    <link href="https://ln0491.github.io/2017/02/16/mysql%E5%AD%A6%E4%B9%A0%E5%8D%81%E4%BA%94%E5%AD%90%E6%9F%A5%E8%AF%A2%E5%9B%9B-%E5%9C%A8select%E5%AD%90%E5%8F%A5%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%AD%90%E6%9F%A5%E8%AF%A2/"/>
    <id>https://ln0491.github.io/2017/02/16/mysql学习十五子查询四-在select子句中使用子查询/</id>
    <published>2017-02-16T05:22:23.000Z</published>
    <updated>2017-02-16T06:44:00.624Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql学习十五子查询四-在select子句中使用子查询"><a href="#mysql学习十五子查询四-在select子句中使用子查询" class="headerlink" title="mysql学习十五子查询四(在select子句中使用子查询)"></a>mysql学习十五子查询四(在select子句中使用子查询)</h3><h4 id="查询出每个部门的编号，名称，位置，部门人数，平均工资"><a href="#查询出每个部门的编号，名称，位置，部门人数，平均工资" class="headerlink" title="查询出每个部门的编号，名称，位置，部门人数，平均工资"></a>查询出每个部门的编号，名称，位置，部门人数，平均工资</h4><p>使用from 实现<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT d.deptno,d.dname,d.loc,tmp.counts,tmp.avgsal</div><div class="line">    -&gt; FROM dept d,(</div><div class="line">    -&gt; SELECT deptno,COUNT(empno) counts,AVG(sal) avgsal</div><div class="line">    -&gt; FROM emp</div><div class="line">    -&gt; GROUP BY deptno</div><div class="line">    -&gt; ) tmp</div><div class="line">    -&gt; WHERE d.deptno=tmp.deptno;</div><div class="line">+--------+------------+----------+--------+-------------+</div><div class="line">| deptno | dname      | loc      | counts | avgsal      |</div><div class="line">+--------+------------+----------+--------+-------------+</div><div class="line">|     10 | ACCOUNTING | NEW YORK |      3 | 2916.666667 |</div><div class="line">|     20 | RESEARCH   | DALLAS   |      5 | 2175.000000 |</div><div class="line">|     30 | SALES      | CHICAGO  |      6 | 1566.666667 |</div><div class="line">+--------+------------+----------+--------+-------------+</div><div class="line">3 rows in set (0.00 sec)</div></pre></td></tr></table></figure></p>
<p>select</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT d.deptno,d.dname,d.loc,</div><div class="line">    -&gt; (SELECT COUNT(empno) FROM emp WHERE emp.deptno=d.deptno GROUP BY emp.deptno) con,</div><div class="line">    -&gt; (SELECT AVG(sal) FROM emp WHERE emp.`deptno`=d.deptno GROUP BY emp.`deptno`) avgsal</div><div class="line">    -&gt; FROM dept d;</div><div class="line">+--------+------------+----------+------+-------------+</div><div class="line">| deptno | dname      | loc      | con  | avgsal      |</div><div class="line">+--------+------------+----------+------+-------------+</div><div class="line">|     10 | ACCOUNTING | NEW YORK |    3 | 2916.666667 |</div><div class="line">|     20 | RESEARCH   | DALLAS   |    5 | 2175.000000 |</div><div class="line">|     30 | SALES      | CHICAGO  |    6 | 1566.666667 |</div><div class="line">|     40 | OPERATIONS | BOSTON   | NULL |        NULL |</div><div class="line">+--------+------------+----------+------+-------------+</div><div class="line">4 rows in set (0.00 sec)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mysql学习十五子查询四-在select子句中使用子查询&quot;&gt;&lt;a href=&quot;#mysql学习十五子查询四-在select子句中使用子查询&quot; class=&quot;headerlink&quot; title=&quot;mysql学习十五子查询四(在select子句中使用子查询)&quot;&gt;&lt;/
    
    </summary>
    
      <category term="mysql" scheme="https://ln0491.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://ln0491.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql学习十四子查询三(在FROM子句中使用子查询)</title>
    <link href="https://ln0491.github.io/2017/02/16/mysql%E5%AD%A6%E4%B9%A0%E5%8D%81%E5%9B%9B%E5%AD%90%E6%9F%A5%E8%AF%A2%E4%B8%89-%E5%9C%A8FROM%E5%AD%90%E5%8F%A5%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%AD%90%E6%9F%A5%E8%AF%A2/"/>
    <id>https://ln0491.github.io/2017/02/16/mysql学习十四子查询三-在FROM子句中使用子查询/</id>
    <published>2017-02-16T05:21:49.000Z</published>
    <updated>2017-02-16T06:30:56.741Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql学习十四子查询三-在FROM子句中使用子查询"><a href="#mysql学习十四子查询三-在FROM子句中使用子查询" class="headerlink" title="mysql学习十四子查询三(在FROM子句中使用子查询)"></a>mysql学习十四子查询三(在FROM子句中使用子查询)</h3><p>FROM子句中使用子查询一般都是返回多行多列，可以将其当作一张数据表</p>
<h4 id="查询出每个部门的编号，名称，位置，部门人数，平均工资"><a href="#查询出每个部门的编号，名称，位置，部门人数，平均工资" class="headerlink" title="查询出每个部门的编号，名称，位置，部门人数，平均工资"></a>查询出每个部门的编号，名称，位置，部门人数，平均工资</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT d.deptno,d.dname,d.loc,dp.counts,dp.avgsal</div><div class="line">    -&gt; FROM dept d,(</div><div class="line">    -&gt; SELECT deptno,COUNT(empno) counts,AVG(sal) avgsal</div><div class="line">    -&gt; FROM emp</div><div class="line">    -&gt; GROUP BY deptno</div><div class="line">    -&gt; )dp</div><div class="line">    -&gt; WHERE d.deptno = dp.deptno;</div><div class="line">+--------+------------+----------+--------+-------------+</div><div class="line">| deptno | dname      | loc      | counts | avgsal      |</div><div class="line">+--------+------------+----------+--------+-------------+</div><div class="line">|     10 | ACCOUNTING | NEW YORK |      3 | 2916.666667 |</div><div class="line">|     20 | RESEARCH   | DALLAS   |      5 | 2175.000000 |</div><div class="line">|     30 | SALES      | CHICAGO  |      6 | 1566.666667 |</div><div class="line">+--------+------------+----------+--------+-------------+</div><div class="line">3 rows in set (0.00 sec)</div></pre></td></tr></table></figure>
<h3 id="查询出所有在部门SALES-销售部-工作的员工编号，姓名，基本工资，奖金，职位，入职日期，部门最高和最低工资"><a href="#查询出所有在部门SALES-销售部-工作的员工编号，姓名，基本工资，奖金，职位，入职日期，部门最高和最低工资" class="headerlink" title="查询出所有在部门SALES(销售部)工作的员工编号，姓名，基本工资，奖金，职位，入职日期，部门最高和最低工资"></a>查询出所有在部门SALES(销售部)工作的员工编号，姓名，基本工资，奖金，职位，入职日期，部门最高和最低工资</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT e.empno,e.ename,e.sal,e.comm,e.job,e.hiredate,e.deptno,temp.maxsal,temp.minsal</div><div class="line">    -&gt; FROM emp e,(</div><div class="line">    -&gt;             SELECT deptno dno,MAX(sal) maxsal,MIN(sal) minsal</div><div class="line">    -&gt;             FROM emp</div><div class="line">    -&gt;             GROUP BY deptno</div><div class="line">    -&gt;             ) temp</div><div class="line">    -&gt; WHERE e.deptno=(SELECT deptno</div><div class="line">    -&gt;                  FROM dept</div><div class="line">    -&gt;                  WHERE dname=&apos;SALES&apos;)</div><div class="line">    -&gt;                  AND e.deptno=temp.dno;</div><div class="line">+-------+--------+---------+---------+----------+---------------------+--------+---------+--------+</div><div class="line">| empno | ename  | sal     | comm    | job      | hiredate            | deptno | maxsal  | minsal |</div><div class="line">+-------+--------+---------+---------+----------+---------------------+--------+---------+--------+</div><div class="line">|  7499 | ALLEN  | 1600.00 |  300.00 | SALESMAN | 1981-02-20 00:00:00 |     30 | 2850.00 | 950.00 |</div><div class="line">|  7521 | WARD   | 1250.00 |  500.00 | SALESMAN | 1981-02-22 00:00:00 |     30 | 2850.00 | 950.00 |</div><div class="line">|  7654 | MARTIN | 1250.00 | 1400.00 | SALESMAN | 1981-09-28 00:00:00 |     30 | 2850.00 | 950.00 |</div><div class="line">|  7698 | BLAKE  | 2850.00 |    NULL | MANAGER  | 1981-05-01 00:00:00 |     30 | 2850.00 | 950.00 |</div><div class="line">|  7844 | TURNER | 1500.00 |    0.00 | SALESMAN | 1981-09-08 00:00:00 |     30 | 2850.00 | 950.00 |</div><div class="line">|  7900 | JAMES  |  950.00 |    NULL | CLERK    | 1981-12-03 00:00:00 |     30 | 2850.00 | 950.00 |</div><div class="line">+-------+--------+---------+---------+----------+---------------------+--------+---------+--------+</div><div class="line">6 rows in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="列出工资比ALLEN或者CLARK多的所有员工的编号，姓名，基本工资，部门名称，领导姓名，部门人数"><a href="#列出工资比ALLEN或者CLARK多的所有员工的编号，姓名，基本工资，部门名称，领导姓名，部门人数" class="headerlink" title="列出工资比ALLEN或者CLARK多的所有员工的编号，姓名，基本工资，部门名称，领导姓名，部门人数"></a>列出工资比ALLEN或者CLARK多的所有员工的编号，姓名，基本工资，部门名称，领导姓名，部门人数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT e.empno,e.ename,e.sal,d.dname,m.ename,temp.con</div><div class="line">    -&gt; FROM emp e,dept d,emp m,(</div><div class="line">    -&gt;                           SELECT deptno dno,COUNT(empno) con</div><div class="line">    -&gt;                           FROM emp</div><div class="line">    -&gt;                           GROUP BY deptno</div><div class="line">    -&gt;                           )temp</div><div class="line">    -&gt; WHERE e.sal&gt;ANY(SELECT sal</div><div class="line">    -&gt;                  FROM emp</div><div class="line">    -&gt;                  WHERE ename IN(&apos;ALLEN&apos;,&apos;CLARK&apos;)</div><div class="line">    -&gt;                  )</div><div class="line">    -&gt;               AND e.ename NOT IN (&apos;ALLEN&apos;,&apos;CLARK&apos;)</div><div class="line">    -&gt;               AND e.deptno=d.deptno</div><div class="line">    -&gt;               AND e.mgr=m.empno</div><div class="line">    -&gt;               AND e.deptno=temp.dno;</div><div class="line">+-------+-------+---------+----------+-------+-----+</div><div class="line">| empno | ename | sal     | dname    | ename | con |</div><div class="line">+-------+-------+---------+----------+-------+-----+</div><div class="line">|  7788 | SCOTT | 3000.00 | RESEARCH | JONES |   5 |</div><div class="line">|  7902 | FORD  | 3000.00 | RESEARCH | JONES |   5 |</div><div class="line">|  7566 | JONES | 2975.00 | RESEARCH | KING  |   5 |</div><div class="line">|  7698 | BLAKE | 2850.00 | SALES    | KING  |   6 |</div><div class="line">+-------+-------+---------+----------+-------+-----+</div><div class="line">4 rows in set (0.00 sec)</div></pre></td></tr></table></figure>
<h4 id="列出公司各个部门的经理（一个部门只有一个）的姓名-工资，部门名称，部门人数，部门平均工资"><a href="#列出公司各个部门的经理（一个部门只有一个）的姓名-工资，部门名称，部门人数，部门平均工资" class="headerlink" title="列出公司各个部门的经理（一个部门只有一个）的姓名,工资，部门名称，部门人数，部门平均工资"></a>列出公司各个部门的经理（一个部门只有一个）的姓名,工资，部门名称，部门人数，部门平均工资</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT e.ename,e.sal,d.deptno,d.dname,tmp.counts,tmp.avgsal,e.job</div><div class="line">    -&gt; FROM emp e,dept d,(</div><div class="line">    -&gt; SELECT deptno,COUNT(empno) counts,AVG(sal) avgsal</div><div class="line">    -&gt; FROM emp</div><div class="line">    -&gt; GROUP BY deptno</div><div class="line">    -&gt; )tmp</div><div class="line">    -&gt; WHERE e.deptno=d.deptno</div><div class="line">    -&gt; AND d.deptno=tmp.deptno</div><div class="line">    -&gt; AND e.job=&apos;manager&apos;;</div><div class="line">+-------+---------+--------+------------+--------+-------------+---------+</div><div class="line">| ename | sal     | deptno | dname      | counts | avgsal      | job     |</div><div class="line">+-------+---------+--------+------------+--------+-------------+---------+</div><div class="line">| CLARK | 2450.00 |     10 | ACCOUNTING |      3 | 2916.666667 | MANAGER |</div><div class="line">| JONES | 2975.00 |     20 | RESEARCH   |      5 | 2175.000000 | MANAGER |</div><div class="line">| BLAKE | 2850.00 |     30 | SALES      |      6 | 1566.666667 | MANAGER |</div><div class="line">+-------+---------+--------+------------+--------+-------------+---------+</div><div class="line">3 rows in set (0.00 sec)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mysql学习十四子查询三-在FROM子句中使用子查询&quot;&gt;&lt;a href=&quot;#mysql学习十四子查询三-在FROM子句中使用子查询&quot; class=&quot;headerlink&quot; title=&quot;mysql学习十四子查询三(在FROM子句中使用子查询)&quot;&gt;&lt;/a&gt;mysq
    
    </summary>
    
      <category term="mysql" scheme="https://ln0491.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://ln0491.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>mysql学习十三子查询二(在HAVING子句中使用子查询)</title>
    <link href="https://ln0491.github.io/2017/02/16/mysql%E5%AD%A6%E4%B9%A0%E5%8D%81%E4%B8%89%E5%AD%90%E6%9F%A5%E8%AF%A2%E4%BA%8C-%E5%9C%A8HAVING%E5%AD%90%E5%8F%A5%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%AD%90%E6%9F%A5%E8%AF%A2/"/>
    <id>https://ln0491.github.io/2017/02/16/mysql学习十三子查询二-在HAVING子句中使用子查询/</id>
    <published>2017-02-16T05:21:30.000Z</published>
    <updated>2017-02-16T06:19:58.347Z</updated>
    
    <content type="html"><![CDATA[<h3 id="mysql学习十三子查询二-在HAVING子句中使用子查询"><a href="#mysql学习十三子查询二-在HAVING子句中使用子查询" class="headerlink" title="mysql学习十三子查询二(在HAVING子句中使用子查询)"></a>mysql学习十三子查询二(在HAVING子句中使用子查询)</h3><p>HAVING子句的主要功能是对分组后的数据进行过滤，如果子查询在HAVING中表示要进行分组过滤，一般返回单行单列的数据</p>
<h4 id="查询部门编号，人数，平均工资，并且要求这些部门的平均工资高于公司的平均工资"><a href="#查询部门编号，人数，平均工资，并且要求这些部门的平均工资高于公司的平均工资" class="headerlink" title="查询部门编号，人数，平均工资，并且要求这些部门的平均工资高于公司的平均工资"></a>查询部门编号，人数，平均工资，并且要求这些部门的平均工资高于公司的平均工资</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT deptno,COUNT(empno),ROUND(AVG(sal),2)</div><div class="line">    -&gt; FROM emp</div><div class="line">    -&gt; GROUP BY deptno</div><div class="line">    -&gt; HAVING AVG(sal)&gt;(</div><div class="line">    -&gt; SELECT AVG(sal)</div><div class="line">    -&gt; FROM emp);</div><div class="line">+--------+--------------+-------------------+</div><div class="line">| deptno | COUNT(empno) | ROUND(AVG(sal),2) |</div><div class="line">+--------+--------------+-------------------+</div><div class="line">|     10 |            3 |           2916.67 |</div><div class="line">|     20 |            5 |           2175.00 |</div><div class="line">+--------+--------------+-------------------+</div><div class="line">2 rows in set (0.00 sec)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;mysql学习十三子查询二-在HAVING子句中使用子查询&quot;&gt;&lt;a href=&quot;#mysql学习十三子查询二-在HAVING子句中使用子查询&quot; class=&quot;headerlink&quot; title=&quot;mysql学习十三子查询二(在HAVING子句中使用子查询)&quot;&gt;&lt;/
    
    </summary>
    
      <category term="mysql" scheme="https://ln0491.github.io/categories/mysql/"/>
    
    
      <category term="mysql" scheme="https://ln0491.github.io/tags/mysql/"/>
    
  </entry>
  
</feed>
